{".class": "MypyFile", "_fullname": "sqlalchemy.sql.sqltypes", "is_partial_stub_package": false, "is_stub": false, "names": {".class": "SymbolTable", "ARRAY": {".class": "SymbolTableNode", "kind": "Gdef", "node": {".class": "TypeInfo", "_promote": null, "abstract_attributes": [], "bases": ["sqlalchemy.sql.base.SchemaEventTarget", "sqlalchemy.sql.sqltypes.Indexable", "sqlalchemy.sql.sqltypes.Concatenable", {".class": "Instance", "args": [{".class": "Instance", "args": [{".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 2}], "type_ref": "typing.Sequence"}], "type_ref": "sqlalchemy.sql.type_api.TypeEngine"}], "declared_metaclass": null, "defn": {".class": "ClassDef", "fullname": "sqlalchemy.sql.sqltypes.ARRAY", "name": "ARRAY", "type_vars": []}, "flags": [], "fullname": "sqlalchemy.sql.sqltypes.ARRAY", "metaclass_type": null, "metadata": {}, "module_name": "sqlalchemy.sql.sqltypes", "mro": ["sqlalchemy.sql.sqltypes.ARRAY", "sqlalchemy.sql.base.SchemaEventTarget", "sqlalchemy.event.registry.EventTarget", "sqlalchemy.sql.sqltypes.Indexable", "sqlalchemy.sql.sqltypes.Concatenable", "sqlalchemy.sql.type_api.TypeEngineMixin", "sqlalchemy.sql.type_api.TypeEngine", "sqlalchemy.sql.visitors.Visitable", "builtins.object"], "names": {".class": "SymbolTable", "Comparator": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "TypeInfo", "_promote": null, "abstract_attributes": [], "bases": [{".class": "Instance", "args": [{".class": "Instance", "args": [{".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 2}], "type_ref": "typing.Sequence"}], "type_ref": "sqlalchemy.sql.sqltypes.Indexable.Comparator"}, {".class": "Instance", "args": [{".class": "Instance", "args": [{".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 2}], "type_ref": "typing.Sequence"}], "type_ref": "sqlalchemy.sql.sqltypes.Concatenable.Comparator"}], "declared_metaclass": null, "defn": {".class": "ClassDef", "fullname": "sqlalchemy.sql.sqltypes.ARRAY.Comparator", "name": "Comparator", "type_vars": []}, "flags": [], "fullname": "sqlalchemy.sql.sqltypes.ARRAY.Comparator", "metaclass_type": null, "metadata": {}, "module_name": "sqlalchemy.sql.sqltypes", "mro": ["sqlalchemy.sql.sqltypes.ARRAY.Comparator", "sqlalchemy.sql.sqltypes.Indexable.Comparator", "sqlalchemy.sql.sqltypes.Concatenable.Comparator", "sqlalchemy.sql.type_api.TypeEngine.Comparator", "sqlalchemy.sql.operators.ColumnOperators", "sqlalchemy.sql.operators.Operators", "builtins.object"], "names": {".class": "SymbolTable", "__slots__": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "Var", "flags": ["is_initialized_in_class"], "fullname": "sqlalchemy.sql.sqltypes.ARRAY.Comparator.__slots__", "name": "__slots__", "type": {".class": "TupleType", "implicit": false, "items": [], "partial_fallback": {".class": "Instance", "args": [{".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 6}], "type_ref": "builtins.tuple"}}}}, "_setup_getitem": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "FuncDef", "arg_kinds": [0, 0], "arg_names": ["self", "index"], "flags": [], "fullname": "sqlalchemy.sql.sqltypes.ARRAY.Comparator._setup_getitem", "name": "_setup_getitem", "type": null}}, "all": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "Decorator", "func": {".class": "FuncDef", "arg_kinds": [0, 0, 1], "arg_names": ["self", "other", "operator"], "flags": ["is_decorated"], "fullname": "sqlalchemy.sql.sqltypes.ARRAY.Comparator.all", "name": "all", "type": null}, "is_overload": false, "var": {".class": "Var", "flags": ["is_initialized_in_class", "is_ready"], "fullname": null, "name": "all", "type": {".class": "CallableType", "arg_kinds": [0, 0, 1], "arg_names": ["self", "other", "operator"], "arg_types": ["sqlalchemy.sql.sqltypes.ARRAY.Comparator", {".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 1}, {".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 1}], "bound_args": [], "def_extras": {}, "fallback": "builtins.function", "implicit": true, "is_ellipsis_args": false, "name": "all of Comparator", "ret_type": {".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 1}, "variables": []}}}}, "any": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "Decorator", "func": {".class": "FuncDef", "arg_kinds": [0, 0, 1], "arg_names": ["self", "other", "operator"], "flags": ["is_decorated"], "fullname": "sqlalchemy.sql.sqltypes.ARRAY.Comparator.any", "name": "any", "type": null}, "is_overload": false, "var": {".class": "Var", "flags": ["is_initialized_in_class", "is_ready"], "fullname": null, "name": "any", "type": {".class": "CallableType", "arg_kinds": [0, 0, 1], "arg_names": ["self", "other", "operator"], "arg_types": ["sqlalchemy.sql.sqltypes.ARRAY.Comparator", {".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 1}, {".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 1}], "bound_args": [], "def_extras": {}, "fallback": "builtins.function", "implicit": true, "is_ellipsis_args": false, "name": "any of Comparator", "ret_type": {".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 1}, "variables": []}}}}, "contains": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "FuncDef", "arg_kinds": [0, 2, 4], "arg_names": ["self", "arg", "kw"], "flags": [], "fullname": "sqlalchemy.sql.sqltypes.ARRAY.Comparator.contains", "name": "contains", "type": null}}, "type": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "Var", "flags": ["is_initialized_in_class", "is_ready"], "fullname": "sqlalchemy.sql.sqltypes.ARRAY.Comparator.type", "name": "type", "type": "sqlalchemy.sql.sqltypes.ARRAY"}}}, "tuple_type": null, "type_vars": [], "typeddict_type": null}}, "__init__": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "FuncDef", "arg_kinds": [0, 0, 1, 1, 1], "arg_names": ["self", "item_type", "as_tuple", "dimensions", "zero_indexes"], "flags": [], "fullname": "sqlalchemy.sql.sqltypes.ARRAY.__init__", "name": "__init__", "type": {".class": "CallableType", "arg_kinds": [0, 0, 1, 1, 1], "arg_names": ["self", "item_type", "as_tuple", "dimensions", "zero_indexes"], "arg_types": ["sqlalchemy.sql.sqltypes.ARRAY", {".class": "TypeAliasType", "args": [{".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 2}], "type_ref": "sqlalchemy.sql._typing._TypeEngineArgument"}, "builtins.bool", {".class": "UnionType", "items": ["builtins.int", {".class": "NoneType"}]}, "builtins.bool"], "bound_args": [], "def_extras": {"first_arg": "self"}, "fallback": "builtins.function", "implicit": false, "is_ellipsis_args": false, "name": "__init__ of ARRAY", "ret_type": {".class": "NoneType"}, "variables": []}}}, "__visit_name__": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "Var", "flags": ["is_initialized_in_class", "is_ready"], "fullname": "sqlalchemy.sql.sqltypes.ARRAY.__visit_name__", "name": "__visit_name__", "type": "builtins.str"}}, "_apply_item_processor": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "FuncDef", "arg_kinds": [0, 0, 0, 0, 0], "arg_names": ["self", "arr", "itemproc", "dim", "collection_callable"], "flags": [], "fullname": "sqlalchemy.sql.sqltypes.ARRAY._apply_item_processor", "name": "_apply_item_processor", "type": null}}, "_is_array": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "Var", "flags": ["is_initialized_in_class"], "fullname": "sqlalchemy.sql.sqltypes.ARRAY._is_array", "name": "_is_array", "type": "builtins.bool"}}, "_set_parent": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "FuncDef", "arg_kinds": [0, 0, 1, 4], "arg_names": ["self", "column", "outer", "kw"], "flags": [], "fullname": "sqlalchemy.sql.sqltypes.ARRAY._set_parent", "name": "_set_parent", "type": null}}, "_set_parent_with_dispatch": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "FuncDef", "arg_kinds": [0, 0], "arg_names": ["self", "parent"], "flags": [], "fullname": "sqlalchemy.sql.sqltypes.ARRAY._set_parent_with_dispatch", "name": "_set_parent_with_dispatch", "type": null}}, "as_tuple": {".class": "SymbolTableNode", "implicit": true, "kind": "Mdef", "node": {".class": "Var", "flags": [], "fullname": "sqlalchemy.sql.sqltypes.ARRAY.as_tuple", "name": "as_tuple", "type": "builtins.bool"}}, "comparator_factory": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "Var", "flags": ["is_initialized_in_class"], "fullname": "sqlalchemy.sql.sqltypes.ARRAY.comparator_factory", "name": "comparator_factory", "type": {".class": "CallableType", "arg_kinds": [0], "arg_names": ["expr"], "arg_types": [{".class": "Instance", "args": [{".class": "Instance", "args": [{".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 2}], "type_ref": "typing.Sequence"}], "type_ref": "sqlalchemy.sql.elements.ColumnElement"}], "bound_args": ["sqlalchemy.sql.sqltypes.ARRAY.Comparator"], "def_extras": {"first_arg": "self"}, "fallback": "builtins.type", "implicit": false, "is_ellipsis_args": false, "name": null, "ret_type": "sqlalchemy.sql.sqltypes.ARRAY.Comparator", "variables": []}}}, "compare_values": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "FuncDef", "arg_kinds": [0, 0, 0], "arg_names": ["self", "x", "y"], "flags": [], "fullname": "sqlalchemy.sql.sqltypes.ARRAY.compare_values", "name": "compare_values", "type": null}}, "dimensions": {".class": "SymbolTableNode", "implicit": true, "kind": "Mdef", "node": {".class": "Var", "flags": [], "fullname": "sqlalchemy.sql.sqltypes.ARRAY.dimensions", "name": "dimensions", "type": {".class": "UnionType", "items": ["builtins.int", {".class": "NoneType"}]}}}, "hashable": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "Decorator", "func": {".class": "FuncDef", "arg_kinds": [0], "arg_names": ["self"], "flags": ["is_property", "is_decorated"], "fullname": "sqlalchemy.sql.sqltypes.ARRAY.hashable", "name": "hashable", "type": null}, "is_overload": false, "var": {".class": "Var", "flags": ["is_initialized_in_class", "is_property", "is_ready"], "fullname": null, "name": "hashable", "type": {".class": "CallableType", "arg_kinds": [0], "arg_names": ["self"], "arg_types": ["sqlalchemy.sql.sqltypes.ARRAY"], "bound_args": [], "def_extras": {}, "fallback": "builtins.function", "implicit": true, "is_ellipsis_args": false, "name": "hashable of ARRAY", "ret_type": {".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 1}, "variables": []}}}}, "item_type": {".class": "SymbolTableNode", "implicit": true, "kind": "Mdef", "node": {".class": "Var", "flags": [], "fullname": "sqlalchemy.sql.sqltypes.ARRAY.item_type", "name": "item_type", "type": {".class": "Instance", "args": [{".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 2}], "type_ref": "sqlalchemy.sql.type_api.TypeEngine"}}}, "literal_processor": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "FuncDef", "arg_kinds": [0, 0], "arg_names": ["self", "dialect"], "flags": [], "fullname": "sqlalchemy.sql.sqltypes.ARRAY.literal_processor", "name": "literal_processor", "type": null}}, "python_type": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "Decorator", "func": {".class": "FuncDef", "arg_kinds": [0], "arg_names": ["self"], "flags": ["is_property", "is_decorated"], "fullname": "sqlalchemy.sql.sqltypes.ARRAY.python_type", "name": "python_type", "type": null}, "is_overload": false, "var": {".class": "Var", "flags": ["is_initialized_in_class", "is_property", "is_ready"], "fullname": null, "name": "python_type", "type": {".class": "CallableType", "arg_kinds": [0], "arg_names": ["self"], "arg_types": ["sqlalchemy.sql.sqltypes.ARRAY"], "bound_args": [], "def_extras": {}, "fallback": "builtins.function", "implicit": true, "is_ellipsis_args": false, "name": "python_type of ARRAY", "ret_type": {".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 1}, "variables": []}}}}, "zero_indexes": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "Var", "flags": ["is_initialized_in_class"], "fullname": "sqlalchemy.sql.sqltypes.ARRAY.zero_indexes", "name": "zero_indexes", "type": "builtins.bool"}}}, "tuple_type": null, "type_vars": [], "typeddict_type": null}}, "Any": {".class": "SymbolTableNode", "cross_ref": "typing.Any", "kind": "Gdef"}, "BIGINT": {".class": "SymbolTableNode", "kind": "Gdef", "node": {".class": "TypeInfo", "_promote": null, "abstract_attributes": [], "bases": ["sqlalchemy.sql.sqltypes.BigInteger"], "declared_metaclass": null, "defn": {".class": "ClassDef", "fullname": "sqlalchemy.sql.sqltypes.BIGINT", "name": "BIGINT", "type_vars": []}, "flags": [], "fullname": "sqlalchemy.sql.sqltypes.BIGINT", "metaclass_type": null, "metadata": {}, "module_name": "sqlalchemy.sql.sqltypes", "mro": ["sqlalchemy.sql.sqltypes.BIGINT", "sqlalchemy.sql.sqltypes.BigInteger", "sqlalchemy.sql.sqltypes.Integer", "sqlalchemy.sql.sqltypes.HasExpressionLookup", "sqlalchemy.sql.type_api.TypeEngineMixin", "sqlalchemy.sql.type_api.TypeEngine", "sqlalchemy.sql.visitors.Visitable", "builtins.object"], "names": {".class": "SymbolTable", "__visit_name__": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "Var", "flags": ["is_initialized_in_class", "is_ready"], "fullname": "sqlalchemy.sql.sqltypes.BIGINT.__visit_name__", "name": "__visit_name__", "type": "builtins.str"}}}, "tuple_type": null, "type_vars": [], "typeddict_type": null}}, "BINARY": {".class": "SymbolTableNode", "kind": "Gdef", "node": {".class": "TypeInfo", "_promote": null, "abstract_attributes": [], "bases": ["sqlalchemy.sql.sqltypes._Binary"], "declared_metaclass": null, "defn": {".class": "ClassDef", "fullname": "sqlalchemy.sql.sqltypes.BINARY", "name": "BINARY", "type_vars": []}, "flags": [], "fullname": "sqlalchemy.sql.sqltypes.BINARY", "metaclass_type": null, "metadata": {}, "module_name": "sqlalchemy.sql.sqltypes", "mro": ["sqlalchemy.sql.sqltypes.BINARY", "sqlalchemy.sql.sqltypes._Binary", "sqlalchemy.sql.type_api.TypeEngine", "sqlalchemy.sql.visitors.Visitable", "builtins.object"], "names": {".class": "SymbolTable", "__visit_name__": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "Var", "flags": ["is_initialized_in_class", "is_ready"], "fullname": "sqlalchemy.sql.sqltypes.BINARY.__visit_name__", "name": "__visit_name__", "type": "builtins.str"}}}, "tuple_type": null, "type_vars": [], "typeddict_type": null}}, "BLOB": {".class": "SymbolTableNode", "kind": "Gdef", "node": {".class": "TypeInfo", "_promote": null, "abstract_attributes": [], "bases": ["sqlalchemy.sql.sqltypes.LargeBinary"], "declared_metaclass": null, "defn": {".class": "ClassDef", "fullname": "sqlalchemy.sql.sqltypes.BLOB", "name": "BLOB", "type_vars": []}, "flags": [], "fullname": "sqlalchemy.sql.sqltypes.BLOB", "metaclass_type": null, "metadata": {}, "module_name": "sqlalchemy.sql.sqltypes", "mro": ["sqlalchemy.sql.sqltypes.BLOB", "sqlalchemy.sql.sqltypes.LargeBinary", "sqlalchemy.sql.sqltypes._Binary", "sqlalchemy.sql.type_api.TypeEngine", "sqlalchemy.sql.visitors.Visitable", "builtins.object"], "names": {".class": "SymbolTable", "__visit_name__": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "Var", "flags": ["is_initialized_in_class", "is_ready"], "fullname": "sqlalchemy.sql.sqltypes.BLOB.__visit_name__", "name": "__visit_name__", "type": "builtins.str"}}}, "tuple_type": null, "type_vars": [], "typeddict_type": null}}, "BOOLEAN": {".class": "SymbolTableNode", "kind": "Gdef", "node": {".class": "TypeInfo", "_promote": null, "abstract_attributes": [], "bases": ["sqlalchemy.sql.sqltypes.Boolean"], "declared_metaclass": null, "defn": {".class": "ClassDef", "fullname": "sqlalchemy.sql.sqltypes.BOOLEAN", "name": "BOOLEAN", "type_vars": []}, "flags": [], "fullname": "sqlalchemy.sql.sqltypes.BOOLEAN", "metaclass_type": null, "metadata": {}, "module_name": "sqlalchemy.sql.sqltypes", "mro": ["sqlalchemy.sql.sqltypes.BOOLEAN", "sqlalchemy.sql.sqltypes.Boolean", "sqlalchemy.sql.sqltypes.SchemaType", "sqlalchemy.sql.base.SchemaEventTarget", "sqlalchemy.event.registry.EventTarget", "sqlalchemy.sql.type_api.Emulated", "sqlalchemy.sql.type_api.TypeEngineMixin", "sqlalchemy.sql.type_api.TypeEngine", "sqlalchemy.sql.visitors.Visitable", "builtins.object"], "names": {".class": "SymbolTable", "__visit_name__": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "Var", "flags": ["is_initialized_in_class", "is_ready"], "fullname": "sqlalchemy.sql.sqltypes.BOOLEAN.__visit_name__", "name": "__visit_name__", "type": "builtins.str"}}}, "tuple_type": null, "type_vars": [], "typeddict_type": null}}, "BOOLEANTYPE": {".class": "SymbolTableNode", "kind": "Gdef", "node": {".class": "Var", "flags": [], "fullname": "sqlalchemy.sql.sqltypes.BOOLEANTYPE", "name": "BOOLEANTYPE", "type": "sqlalchemy.sql.sqltypes.Boolean"}}, "BigInteger": {".class": "SymbolTableNode", "kind": "Gdef", "node": {".class": "TypeInfo", "_promote": null, "abstract_attributes": [], "bases": ["sqlalchemy.sql.sqltypes.Integer"], "declared_metaclass": null, "defn": {".class": "ClassDef", "fullname": "sqlalchemy.sql.sqltypes.BigInteger", "name": "BigInteger", "type_vars": []}, "flags": [], "fullname": "sqlalchemy.sql.sqltypes.BigInteger", "metaclass_type": null, "metadata": {}, "module_name": "sqlalchemy.sql.sqltypes", "mro": ["sqlalchemy.sql.sqltypes.BigInteger", "sqlalchemy.sql.sqltypes.Integer", "sqlalchemy.sql.sqltypes.HasExpressionLookup", "sqlalchemy.sql.type_api.TypeEngineMixin", "sqlalchemy.sql.type_api.TypeEngine", "sqlalchemy.sql.visitors.Visitable", "builtins.object"], "names": {".class": "SymbolTable", "__visit_name__": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "Var", "flags": ["is_initialized_in_class", "is_ready"], "fullname": "sqlalchemy.sql.sqltypes.BigInteger.__visit_name__", "name": "__visit_name__", "type": "builtins.str"}}}, "tuple_type": null, "type_vars": [], "typeddict_type": null}}, "Boolean": {".class": "SymbolTableNode", "kind": "Gdef", "node": {".class": "TypeInfo", "_promote": null, "abstract_attributes": [], "bases": ["sqlalchemy.sql.sqltypes.SchemaType", "sqlalchemy.sql.type_api.Emulated", {".class": "Instance", "args": ["builtins.bool"], "type_ref": "sqlalchemy.sql.type_api.TypeEngine"}], "declared_metaclass": null, "defn": {".class": "ClassDef", "fullname": "sqlalchemy.sql.sqltypes.Boolean", "name": "Boolean", "type_vars": []}, "flags": [], "fullname": "sqlalchemy.sql.sqltypes.Boolean", "metaclass_type": null, "metadata": {}, "module_name": "sqlalchemy.sql.sqltypes", "mro": ["sqlalchemy.sql.sqltypes.Boolean", "sqlalchemy.sql.sqltypes.SchemaType", "sqlalchemy.sql.base.SchemaEventTarget", "sqlalchemy.event.registry.EventTarget", "sqlalchemy.sql.type_api.Emulated", "sqlalchemy.sql.type_api.TypeEngineMixin", "sqlalchemy.sql.type_api.TypeEngine", "sqlalchemy.sql.visitors.Visitable", "builtins.object"], "names": {".class": "SymbolTable", "__init__": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "FuncDef", "arg_kinds": [0, 1, 1, 1, 1], "arg_names": ["self", "create_constraint", "name", "_create_events", "_adapted_from"], "flags": [], "fullname": "sqlalchemy.sql.sqltypes.Boolean.__init__", "name": "__init__", "type": {".class": "CallableType", "arg_kinds": [0, 1, 1, 1, 1], "arg_names": ["self", "create_constraint", "name", "_create_events", "_adapted_from"], "arg_types": ["sqlalchemy.sql.sqltypes.Boolean", "builtins.bool", {".class": "UnionType", "items": ["builtins.str", {".class": "NoneType"}]}, "builtins.bool", {".class": "UnionType", "items": ["sqlalchemy.sql.sqltypes.SchemaType", {".class": "NoneType"}]}], "bound_args": [], "def_extras": {"first_arg": "self"}, "fallback": "builtins.function", "implicit": false, "is_ellipsis_args": false, "name": "__init__ of Boolean", "ret_type": {".class": "NoneType"}, "variables": []}}}, "__visit_name__": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "Var", "flags": ["is_initialized_in_class", "is_ready"], "fullname": "sqlalchemy.sql.sqltypes.Boolean.__visit_name__", "name": "__visit_name__", "type": "builtins.str"}}, "_set_table": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "Decorator", "func": {".class": "FuncDef", "arg_kinds": [0, 0, 0], "arg_names": ["self", "column", "table"], "flags": ["is_decorated"], "fullname": "sqlalchemy.sql.sqltypes.Boolean._set_table", "name": "_set_table", "type": null}, "is_overload": false, "var": {".class": "Var", "flags": ["is_initialized_in_class", "is_ready"], "fullname": null, "name": "_set_table", "type": {".class": "CallableType", "arg_kinds": [0, 0, 0], "arg_names": ["self", "column", "table"], "arg_types": ["sqlalchemy.sql.sqltypes.Boolean", {".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 1}, {".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 1}], "bound_args": [], "def_extras": {}, "fallback": "builtins.function", "implicit": true, "is_ellipsis_args": false, "name": "_set_table of Boolean", "ret_type": {".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 1}, "variables": []}}}}, "_should_create_constraint": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "FuncDef", "arg_kinds": [0, 0, 4], "arg_names": ["self", "compiler", "kw"], "flags": [], "fullname": "sqlalchemy.sql.sqltypes.Boolean._should_create_constraint", "name": "_should_create_constraint", "type": null}}, "_strict_as_bool": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "FuncDef", "arg_kinds": [0, 0], "arg_names": ["self", "value"], "flags": [], "fullname": "sqlalchemy.sql.sqltypes.Boolean._strict_as_bool", "name": "_strict_as_bool", "type": null}}, "_strict_bools": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "Var", "flags": ["is_initialized_in_class"], "fullname": "sqlalchemy.sql.sqltypes.Boolean._strict_bools", "name": "_strict_bools", "type": {".class": "Instance", "args": [{".class": "UnionType", "items": ["builtins.bool", {".class": "NoneType"}]}], "type_ref": "builtins.frozenset"}}}, "bind_processor": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "FuncDef", "arg_kinds": [0, 0], "arg_names": ["self", "dialect"], "flags": [], "fullname": "sqlalchemy.sql.sqltypes.Boolean.bind_processor", "name": "bind_processor", "type": null}}, "create_constraint": {".class": "SymbolTableNode", "implicit": true, "kind": "Mdef", "node": {".class": "Var", "flags": [], "fullname": "sqlalchemy.sql.sqltypes.Boolean.create_constraint", "name": "create_constraint", "type": "builtins.bool"}}, "literal_processor": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "FuncDef", "arg_kinds": [0, 0], "arg_names": ["self", "dialect"], "flags": [], "fullname": "sqlalchemy.sql.sqltypes.Boolean.literal_processor", "name": "literal_processor", "type": null}}, "native": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "Var", "flags": ["is_initialized_in_class"], "fullname": "sqlalchemy.sql.sqltypes.Boolean.native", "name": "native", "type": "builtins.bool"}}, "python_type": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "Decorator", "func": {".class": "FuncDef", "arg_kinds": [0], "arg_names": ["self"], "flags": ["is_property", "is_decorated"], "fullname": "sqlalchemy.sql.sqltypes.Boolean.python_type", "name": "python_type", "type": null}, "is_overload": false, "var": {".class": "Var", "flags": ["is_initialized_in_class", "is_property", "is_ready"], "fullname": null, "name": "python_type", "type": {".class": "CallableType", "arg_kinds": [0], "arg_names": ["self"], "arg_types": ["sqlalchemy.sql.sqltypes.Boolean"], "bound_args": [], "def_extras": {}, "fallback": "builtins.function", "implicit": true, "is_ellipsis_args": false, "name": "python_type of Boolean", "ret_type": {".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 1}, "variables": []}}}}, "result_processor": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "FuncDef", "arg_kinds": [0, 0, 0], "arg_names": ["self", "dialect", "coltype"], "flags": [], "fullname": "sqlalchemy.sql.sqltypes.Boolean.result_processor", "name": "result_processor", "type": null}}}, "tuple_type": null, "type_vars": [], "typeddict_type": null}}, "CHAR": {".class": "SymbolTableNode", "kind": "Gdef", "node": {".class": "TypeInfo", "_promote": null, "abstract_attributes": [], "bases": ["sqlalchemy.sql.sqltypes.String"], "declared_metaclass": null, "defn": {".class": "ClassDef", "fullname": "sqlalchemy.sql.sqltypes.CHAR", "name": "CHAR", "type_vars": []}, "flags": [], "fullname": "sqlalchemy.sql.sqltypes.CHAR", "metaclass_type": null, "metadata": {}, "module_name": "sqlalchemy.sql.sqltypes", "mro": ["sqlalchemy.sql.sqltypes.CHAR", "sqlalchemy.sql.sqltypes.String", "sqlalchemy.sql.sqltypes.Concatenable", "sqlalchemy.sql.type_api.TypeEngineMixin", "sqlalchemy.sql.type_api.TypeEngine", "sqlalchemy.sql.visitors.Visitable", "builtins.object"], "names": {".class": "SymbolTable", "__visit_name__": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "Var", "flags": ["is_initialized_in_class", "is_ready"], "fullname": "sqlalchemy.sql.sqltypes.CHAR.__visit_name__", "name": "__visit_name__", "type": "builtins.str"}}}, "tuple_type": null, "type_vars": [], "typeddict_type": null}}, "CLOB": {".class": "SymbolTableNode", "kind": "Gdef", "node": {".class": "TypeInfo", "_promote": null, "abstract_attributes": [], "bases": ["sqlalchemy.sql.sqltypes.Text"], "declared_metaclass": null, "defn": {".class": "ClassDef", "fullname": "sqlalchemy.sql.sqltypes.CLOB", "name": "CLOB", "type_vars": []}, "flags": [], "fullname": "sqlalchemy.sql.sqltypes.CLOB", "metaclass_type": null, "metadata": {}, "module_name": "sqlalchemy.sql.sqltypes", "mro": ["sqlalchemy.sql.sqltypes.CLOB", "sqlalchemy.sql.sqltypes.Text", "sqlalchemy.sql.sqltypes.String", "sqlalchemy.sql.sqltypes.Concatenable", "sqlalchemy.sql.type_api.TypeEngineMixin", "sqlalchemy.sql.type_api.TypeEngine", "sqlalchemy.sql.visitors.Visitable", "builtins.object"], "names": {".class": "SymbolTable", "__visit_name__": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "Var", "flags": ["is_initialized_in_class", "is_ready"], "fullname": "sqlalchemy.sql.sqltypes.CLOB.__visit_name__", "name": "__visit_name__", "type": "builtins.str"}}}, "tuple_type": null, "type_vars": [], "typeddict_type": null}}, "Callable": {".class": "SymbolTableNode", "cross_ref": "typing.Callable", "kind": "Gdef"}, "Concatenable": {".class": "SymbolTableNode", "kind": "Gdef", "node": {".class": "TypeInfo", "_promote": null, "abstract_attributes": [], "bases": ["sqlalchemy.sql.type_api.TypeEngineMixin"], "declared_metaclass": null, "defn": {".class": "ClassDef", "fullname": "sqlalchemy.sql.sqltypes.Concatenable", "name": "Concatenable", "type_vars": []}, "flags": [], "fullname": "sqlalchemy.sql.sqltypes.Concatenable", "metaclass_type": null, "metadata": {}, "module_name": "sqlalchemy.sql.sqltypes", "mro": ["sqlalchemy.sql.sqltypes.Concatenable", "sqlalchemy.sql.type_api.TypeEngineMixin", "builtins.object"], "names": {".class": "SymbolTable", "Comparator": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "TypeInfo", "_promote": null, "abstract_attributes": [], "bases": [{".class": "Instance", "args": [{".class": "TypeVarType", "fullname": "sqlalchemy.sql.sqltypes._T", "id": 1, "name": "_T", "upper_bound": {".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 2}, "values": [], "variance": 0}], "type_ref": "sqlalchemy.sql.type_api.TypeEngine.Comparator"}], "declared_metaclass": null, "defn": {".class": "ClassDef", "fullname": "sqlalchemy.sql.sqltypes.Concatenable.Comparator", "name": "Comparator", "type_vars": [{".class": "TypeVarDef", "fullname": "sqlalchemy.sql.sqltypes._T", "id": 1, "name": "_T", "upper_bound": {".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 2}, "values": [], "variance": 0}]}, "flags": [], "fullname": "sqlalchemy.sql.sqltypes.Concatenable.Comparator", "metaclass_type": null, "metadata": {}, "module_name": "sqlalchemy.sql.sqltypes", "mro": ["sqlalchemy.sql.sqltypes.Concatenable.Comparator", "sqlalchemy.sql.type_api.TypeEngine.Comparator", "sqlalchemy.sql.operators.ColumnOperators", "sqlalchemy.sql.operators.Operators", "builtins.object"], "names": {".class": "SymbolTable", "__slots__": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "Var", "flags": ["is_initialized_in_class"], "fullname": "sqlalchemy.sql.sqltypes.Concatenable.Comparator.__slots__", "name": "__slots__", "type": {".class": "TupleType", "implicit": false, "items": [], "partial_fallback": {".class": "Instance", "args": [{".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 6}], "type_ref": "builtins.tuple"}}}}, "_adapt_expression": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "FuncDef", "arg_kinds": [0, 0, 0], "arg_names": ["self", "op", "other_comparator"], "flags": [], "fullname": "sqlalchemy.sql.sqltypes.Concatenable.Comparator._adapt_expression", "name": "_adapt_expression", "type": {".class": "CallableType", "arg_kinds": [0, 0, 0], "arg_names": ["self", "op", "other_comparator"], "arg_types": [{".class": "Instance", "args": [{".class": "TypeVarType", "fullname": "sqlalchemy.sql.sqltypes._T", "id": 1, "name": "_T", "upper_bound": {".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 2}, "values": [], "variance": 0}], "type_ref": "sqlalchemy.sql.sqltypes.Concatenable.Comparator"}, "sqlalchemy.sql.operators.OperatorType", {".class": "Instance", "args": [{".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 2}], "type_ref": "sqlalchemy.sql.type_api.TypeEngine.Comparator"}], "bound_args": [], "def_extras": {"first_arg": "self"}, "fallback": "builtins.function", "implicit": false, "is_ellipsis_args": false, "name": "_adapt_expression of Comparator", "ret_type": {".class": "TupleType", "implicit": false, "items": ["sqlalchemy.sql.operators.OperatorType", {".class": "Instance", "args": [{".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 2}], "type_ref": "sqlalchemy.sql.type_api.TypeEngine"}], "partial_fallback": {".class": "Instance", "args": [{".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 6}], "type_ref": "builtins.tuple"}}, "variables": []}}}}, "tuple_type": null, "type_vars": ["_T"], "typeddict_type": null}}, "comparator_factory": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "Var", "flags": ["is_initialized_in_class", "is_ready"], "fullname": "sqlalchemy.sql.sqltypes.Concatenable.comparator_factory", "name": "comparator_factory", "type": {".class": "Instance", "args": [{".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 2}], "type_ref": "sqlalchemy.sql.type_api._ComparatorFactory"}}}}, "tuple_type": null, "type_vars": [], "typeddict_type": null}}, "DATE": {".class": "SymbolTableNode", "kind": "Gdef", "node": {".class": "TypeInfo", "_promote": null, "abstract_attributes": [], "bases": ["sqlalchemy.sql.sqltypes.Date"], "declared_metaclass": null, "defn": {".class": "ClassDef", "fullname": "sqlalchemy.sql.sqltypes.DATE", "name": "DATE", "type_vars": []}, "flags": [], "fullname": "sqlalchemy.sql.sqltypes.DATE", "metaclass_type": null, "metadata": {}, "module_name": "sqlalchemy.sql.sqltypes", "mro": ["sqlalchemy.sql.sqltypes.DATE", "sqlalchemy.sql.sqltypes.Date", "sqlalchemy.sql.sqltypes._RenderISO8601NoT", "sqlalchemy.sql.sqltypes.HasExpressionLookup", "sqlalchemy.sql.type_api.TypeEngineMixin", "sqlalchemy.sql.type_api.TypeEngine", "sqlalchemy.sql.visitors.Visitable", "builtins.object"], "names": {".class": "SymbolTable", "__visit_name__": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "Var", "flags": ["is_initialized_in_class", "is_ready"], "fullname": "sqlalchemy.sql.sqltypes.DATE.__visit_name__", "name": "__visit_name__", "type": "builtins.str"}}}, "tuple_type": null, "type_vars": [], "typeddict_type": null}}, "DATETIME": {".class": "SymbolTableNode", "kind": "Gdef", "node": {".class": "TypeInfo", "_promote": null, "abstract_attributes": [], "bases": ["sqlalchemy.sql.sqltypes.DateTime"], "declared_metaclass": null, "defn": {".class": "ClassDef", "fullname": "sqlalchemy.sql.sqltypes.DATETIME", "name": "DATETIME", "type_vars": []}, "flags": [], "fullname": "sqlalchemy.sql.sqltypes.DATETIME", "metaclass_type": null, "metadata": {}, "module_name": "sqlalchemy.sql.sqltypes", "mro": ["sqlalchemy.sql.sqltypes.DATETIME", "sqlalchemy.sql.sqltypes.DateTime", "sqlalchemy.sql.sqltypes._RenderISO8601NoT", "sqlalchemy.sql.sqltypes.HasExpressionLookup", "sqlalchemy.sql.type_api.TypeEngineMixin", "sqlalchemy.sql.type_api.TypeEngine", "sqlalchemy.sql.visitors.Visitable", "builtins.object"], "names": {".class": "SymbolTable", "__visit_name__": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "Var", "flags": ["is_initialized_in_class", "is_ready"], "fullname": "sqlalchemy.sql.sqltypes.DATETIME.__visit_name__", "name": "__visit_name__", "type": "builtins.str"}}}, "tuple_type": null, "type_vars": [], "typeddict_type": null}}, "DATETIME_TIMEZONE": {".class": "SymbolTableNode", "kind": "Gdef", "node": {".class": "Var", "flags": [], "fullname": "sqlalchemy.sql.sqltypes.DATETIME_TIMEZONE", "name": "DATETIME_TIMEZONE", "type": "sqlalchemy.sql.sqltypes.DateTime"}}, "DECIMAL": {".class": "SymbolTableNode", "kind": "Gdef", "node": {".class": "TypeInfo", "_promote": null, "abstract_attributes": [], "bases": [{".class": "Instance", "args": [{".class": "TypeVarType", "fullname": "sqlalchemy.sql.sqltypes._N", "id": 1, "name": "_N", "upper_bound": {".class": "UnionType", "items": ["decimal.Decimal", "builtins.float"]}, "values": [], "variance": 0}], "type_ref": "sqlalchemy.sql.sqltypes.Numeric"}], "declared_metaclass": null, "defn": {".class": "ClassDef", "fullname": "sqlalchemy.sql.sqltypes.DECIMAL", "name": "DECIMAL", "type_vars": [{".class": "TypeVarDef", "fullname": "sqlalchemy.sql.sqltypes._N", "id": 1, "name": "_N", "upper_bound": {".class": "UnionType", "items": ["decimal.Decimal", "builtins.float"]}, "values": [], "variance": 0}]}, "flags": [], "fullname": "sqlalchemy.sql.sqltypes.DECIMAL", "metaclass_type": null, "metadata": {}, "module_name": "sqlalchemy.sql.sqltypes", "mro": ["sqlalchemy.sql.sqltypes.DECIMAL", "sqlalchemy.sql.sqltypes.Numeric", "sqlalchemy.sql.sqltypes.HasExpressionLookup", "sqlalchemy.sql.type_api.TypeEngineMixin", "sqlalchemy.sql.type_api.TypeEngine", "sqlalchemy.sql.visitors.Visitable", "builtins.object"], "names": {".class": "SymbolTable", "__visit_name__": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "Var", "flags": ["is_initialized_in_class", "is_ready"], "fullname": "sqlalchemy.sql.sqltypes.DECIMAL.__visit_name__", "name": "__visit_name__", "type": "builtins.str"}}}, "tuple_type": null, "type_vars": ["_N"], "typeddict_type": null}}, "DOUBLE": {".class": "SymbolTableNode", "kind": "Gdef", "node": {".class": "TypeInfo", "_promote": null, "abstract_attributes": [], "bases": [{".class": "Instance", "args": [{".class": "TypeVarType", "fullname": "sqlalchemy.sql.sqltypes._N", "id": 1, "name": "_N", "upper_bound": {".class": "UnionType", "items": ["decimal.Decimal", "builtins.float"]}, "values": [], "variance": 0}], "type_ref": "sqlalchemy.sql.sqltypes.Double"}], "declared_metaclass": null, "defn": {".class": "ClassDef", "fullname": "sqlalchemy.sql.sqltypes.DOUBLE", "name": "DOUBLE", "type_vars": [{".class": "TypeVarDef", "fullname": "sqlalchemy.sql.sqltypes._N", "id": 1, "name": "_N", "upper_bound": {".class": "UnionType", "items": ["decimal.Decimal", "builtins.float"]}, "values": [], "variance": 0}]}, "flags": [], "fullname": "sqlalchemy.sql.sqltypes.DOUBLE", "metaclass_type": null, "metadata": {}, "module_name": "sqlalchemy.sql.sqltypes", "mro": ["sqlalchemy.sql.sqltypes.DOUBLE", "sqlalchemy.sql.sqltypes.Double", "sqlalchemy.sql.sqltypes.Float", "sqlalchemy.sql.sqltypes.Numeric", "sqlalchemy.sql.sqltypes.HasExpressionLookup", "sqlalchemy.sql.type_api.TypeEngineMixin", "sqlalchemy.sql.type_api.TypeEngine", "sqlalchemy.sql.visitors.Visitable", "builtins.object"], "names": {".class": "SymbolTable", "__visit_name__": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "Var", "flags": ["is_initialized_in_class", "is_ready"], "fullname": "sqlalchemy.sql.sqltypes.DOUBLE.__visit_name__", "name": "__visit_name__", "type": "builtins.str"}}}, "tuple_type": null, "type_vars": ["_N"], "typeddict_type": null}}, "DOUBLE_PRECISION": {".class": "SymbolTableNode", "kind": "Gdef", "node": {".class": "TypeInfo", "_promote": null, "abstract_attributes": [], "bases": [{".class": "Instance", "args": [{".class": "TypeVarType", "fullname": "sqlalchemy.sql.sqltypes._N", "id": 1, "name": "_N", "upper_bound": {".class": "UnionType", "items": ["decimal.Decimal", "builtins.float"]}, "values": [], "variance": 0}], "type_ref": "sqlalchemy.sql.sqltypes.Double"}], "declared_metaclass": null, "defn": {".class": "ClassDef", "fullname": "sqlalchemy.sql.sqltypes.DOUBLE_PRECISION", "name": "DOUBLE_PRECISION", "type_vars": [{".class": "TypeVarDef", "fullname": "sqlalchemy.sql.sqltypes._N", "id": 1, "name": "_N", "upper_bound": {".class": "UnionType", "items": ["decimal.Decimal", "builtins.float"]}, "values": [], "variance": 0}]}, "flags": [], "fullname": "sqlalchemy.sql.sqltypes.DOUBLE_PRECISION", "metaclass_type": null, "metadata": {}, "module_name": "sqlalchemy.sql.sqltypes", "mro": ["sqlalchemy.sql.sqltypes.DOUBLE_PRECISION", "sqlalchemy.sql.sqltypes.Double", "sqlalchemy.sql.sqltypes.Float", "sqlalchemy.sql.sqltypes.Numeric", "sqlalchemy.sql.sqltypes.HasExpressionLookup", "sqlalchemy.sql.type_api.TypeEngineMixin", "sqlalchemy.sql.type_api.TypeEngine", "sqlalchemy.sql.visitors.Visitable", "builtins.object"], "names": {".class": "SymbolTable", "__visit_name__": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "Var", "flags": ["is_initialized_in_class", "is_ready"], "fullname": "sqlalchemy.sql.sqltypes.DOUBLE_PRECISION.__visit_name__", "name": "__visit_name__", "type": "builtins.str"}}}, "tuple_type": null, "type_vars": ["_N"], "typeddict_type": null}}, "Date": {".class": "SymbolTableNode", "kind": "Gdef", "node": {".class": "TypeInfo", "_promote": null, "abstract_attributes": [], "bases": ["sqlalchemy.sql.sqltypes._RenderISO8601NoT", "sqlalchemy.sql.sqltypes.HasExpressionLookup", {".class": "Instance", "args": ["datetime.date"], "type_ref": "sqlalchemy.sql.type_api.TypeEngine"}], "declared_metaclass": null, "defn": {".class": "ClassDef", "fullname": "sqlalchemy.sql.sqltypes.Date", "name": "Date", "type_vars": []}, "flags": [], "fullname": "sqlalchemy.sql.sqltypes.Date", "metaclass_type": null, "metadata": {}, "module_name": "sqlalchemy.sql.sqltypes", "mro": ["sqlalchemy.sql.sqltypes.Date", "sqlalchemy.sql.sqltypes._RenderISO8601NoT", "sqlalchemy.sql.sqltypes.HasExpressionLookup", "sqlalchemy.sql.type_api.TypeEngineMixin", "sqlalchemy.sql.type_api.TypeEngine", "sqlalchemy.sql.visitors.Visitable", "builtins.object"], "names": {".class": "SymbolTable", "__visit_name__": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "Var", "flags": ["is_initialized_in_class", "is_ready"], "fullname": "sqlalchemy.sql.sqltypes.Date.__visit_name__", "name": "__visit_name__", "type": "builtins.str"}}, "_expression_adaptations": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "Decorator", "func": {".class": "FuncDef", "arg_kinds": [0], "arg_names": ["self"], "flags": ["is_decorated"], "fullname": "sqlalchemy.sql.sqltypes.Date._expression_adaptations", "name": "_expression_adaptations", "type": null}, "is_overload": false, "var": {".class": "Var", "flags": ["is_initialized_in_class", "is_ready"], "fullname": null, "name": "_expression_adaptations", "type": {".class": "Instance", "args": [{".class": "AnyType", "missing_import_name": null, "source_any": {".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 1}, "type_of_any": 7}], "type_ref": "sqlalchemy.util.langhelpers.generic_fn_descriptor"}}}}, "get_dbapi_type": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "FuncDef", "arg_kinds": [0, 0], "arg_names": ["self", "dbapi"], "flags": [], "fullname": "sqlalchemy.sql.sqltypes.Date.get_dbapi_type", "name": "get_dbapi_type", "type": null}}, "literal_processor": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "FuncDef", "arg_kinds": [0, 0], "arg_names": ["self", "dialect"], "flags": [], "fullname": "sqlalchemy.sql.sqltypes.Date.literal_processor", "name": "literal_processor", "type": null}}, "python_type": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "Decorator", "func": {".class": "FuncDef", "arg_kinds": [0], "arg_names": ["self"], "flags": ["is_property", "is_decorated"], "fullname": "sqlalchemy.sql.sqltypes.Date.python_type", "name": "python_type", "type": null}, "is_overload": false, "var": {".class": "Var", "flags": ["is_initialized_in_class", "is_property", "is_ready"], "fullname": null, "name": "python_type", "type": {".class": "CallableType", "arg_kinds": [0], "arg_names": ["self"], "arg_types": ["sqlalchemy.sql.sqltypes.Date"], "bound_args": [], "def_extras": {}, "fallback": "builtins.function", "implicit": true, "is_ellipsis_args": false, "name": "python_type of Date", "ret_type": {".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 1}, "variables": []}}}}}, "tuple_type": null, "type_vars": [], "typeddict_type": null}}, "DateTime": {".class": "SymbolTableNode", "kind": "Gdef", "node": {".class": "TypeInfo", "_promote": null, "abstract_attributes": [], "bases": ["sqlalchemy.sql.sqltypes._RenderISO8601NoT", "sqlalchemy.sql.sqltypes.HasExpressionLookup", {".class": "Instance", "args": ["datetime.datetime"], "type_ref": "sqlalchemy.sql.type_api.TypeEngine"}], "declared_metaclass": null, "defn": {".class": "ClassDef", "fullname": "sqlalchemy.sql.sqltypes.DateTime", "name": "DateTime", "type_vars": []}, "flags": [], "fullname": "sqlalchemy.sql.sqltypes.DateTime", "metaclass_type": null, "metadata": {}, "module_name": "sqlalchemy.sql.sqltypes", "mro": ["sqlalchemy.sql.sqltypes.DateTime", "sqlalchemy.sql.sqltypes._RenderISO8601NoT", "sqlalchemy.sql.sqltypes.HasExpressionLookup", "sqlalchemy.sql.type_api.TypeEngineMixin", "sqlalchemy.sql.type_api.TypeEngine", "sqlalchemy.sql.visitors.Visitable", "builtins.object"], "names": {".class": "SymbolTable", "__init__": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "FuncDef", "arg_kinds": [0, 1], "arg_names": ["self", "timezone"], "flags": [], "fullname": "sqlalchemy.sql.sqltypes.DateTime.__init__", "name": "__init__", "type": {".class": "CallableType", "arg_kinds": [0, 1], "arg_names": ["self", "timezone"], "arg_types": ["sqlalchemy.sql.sqltypes.DateTime", "builtins.bool"], "bound_args": [], "def_extras": {"first_arg": "self"}, "fallback": "builtins.function", "implicit": false, "is_ellipsis_args": false, "name": "__init__ of DateTime", "ret_type": {".class": "NoneType"}, "variables": []}}}, "__visit_name__": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "Var", "flags": ["is_initialized_in_class", "is_ready"], "fullname": "sqlalchemy.sql.sqltypes.DateTime.__visit_name__", "name": "__visit_name__", "type": "builtins.str"}}, "_expression_adaptations": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "Decorator", "func": {".class": "FuncDef", "arg_kinds": [0], "arg_names": ["self"], "flags": ["is_decorated"], "fullname": "sqlalchemy.sql.sqltypes.DateTime._expression_adaptations", "name": "_expression_adaptations", "type": null}, "is_overload": false, "var": {".class": "Var", "flags": ["is_initialized_in_class", "is_ready"], "fullname": null, "name": "_expression_adaptations", "type": {".class": "Instance", "args": [{".class": "AnyType", "missing_import_name": null, "source_any": {".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 1}, "type_of_any": 7}], "type_ref": "sqlalchemy.util.langhelpers.generic_fn_descriptor"}}}}, "_resolve_for_literal": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "FuncDef", "arg_kinds": [0, 0], "arg_names": ["self", "value"], "flags": [], "fullname": "sqlalchemy.sql.sqltypes.DateTime._resolve_for_literal", "name": "_resolve_for_literal", "type": null}}, "get_dbapi_type": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "FuncDef", "arg_kinds": [0, 0], "arg_names": ["self", "dbapi"], "flags": [], "fullname": "sqlalchemy.sql.sqltypes.DateTime.get_dbapi_type", "name": "get_dbapi_type", "type": null}}, "literal_processor": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "FuncDef", "arg_kinds": [0, 0], "arg_names": ["self", "dialect"], "flags": [], "fullname": "sqlalchemy.sql.sqltypes.DateTime.literal_processor", "name": "literal_processor", "type": null}}, "python_type": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "Decorator", "func": {".class": "FuncDef", "arg_kinds": [0], "arg_names": ["self"], "flags": ["is_property", "is_decorated"], "fullname": "sqlalchemy.sql.sqltypes.DateTime.python_type", "name": "python_type", "type": null}, "is_overload": false, "var": {".class": "Var", "flags": ["is_initialized_in_class", "is_property", "is_ready"], "fullname": null, "name": "python_type", "type": {".class": "CallableType", "arg_kinds": [0], "arg_names": ["self"], "arg_types": ["sqlalchemy.sql.sqltypes.DateTime"], "bound_args": [], "def_extras": {}, "fallback": "builtins.function", "implicit": true, "is_ellipsis_args": false, "name": "python_type of DateTime", "ret_type": {".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 1}, "variables": []}}}}, "timezone": {".class": "SymbolTableNode", "implicit": true, "kind": "Mdef", "node": {".class": "Var", "flags": [], "fullname": "sqlalchemy.sql.sqltypes.DateTime.timezone", "name": "timezone", "type": "builtins.bool"}}}, "tuple_type": null, "type_vars": [], "typeddict_type": null}}, "Dialect": {".class": "SymbolTableNode", "cross_ref": "sqlalchemy.engine.interfaces.Dialect", "kind": "Gdef"}, "Dict": {".class": "SymbolTableNode", "cross_ref": "typing.Dict", "kind": "Gdef"}, "Double": {".class": "SymbolTableNode", "kind": "Gdef", "node": {".class": "TypeInfo", "_promote": null, "abstract_attributes": [], "bases": [{".class": "Instance", "args": [{".class": "TypeVarType", "fullname": "sqlalchemy.sql.sqltypes._N", "id": 1, "name": "_N", "upper_bound": {".class": "UnionType", "items": ["decimal.Decimal", "builtins.float"]}, "values": [], "variance": 0}], "type_ref": "sqlalchemy.sql.sqltypes.Float"}], "declared_metaclass": null, "defn": {".class": "ClassDef", "fullname": "sqlalchemy.sql.sqltypes.Double", "name": "Double", "type_vars": [{".class": "TypeVarDef", "fullname": "sqlalchemy.sql.sqltypes._N", "id": 1, "name": "_N", "upper_bound": {".class": "UnionType", "items": ["decimal.Decimal", "builtins.float"]}, "values": [], "variance": 0}]}, "flags": [], "fullname": "sqlalchemy.sql.sqltypes.Double", "metaclass_type": null, "metadata": {}, "module_name": "sqlalchemy.sql.sqltypes", "mro": ["sqlalchemy.sql.sqltypes.Double", "sqlalchemy.sql.sqltypes.Float", "sqlalchemy.sql.sqltypes.Numeric", "sqlalchemy.sql.sqltypes.HasExpressionLookup", "sqlalchemy.sql.type_api.TypeEngineMixin", "sqlalchemy.sql.type_api.TypeEngine", "sqlalchemy.sql.visitors.Visitable", "builtins.object"], "names": {".class": "SymbolTable", "__visit_name__": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "Var", "flags": ["is_initialized_in_class", "is_ready"], "fullname": "sqlalchemy.sql.sqltypes.Double.__visit_name__", "name": "__visit_name__", "type": "builtins.str"}}}, "tuple_type": null, "type_vars": ["_N"], "typeddict_type": null}}, "Emulated": {".class": "SymbolTableNode", "cross_ref": "sqlalchemy.sql.type_api.Emulated", "kind": "Gdef"}, "Enum": {".class": "SymbolTableNode", "kind": "Gdef", "node": {".class": "TypeInfo", "_promote": null, "abstract_attributes": [], "bases": ["sqlalchemy.sql.sqltypes.String", "sqlalchemy.sql.sqltypes.SchemaType", "sqlalchemy.sql.type_api.Emulated", {".class": "Instance", "args": [{".class": "UnionType", "items": ["builtins.str", "enum.Enum"]}], "type_ref": "sqlalchemy.sql.type_api.TypeEngine"}], "declared_metaclass": null, "defn": {".class": "ClassDef", "fullname": "sqlalchemy.sql.sqltypes.Enum", "name": "Enum", "type_vars": []}, "flags": [], "fullname": "sqlalchemy.sql.sqltypes.Enum", "metaclass_type": null, "metadata": {}, "module_name": "sqlalchemy.sql.sqltypes", "mro": ["sqlalchemy.sql.sqltypes.Enum", "sqlalchemy.sql.sqltypes.String", "sqlalchemy.sql.sqltypes.Concatenable", "sqlalchemy.sql.sqltypes.SchemaType", "sqlalchemy.sql.base.SchemaEventTarget", "sqlalchemy.event.registry.EventTarget", "sqlalchemy.sql.type_api.Emulated", "sqlalchemy.sql.type_api.TypeEngineMixin", "sqlalchemy.sql.type_api.TypeEngine", "sqlalchemy.sql.visitors.Visitable", "builtins.object"], "names": {".class": "SymbolTable", "Comparator": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "TypeInfo", "_promote": null, "abstract_attributes": [], "bases": [{".class": "Instance", "args": ["builtins.str"], "type_ref": "sqlalchemy.sql.sqltypes.Concatenable.Comparator"}], "declared_metaclass": null, "defn": {".class": "ClassDef", "fullname": "sqlalchemy.sql.sqltypes.Enum.Comparator", "name": "Comparator", "type_vars": []}, "flags": [], "fullname": "sqlalchemy.sql.sqltypes.Enum.Comparator", "metaclass_type": null, "metadata": {}, "module_name": "sqlalchemy.sql.sqltypes", "mro": ["sqlalchemy.sql.sqltypes.Enum.Comparator", "sqlalchemy.sql.sqltypes.Concatenable.Comparator", "sqlalchemy.sql.type_api.TypeEngine.Comparator", "sqlalchemy.sql.operators.ColumnOperators", "sqlalchemy.sql.operators.Operators", "builtins.object"], "names": {".class": "SymbolTable", "__slots__": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "Var", "flags": ["is_initialized_in_class"], "fullname": "sqlalchemy.sql.sqltypes.Enum.Comparator.__slots__", "name": "__slots__", "type": {".class": "TupleType", "implicit": false, "items": [], "partial_fallback": {".class": "Instance", "args": [{".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 6}], "type_ref": "builtins.tuple"}}}}, "_adapt_expression": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "FuncDef", "arg_kinds": [0, 0, 0], "arg_names": ["self", "op", "other_comparator"], "flags": [], "fullname": "sqlalchemy.sql.sqltypes.Enum.Comparator._adapt_expression", "name": "_adapt_expression", "type": {".class": "CallableType", "arg_kinds": [0, 0, 0], "arg_names": ["self", "op", "other_comparator"], "arg_types": ["sqlalchemy.sql.sqltypes.Enum.Comparator", "sqlalchemy.sql.operators.OperatorType", {".class": "Instance", "args": [{".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 2}], "type_ref": "sqlalchemy.sql.type_api.TypeEngine.Comparator"}], "bound_args": [], "def_extras": {"first_arg": "self"}, "fallback": "builtins.function", "implicit": false, "is_ellipsis_args": false, "name": "_adapt_expression of Comparator", "ret_type": {".class": "TupleType", "implicit": false, "items": ["sqlalchemy.sql.operators.OperatorType", {".class": "Instance", "args": [{".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 2}], "type_ref": "sqlalchemy.sql.type_api.TypeEngine"}], "partial_fallback": {".class": "Instance", "args": [{".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 6}], "type_ref": "builtins.tuple"}}, "variables": []}}}, "type": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "Var", "flags": ["is_initialized_in_class", "is_ready"], "fullname": "sqlalchemy.sql.sqltypes.Enum.Comparator.type", "name": "type", "type": "sqlalchemy.sql.sqltypes.String"}}}, "tuple_type": null, "type_vars": [], "typeddict_type": null}}, "__init__": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "FuncDef", "arg_kinds": [0, 2, 4], "arg_names": ["self", "enums", "kw"], "flags": [], "fullname": "sqlalchemy.sql.sqltypes.Enum.__init__", "name": "__init__", "type": {".class": "CallableType", "arg_kinds": [0, 2, 4], "arg_names": ["self", "enums", "kw"], "arg_types": ["sqlalchemy.sql.sqltypes.Enum", "builtins.object", {".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 2}], "bound_args": [], "def_extras": {"first_arg": "self"}, "fallback": "builtins.function", "implicit": false, "is_ellipsis_args": false, "name": "__init__ of Enum", "ret_type": {".class": "NoneType"}, "variables": []}}}, "__repr__": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "FuncDef", "arg_kinds": [0], "arg_names": ["self"], "flags": [], "fullname": "sqlalchemy.sql.sqltypes.Enum.__repr__", "name": "__repr__", "type": null}}, "__visit_name__": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "Var", "flags": ["is_initialized_in_class", "is_ready"], "fullname": "sqlalchemy.sql.sqltypes.Enum.__visit_name__", "name": "__visit_name__", "type": "builtins.str"}}, "_db_value_for_elem": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "FuncDef", "arg_kinds": [0, 0], "arg_names": ["self", "elem"], "flags": [], "fullname": "sqlalchemy.sql.sqltypes.Enum._db_value_for_elem", "name": "_db_value_for_elem", "type": null}}, "_default_length": {".class": "SymbolTableNode", "implicit": true, "kind": "Mdef", "node": {".class": "Var", "flags": [], "fullname": "sqlalchemy.sql.sqltypes.Enum._default_length", "name": "_default_length", "type": {".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 1}}}, "_enum_init": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "FuncDef", "arg_kinds": [0, 0, 0], "arg_names": ["self", "enums", "kw"], "flags": [], "fullname": "sqlalchemy.sql.sqltypes.Enum._enum_init", "name": "_enum_init", "type": null}}, "_enums_argument": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "Decorator", "func": {".class": "FuncDef", "arg_kinds": [0], "arg_names": ["self"], "flags": ["is_property", "is_decorated"], "fullname": "sqlalchemy.sql.sqltypes.Enum._enums_argument", "name": "_enums_argument", "type": null}, "is_overload": false, "var": {".class": "Var", "flags": ["is_initialized_in_class", "is_property", "is_ready"], "fullname": null, "name": "_enums_argument", "type": {".class": "CallableType", "arg_kinds": [0], "arg_names": ["self"], "arg_types": ["sqlalchemy.sql.sqltypes.Enum"], "bound_args": [], "def_extras": {}, "fallback": "builtins.function", "implicit": true, "is_ellipsis_args": false, "name": "_enums_argument of Enum", "ret_type": {".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 1}, "variables": []}}}}, "_make_enum_kw": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "FuncDef", "arg_kinds": [0, 0], "arg_names": ["self", "kw"], "flags": [], "fullname": "sqlalchemy.sql.sqltypes.Enum._make_enum_kw", "name": "_make_enum_kw", "type": null}}, "_object_lookup": {".class": "SymbolTableNode", "implicit": true, "kind": "Mdef", "node": {".class": "Var", "flags": [], "fullname": "sqlalchemy.sql.sqltypes.Enum._object_lookup", "name": "_object_lookup", "type": {".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 1}}}, "_object_value_for_elem": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "FuncDef", "arg_kinds": [0, 0], "arg_names": ["self", "elem"], "flags": [], "fullname": "sqlalchemy.sql.sqltypes.Enum._object_value_for_elem", "name": "_object_value_for_elem", "type": null}}, "_omit_aliases": {".class": "SymbolTableNode", "implicit": true, "kind": "Mdef", "node": {".class": "Var", "flags": [], "fullname": "sqlalchemy.sql.sqltypes.Enum._omit_aliases", "name": "_omit_aliases", "type": {".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 1}}}, "_parse_into_values": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "FuncDef", "arg_kinds": [0, 0, 0], "arg_names": ["self", "enums", "kw"], "flags": [], "fullname": "sqlalchemy.sql.sqltypes.Enum._parse_into_values", "name": "_parse_into_values", "type": null}}, "_resolve_for_literal": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "FuncDef", "arg_kinds": [0, 0], "arg_names": ["self", "value"], "flags": [], "fullname": "sqlalchemy.sql.sqltypes.Enum._resolve_for_literal", "name": "_resolve_for_literal", "type": {".class": "CallableType", "arg_kinds": [0, 0], "arg_names": ["self", "value"], "arg_types": ["sqlalchemy.sql.sqltypes.Enum", {".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 2}], "bound_args": [], "def_extras": {"first_arg": "self"}, "fallback": "builtins.function", "implicit": false, "is_ellipsis_args": false, "name": "_resolve_for_literal of Enum", "ret_type": "sqlalchemy.sql.sqltypes.Enum", "variables": []}}}, "_resolve_for_python_type": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "FuncDef", "arg_kinds": [0, 0, 0, 0], "arg_names": ["self", "python_type", "matched_on", "matched_on_flattened"], "flags": [], "fullname": "sqlalchemy.sql.sqltypes.Enum._resolve_for_python_type", "name": "_resolve_for_python_type", "type": {".class": "CallableType", "arg_kinds": [0, 0, 0, 0], "arg_names": ["self", "python_type", "matched_on", "matched_on_flattened"], "arg_types": ["sqlalchemy.sql.sqltypes.Enum", {".class": "TypeType", "item": {".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 2}}, {".class": "TypeAliasType", "args": [], "type_ref": "sqlalchemy.sql.type_api._MatchedOnType"}, {".class": "TypeType", "item": {".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 2}}], "bound_args": [], "def_extras": {"first_arg": "self"}, "fallback": "builtins.function", "implicit": false, "is_ellipsis_args": false, "name": "_resolve_for_python_type of Enum", "ret_type": {".class": "UnionType", "items": ["sqlalchemy.sql.sqltypes.Enum", {".class": "NoneType"}]}, "variables": []}}}, "_set_table": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "Decorator", "func": {".class": "FuncDef", "arg_kinds": [0, 0, 0], "arg_names": ["self", "column", "table"], "flags": ["is_decorated"], "fullname": "sqlalchemy.sql.sqltypes.Enum._set_table", "name": "_set_table", "type": null}, "is_overload": false, "var": {".class": "Var", "flags": ["is_initialized_in_class", "is_ready"], "fullname": null, "name": "_set_table", "type": {".class": "CallableType", "arg_kinds": [0, 0, 0], "arg_names": ["self", "column", "table"], "arg_types": ["sqlalchemy.sql.sqltypes.Enum", {".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 1}, {".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 1}], "bound_args": [], "def_extras": {}, "fallback": "builtins.function", "implicit": true, "is_ellipsis_args": false, "name": "_set_table of Enum", "ret_type": {".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 1}, "variables": []}}}}, "_setup_for_values": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "FuncDef", "arg_kinds": [0, 0, 0, 0], "arg_names": ["self", "values", "objects", "kw"], "flags": [], "fullname": "sqlalchemy.sql.sqltypes.Enum._setup_for_values", "name": "_setup_for_values", "type": null}}, "_should_create_constraint": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "FuncDef", "arg_kinds": [0, 0, 4], "arg_names": ["self", "compiler", "kw"], "flags": [], "fullname": "sqlalchemy.sql.sqltypes.Enum._should_create_constraint", "name": "_should_create_constraint", "type": null}}, "_sort_key_function": {".class": "SymbolTableNode", "implicit": true, "kind": "Mdef", "node": {".class": "Var", "flags": [], "fullname": "sqlalchemy.sql.sqltypes.Enum._sort_key_function", "name": "_sort_key_function", "type": {".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 1}}}, "_valid_lookup": {".class": "SymbolTableNode", "implicit": true, "kind": "Mdef", "node": {".class": "Var", "flags": [], "fullname": "sqlalchemy.sql.sqltypes.Enum._valid_lookup", "name": "_valid_lookup", "type": {".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 1}}}, "adapt": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "FuncDef", "arg_kinds": [0, 0, 4], "arg_names": ["self", "impltype", "kw"], "flags": [], "fullname": "sqlalchemy.sql.sqltypes.Enum.adapt", "name": "adapt", "type": null}}, "adapt_to_emulated": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "FuncDef", "arg_kinds": [0, 0, 4], "arg_names": ["self", "impltype", "kw"], "flags": [], "fullname": "sqlalchemy.sql.sqltypes.Enum.adapt_to_emulated", "name": "adapt_to_emulated", "type": null}}, "as_generic": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "FuncDef", "arg_kinds": [0, 1], "arg_names": ["self", "allow_nulltype"], "flags": [], "fullname": "sqlalchemy.sql.sqltypes.Enum.as_generic", "name": "as_generic", "type": null}}, "bind_processor": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "FuncDef", "arg_kinds": [0, 0], "arg_names": ["self", "dialect"], "flags": [], "fullname": "sqlalchemy.sql.sqltypes.Enum.bind_processor", "name": "bind_processor", "type": null}}, "comparator_factory": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "Var", "flags": ["is_initialized_in_class"], "fullname": "sqlalchemy.sql.sqltypes.Enum.comparator_factory", "name": "comparator_factory", "type": {".class": "CallableType", "arg_kinds": [0], "arg_names": ["expr"], "arg_types": [{".class": "Instance", "args": ["builtins.str"], "type_ref": "sqlalchemy.sql.elements.ColumnElement"}], "bound_args": ["sqlalchemy.sql.sqltypes.Enum.Comparator"], "def_extras": {"first_arg": "self"}, "fallback": "builtins.type", "implicit": false, "is_ellipsis_args": false, "name": null, "ret_type": "sqlalchemy.sql.sqltypes.Enum.Comparator", "variables": []}}}, "copy": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "FuncDef", "arg_kinds": [0, 4], "arg_names": ["self", "kw"], "flags": [], "fullname": "sqlalchemy.sql.sqltypes.Enum.copy", "name": "copy", "type": null}}, "create_constraint": {".class": "SymbolTableNode", "implicit": true, "kind": "Mdef", "node": {".class": "Var", "flags": [], "fullname": "sqlalchemy.sql.sqltypes.Enum.create_constraint", "name": "create_constraint", "type": {".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 1}}}, "enum_class": {".class": "SymbolTableNode", "implicit": true, "kind": "Mdef", "node": {".class": "Var", "flags": [], "fullname": "sqlalchemy.sql.sqltypes.Enum.enum_class", "name": "enum_class", "type": {".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 1}}}, "enums": {".class": "SymbolTableNode", "implicit": true, "kind": "Mdef", "node": {".class": "Var", "flags": [], "fullname": "sqlalchemy.sql.sqltypes.Enum.enums", "name": "enums", "type": {".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 1}}}, "literal_processor": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "FuncDef", "arg_kinds": [0, 0], "arg_names": ["self", "dialect"], "flags": [], "fullname": "sqlalchemy.sql.sqltypes.Enum.literal_processor", "name": "literal_processor", "type": null}}, "native": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "Decorator", "func": {".class": "FuncDef", "arg_kinds": [0], "arg_names": ["self"], "flags": ["is_property", "is_decorated"], "fullname": "sqlalchemy.sql.sqltypes.Enum.native", "name": "native", "type": null}, "is_overload": false, "var": {".class": "Var", "flags": ["is_initialized_in_class", "is_property", "is_ready"], "fullname": null, "name": "native", "type": {".class": "CallableType", "arg_kinds": [0], "arg_names": ["self"], "arg_types": ["sqlalchemy.sql.sqltypes.Enum"], "bound_args": [], "def_extras": {}, "fallback": "builtins.function", "implicit": true, "is_ellipsis_args": false, "name": "native of Enum", "ret_type": {".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 1}, "variables": []}}}}, "native_enum": {".class": "SymbolTableNode", "implicit": true, "kind": "Mdef", "node": {".class": "Var", "flags": [], "fullname": "sqlalchemy.sql.sqltypes.Enum.native_enum", "name": "native_enum", "type": {".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 1}}}, "python_type": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "Decorator", "func": {".class": "FuncDef", "arg_kinds": [0], "arg_names": ["self"], "flags": ["is_property", "is_decorated"], "fullname": "sqlalchemy.sql.sqltypes.Enum.python_type", "name": "python_type", "type": null}, "is_overload": false, "var": {".class": "Var", "flags": ["is_initialized_in_class", "is_property", "is_ready"], "fullname": null, "name": "python_type", "type": {".class": "CallableType", "arg_kinds": [0], "arg_names": ["self"], "arg_types": ["sqlalchemy.sql.sqltypes.Enum"], "bound_args": [], "def_extras": {}, "fallback": "builtins.function", "implicit": true, "is_ellipsis_args": false, "name": "python_type of Enum", "ret_type": {".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 1}, "variables": []}}}}, "result_processor": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "FuncDef", "arg_kinds": [0, 0, 0], "arg_names": ["self", "dialect", "coltype"], "flags": [], "fullname": "sqlalchemy.sql.sqltypes.Enum.result_processor", "name": "result_processor", "type": null}}, "sort_key_function": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "Decorator", "func": {".class": "FuncDef", "arg_kinds": [0], "arg_names": ["self"], "flags": ["is_property", "is_decorated"], "fullname": "sqlalchemy.sql.sqltypes.Enum.sort_key_function", "name": "sort_key_function", "type": null}, "is_overload": false, "var": {".class": "Var", "flags": ["is_initialized_in_class", "is_property", "is_ready"], "fullname": null, "name": "sort_key_function", "type": {".class": "CallableType", "arg_kinds": [0], "arg_names": ["self"], "arg_types": ["sqlalchemy.sql.sqltypes.Enum"], "bound_args": [], "def_extras": {}, "fallback": "builtins.function", "implicit": true, "is_ellipsis_args": false, "name": "sort_key_function of Enum", "ret_type": {".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 1}, "variables": []}}}}, "validate_strings": {".class": "SymbolTableNode", "implicit": true, "kind": "Mdef", "node": {".class": "Var", "flags": [], "fullname": "sqlalchemy.sql.sqltypes.Enum.validate_strings", "name": "validate_strings", "type": {".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 1}}}, "values_callable": {".class": "SymbolTableNode", "implicit": true, "kind": "Mdef", "node": {".class": "Var", "flags": [], "fullname": "sqlalchemy.sql.sqltypes.Enum.values_callable", "name": "values_callable", "type": {".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 1}}}}, "tuple_type": null, "type_vars": [], "typeddict_type": null}}, "FLOAT": {".class": "SymbolTableNode", "kind": "Gdef", "node": {".class": "TypeInfo", "_promote": null, "abstract_attributes": [], "bases": [{".class": "Instance", "args": [{".class": "TypeVarType", "fullname": "sqlalchemy.sql.sqltypes._N", "id": 1, "name": "_N", "upper_bound": {".class": "UnionType", "items": ["decimal.Decimal", "builtins.float"]}, "values": [], "variance": 0}], "type_ref": "sqlalchemy.sql.sqltypes.Float"}], "declared_metaclass": null, "defn": {".class": "ClassDef", "fullname": "sqlalchemy.sql.sqltypes.FLOAT", "name": "FLOAT", "type_vars": [{".class": "TypeVarDef", "fullname": "sqlalchemy.sql.sqltypes._N", "id": 1, "name": "_N", "upper_bound": {".class": "UnionType", "items": ["decimal.Decimal", "builtins.float"]}, "values": [], "variance": 0}]}, "flags": [], "fullname": "sqlalchemy.sql.sqltypes.FLOAT", "metaclass_type": null, "metadata": {}, "module_name": "sqlalchemy.sql.sqltypes", "mro": ["sqlalchemy.sql.sqltypes.FLOAT", "sqlalchemy.sql.sqltypes.Float", "sqlalchemy.sql.sqltypes.Numeric", "sqlalchemy.sql.sqltypes.HasExpressionLookup", "sqlalchemy.sql.type_api.TypeEngineMixin", "sqlalchemy.sql.type_api.TypeEngine", "sqlalchemy.sql.visitors.Visitable", "builtins.object"], "names": {".class": "SymbolTable", "__visit_name__": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "Var", "flags": ["is_initialized_in_class", "is_ready"], "fullname": "sqlalchemy.sql.sqltypes.FLOAT.__visit_name__", "name": "__visit_name__", "type": "builtins.str"}}}, "tuple_type": null, "type_vars": ["_N"], "typeddict_type": null}}, "Float": {".class": "SymbolTableNode", "kind": "Gdef", "node": {".class": "TypeInfo", "_promote": null, "abstract_attributes": [], "bases": [{".class": "Instance", "args": [{".class": "TypeVarType", "fullname": "sqlalchemy.sql.sqltypes._N", "id": 1, "name": "_N", "upper_bound": {".class": "UnionType", "items": ["decimal.Decimal", "builtins.float"]}, "values": [], "variance": 0}], "type_ref": "sqlalchemy.sql.sqltypes.Numeric"}], "declared_metaclass": null, "defn": {".class": "ClassDef", "fullname": "sqlalchemy.sql.sqltypes.Float", "name": "Float", "type_vars": [{".class": "TypeVarDef", "fullname": "sqlalchemy.sql.sqltypes._N", "id": 1, "name": "_N", "upper_bound": {".class": "UnionType", "items": ["decimal.Decimal", "builtins.float"]}, "values": [], "variance": 0}]}, "flags": [], "fullname": "sqlalchemy.sql.sqltypes.Float", "metaclass_type": null, "metadata": {}, "module_name": "sqlalchemy.sql.sqltypes", "mro": ["sqlalchemy.sql.sqltypes.Float", "sqlalchemy.sql.sqltypes.Numeric", "sqlalchemy.sql.sqltypes.HasExpressionLookup", "sqlalchemy.sql.type_api.TypeEngineMixin", "sqlalchemy.sql.type_api.TypeEngine", "sqlalchemy.sql.visitors.Visitable", "builtins.object"], "names": {".class": "SymbolTable", "__init__": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "OverloadedFuncDef", "flags": [], "fullname": "sqlalchemy.sql.sqltypes.Float.__init__", "impl": {".class": "FuncDef", "arg_kinds": [0, 1, 1, 1], "arg_names": ["self", "precision", "asdecimal", "decimal_return_scale"], "flags": ["is_overload"], "fullname": "sqlalchemy.sql.sqltypes.Float.__init__", "name": "__init__", "type": {".class": "CallableType", "arg_kinds": [0, 1, 1, 1], "arg_names": ["self", "precision", "asdecimal", "decimal_return_scale"], "arg_types": [{".class": "Instance", "args": [{".class": "TypeVarType", "fullname": "sqlalchemy.sql.sqltypes._N", "id": 1, "name": "_N", "upper_bound": {".class": "UnionType", "items": ["decimal.Decimal", "builtins.float"]}, "values": [], "variance": 0}], "type_ref": "sqlalchemy.sql.sqltypes.Float"}, {".class": "UnionType", "items": ["builtins.int", {".class": "NoneType"}]}, "builtins.bool", {".class": "UnionType", "items": ["builtins.int", {".class": "NoneType"}]}], "bound_args": [], "def_extras": {"first_arg": "self"}, "fallback": "builtins.function", "implicit": false, "is_ellipsis_args": false, "name": "__init__ of Float", "ret_type": {".class": "NoneType"}, "variables": []}}, "items": [{".class": "Decorator", "func": {".class": "FuncDef", "arg_kinds": [0, 1, 1, 1], "arg_names": ["self", "precision", "asdecimal", "decimal_return_scale"], "flags": ["is_overload", "is_decorated"], "fullname": "sqlalchemy.sql.sqltypes.Float.__init__", "name": "__init__", "type": {".class": "CallableType", "arg_kinds": [0, 1, 1, 1], "arg_names": ["self", "precision", "asdecimal", "decimal_return_scale"], "arg_types": [{".class": "Instance", "args": ["builtins.float"], "type_ref": "sqlalchemy.sql.sqltypes.Float"}, {".class": "UnionType", "items": ["builtins.int", {".class": "NoneType"}]}, {".class": "LiteralType", "fallback": "builtins.bool", "value": false}, {".class": "UnionType", "items": ["builtins.int", {".class": "NoneType"}]}], "bound_args": [], "def_extras": {"first_arg": "self"}, "fallback": "builtins.function", "implicit": false, "is_ellipsis_args": false, "name": "__init__ of Float", "ret_type": {".class": "NoneType"}, "variables": []}}, "is_overload": true, "var": {".class": "Var", "flags": [], "fullname": null, "name": "__init__", "type": null}}, {".class": "Decorator", "func": {".class": "FuncDef", "arg_kinds": [0, 1, 1, 1], "arg_names": ["self", "precision", "asdecimal", "decimal_return_scale"], "flags": ["is_overload", "is_decorated"], "fullname": "sqlalchemy.sql.sqltypes.Float.__init__", "name": "__init__", "type": {".class": "CallableType", "arg_kinds": [0, 1, 1, 1], "arg_names": ["self", "precision", "asdecimal", "decimal_return_scale"], "arg_types": [{".class": "Instance", "args": ["decimal.Decimal"], "type_ref": "sqlalchemy.sql.sqltypes.Float"}, {".class": "UnionType", "items": ["builtins.int", {".class": "NoneType"}]}, {".class": "LiteralType", "fallback": "builtins.bool", "value": true}, {".class": "UnionType", "items": ["builtins.int", {".class": "NoneType"}]}], "bound_args": [], "def_extras": {"first_arg": "self"}, "fallback": "builtins.function", "implicit": false, "is_ellipsis_args": false, "name": "__init__ of Float", "ret_type": {".class": "NoneType"}, "variables": []}}, "is_overload": true, "var": {".class": "Var", "flags": [], "fullname": null, "name": "__init__", "type": null}}], "type": {".class": "Overloaded", "items": [{".class": "CallableType", "arg_kinds": [0, 1, 1, 1], "arg_names": ["self", "precision", "asdecimal", "decimal_return_scale"], "arg_types": [{".class": "Instance", "args": ["builtins.float"], "type_ref": "sqlalchemy.sql.sqltypes.Float"}, {".class": "UnionType", "items": ["builtins.int", {".class": "NoneType"}]}, {".class": "LiteralType", "fallback": "builtins.bool", "value": false}, {".class": "UnionType", "items": ["builtins.int", {".class": "NoneType"}]}], "bound_args": [], "def_extras": {"first_arg": "self"}, "fallback": "builtins.function", "implicit": false, "is_ellipsis_args": false, "name": "__init__ of Float", "ret_type": {".class": "NoneType"}, "variables": []}, {".class": "CallableType", "arg_kinds": [0, 1, 1, 1], "arg_names": ["self", "precision", "asdecimal", "decimal_return_scale"], "arg_types": [{".class": "Instance", "args": ["decimal.Decimal"], "type_ref": "sqlalchemy.sql.sqltypes.Float"}, {".class": "UnionType", "items": ["builtins.int", {".class": "NoneType"}]}, {".class": "LiteralType", "fallback": "builtins.bool", "value": true}, {".class": "UnionType", "items": ["builtins.int", {".class": "NoneType"}]}], "bound_args": [], "def_extras": {"first_arg": "self"}, "fallback": "builtins.function", "implicit": false, "is_ellipsis_args": false, "name": "__init__ of Float", "ret_type": {".class": "NoneType"}, "variables": []}]}}}, "__visit_name__": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "Var", "flags": ["is_initialized_in_class", "is_ready"], "fullname": "sqlalchemy.sql.sqltypes.Float.__visit_name__", "name": "__visit_name__", "type": "builtins.str"}}, "result_processor": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "FuncDef", "arg_kinds": [0, 0, 0], "arg_names": ["self", "dialect", "coltype"], "flags": [], "fullname": "sqlalchemy.sql.sqltypes.Float.result_processor", "name": "result_processor", "type": null}}, "scale": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "Var", "flags": ["is_initialized_in_class"], "fullname": "sqlalchemy.sql.sqltypes.Float.scale", "name": "scale", "type": {".class": "NoneType"}}}}, "tuple_type": null, "type_vars": ["_N"], "typeddict_type": null}}, "HasCacheKey": {".class": "SymbolTableNode", "cross_ref": "sqlalchemy.sql.cache_key.HasCacheKey", "kind": "Gdef"}, "HasExpressionLookup": {".class": "SymbolTableNode", "kind": "Gdef", "node": {".class": "TypeInfo", "_promote": null, "abstract_attributes": [], "bases": ["sqlalchemy.sql.type_api.TypeEngineMixin"], "declared_metaclass": null, "defn": {".class": "ClassDef", "fullname": "sqlalchemy.sql.sqltypes.HasExpressionLookup", "name": "HasExpressionLookup", "type_vars": []}, "flags": [], "fullname": "sqlalchemy.sql.sqltypes.HasExpressionLookup", "metaclass_type": null, "metadata": {}, "module_name": "sqlalchemy.sql.sqltypes", "mro": ["sqlalchemy.sql.sqltypes.HasExpressionLookup", "sqlalchemy.sql.type_api.TypeEngineMixin", "builtins.object"], "names": {".class": "SymbolTable", "Comparator": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "TypeInfo", "_promote": null, "abstract_attributes": [], "bases": [{".class": "Instance", "args": [{".class": "TypeVarType", "fullname": "sqlalchemy.sql.sqltypes._CT", "id": 1, "name": "_CT", "upper_bound": {".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 2}, "values": [], "variance": 0}], "type_ref": "sqlalchemy.sql.type_api.TypeEngine.Comparator"}], "declared_metaclass": null, "defn": {".class": "ClassDef", "fullname": "sqlalchemy.sql.sqltypes.HasExpressionLookup.Comparator", "name": "Comparator", "type_vars": [{".class": "TypeVarDef", "fullname": "sqlalchemy.sql.sqltypes._CT", "id": 1, "name": "_CT", "upper_bound": {".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 2}, "values": [], "variance": 0}]}, "flags": [], "fullname": "sqlalchemy.sql.sqltypes.HasExpressionLookup.Comparator", "metaclass_type": null, "metadata": {}, "module_name": "sqlalchemy.sql.sqltypes", "mro": ["sqlalchemy.sql.sqltypes.HasExpressionLookup.Comparator", "sqlalchemy.sql.type_api.TypeEngine.Comparator", "sqlalchemy.sql.operators.ColumnOperators", "sqlalchemy.sql.operators.Operators", "builtins.object"], "names": {".class": "SymbolTable", "__slots__": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "Var", "flags": ["is_initialized_in_class"], "fullname": "sqlalchemy.sql.sqltypes.HasExpressionLookup.Comparator.__slots__", "name": "__slots__", "type": {".class": "TupleType", "implicit": false, "items": [], "partial_fallback": {".class": "Instance", "args": [{".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 6}], "type_ref": "builtins.tuple"}}}}, "_adapt_expression": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "FuncDef", "arg_kinds": [0, 0, 0], "arg_names": ["self", "op", "other_comparator"], "flags": [], "fullname": "sqlalchemy.sql.sqltypes.HasExpressionLookup.Comparator._adapt_expression", "name": "_adapt_expression", "type": {".class": "CallableType", "arg_kinds": [0, 0, 0], "arg_names": ["self", "op", "other_comparator"], "arg_types": [{".class": "Instance", "args": [{".class": "TypeVarType", "fullname": "sqlalchemy.sql.sqltypes._CT", "id": 1, "name": "_CT", "upper_bound": {".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 2}, "values": [], "variance": 0}], "type_ref": "sqlalchemy.sql.sqltypes.HasExpressionLookup.Comparator"}, "sqlalchemy.sql.operators.OperatorType", {".class": "Instance", "args": [{".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 2}], "type_ref": "sqlalchemy.sql.type_api.TypeEngine.Comparator"}], "bound_args": [], "def_extras": {"first_arg": "self"}, "fallback": "builtins.function", "implicit": false, "is_ellipsis_args": false, "name": "_adapt_expression of Comparator", "ret_type": {".class": "TupleType", "implicit": false, "items": ["sqlalchemy.sql.operators.OperatorType", {".class": "Instance", "args": [{".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 2}], "type_ref": "sqlalchemy.sql.type_api.TypeEngine"}], "partial_fallback": {".class": "Instance", "args": [{".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 6}], "type_ref": "builtins.tuple"}}, "variables": []}}}, "_blank_dict": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "Var", "flags": ["is_initialized_in_class"], "fullname": "sqlalchemy.sql.sqltypes.HasExpressionLookup.Comparator._blank_dict", "name": "_blank_dict", "type": {".class": "Instance", "args": [{".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 2}, {".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 2}], "type_ref": "sqlalchemy.util._py_collections.immutabledict"}}}}, "tuple_type": null, "type_vars": ["_CT"], "typeddict_type": null}}, "_expression_adaptations": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "Decorator", "func": {".class": "FuncDef", "arg_kinds": [0], "arg_names": ["self"], "flags": ["is_property", "is_decorated"], "fullname": "sqlalchemy.sql.sqltypes.HasExpressionLookup._expression_adaptations", "name": "_expression_adaptations", "type": null}, "is_overload": false, "var": {".class": "Var", "flags": ["is_initialized_in_class", "is_property", "is_ready"], "fullname": null, "name": "_expression_adaptations", "type": {".class": "CallableType", "arg_kinds": [0], "arg_names": ["self"], "arg_types": ["sqlalchemy.sql.sqltypes.HasExpressionLookup"], "bound_args": [], "def_extras": {}, "fallback": "builtins.function", "implicit": true, "is_ellipsis_args": false, "name": "_expression_adaptations of HasExpressionLookup", "ret_type": {".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 1}, "variables": []}}}}, "comparator_factory": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "Var", "flags": ["is_initialized_in_class", "is_ready"], "fullname": "sqlalchemy.sql.sqltypes.HasExpressionLookup.comparator_factory", "name": "comparator_factory", "type": {".class": "Instance", "args": [{".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 2}], "type_ref": "sqlalchemy.sql.type_api._ComparatorFactory"}}}}, "tuple_type": null, "type_vars": [], "typeddict_type": null}}, "INDEXABLE": {".class": "SymbolTableNode", "kind": "Gdef", "node": {".class": "Var", "flags": [], "fullname": "sqlalchemy.sql.sqltypes.INDEXABLE", "name": "INDEXABLE", "type": {".class": "CallableType", "arg_kinds": [], "arg_names": [], "arg_types": [], "bound_args": ["sqlalchemy.sql.sqltypes.Indexable"], "def_extras": {"first_arg": "self"}, "fallback": "builtins.type", "implicit": false, "is_ellipsis_args": false, "name": null, "ret_type": "sqlalchemy.sql.sqltypes.Indexable", "variables": []}}}, "INT": {".class": "SymbolTableNode", "kind": "Gdef", "node": {".class": "TypeAlias", "alias_tvars": [], "column": 0, "fullname": "sqlalchemy.sql.sqltypes.INT", "line": 3305, "no_args": true, "normalized": false, "target": "sqlalchemy.sql.sqltypes.INTEGER"}}, "INTEGER": {".class": "SymbolTableNode", "kind": "Gdef", "node": {".class": "TypeInfo", "_promote": null, "abstract_attributes": [], "bases": ["sqlalchemy.sql.sqltypes.Integer"], "declared_metaclass": null, "defn": {".class": "ClassDef", "fullname": "sqlalchemy.sql.sqltypes.INTEGER", "name": "INTEGER", "type_vars": []}, "flags": [], "fullname": "sqlalchemy.sql.sqltypes.INTEGER", "metaclass_type": null, "metadata": {}, "module_name": "sqlalchemy.sql.sqltypes", "mro": ["sqlalchemy.sql.sqltypes.INTEGER", "sqlalchemy.sql.sqltypes.Integer", "sqlalchemy.sql.sqltypes.HasExpressionLookup", "sqlalchemy.sql.type_api.TypeEngineMixin", "sqlalchemy.sql.type_api.TypeEngine", "sqlalchemy.sql.visitors.Visitable", "builtins.object"], "names": {".class": "SymbolTable", "__visit_name__": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "Var", "flags": ["is_initialized_in_class", "is_ready"], "fullname": "sqlalchemy.sql.sqltypes.INTEGER.__visit_name__", "name": "__visit_name__", "type": "builtins.str"}}}, "tuple_type": null, "type_vars": [], "typeddict_type": null}}, "INTEGERTYPE": {".class": "SymbolTableNode", "kind": "Gdef", "node": {".class": "Var", "flags": [], "fullname": "sqlalchemy.sql.sqltypes.INTEGERTYPE", "name": "INTEGERTYPE", "type": "sqlalchemy.sql.sqltypes.Integer"}}, "Indexable": {".class": "SymbolTableNode", "kind": "Gdef", "node": {".class": "TypeInfo", "_promote": null, "abstract_attributes": [], "bases": ["sqlalchemy.sql.type_api.TypeEngineMixin"], "declared_metaclass": null, "defn": {".class": "ClassDef", "fullname": "sqlalchemy.sql.sqltypes.Indexable", "name": "Indexable", "type_vars": []}, "flags": [], "fullname": "sqlalchemy.sql.sqltypes.Indexable", "metaclass_type": null, "metadata": {}, "module_name": "sqlalchemy.sql.sqltypes", "mro": ["sqlalchemy.sql.sqltypes.Indexable", "sqlalchemy.sql.type_api.TypeEngineMixin", "builtins.object"], "names": {".class": "SymbolTable", "Comparator": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "TypeInfo", "_promote": null, "abstract_attributes": [], "bases": [{".class": "Instance", "args": [{".class": "TypeVarType", "fullname": "sqlalchemy.sql.sqltypes._T", "id": 1, "name": "_T", "upper_bound": {".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 2}, "values": [], "variance": 0}], "type_ref": "sqlalchemy.sql.type_api.TypeEngine.Comparator"}], "declared_metaclass": null, "defn": {".class": "ClassDef", "fullname": "sqlalchemy.sql.sqltypes.Indexable.Comparator", "name": "Comparator", "type_vars": [{".class": "TypeVarDef", "fullname": "sqlalchemy.sql.sqltypes._T", "id": 1, "name": "_T", "upper_bound": {".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 2}, "values": [], "variance": 0}]}, "flags": [], "fullname": "sqlalchemy.sql.sqltypes.Indexable.Comparator", "metaclass_type": null, "metadata": {}, "module_name": "sqlalchemy.sql.sqltypes", "mro": ["sqlalchemy.sql.sqltypes.Indexable.Comparator", "sqlalchemy.sql.type_api.TypeEngine.Comparator", "sqlalchemy.sql.operators.ColumnOperators", "sqlalchemy.sql.operators.Operators", "builtins.object"], "names": {".class": "SymbolTable", "__getitem__": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "FuncDef", "arg_kinds": [0, 0], "arg_names": ["self", "index"], "flags": [], "fullname": "sqlalchemy.sql.sqltypes.Indexable.Comparator.__getitem__", "name": "__getitem__", "type": null}}, "__slots__": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "Var", "flags": ["is_initialized_in_class"], "fullname": "sqlalchemy.sql.sqltypes.Indexable.Comparator.__slots__", "name": "__slots__", "type": {".class": "TupleType", "implicit": false, "items": [], "partial_fallback": {".class": "Instance", "args": [{".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 6}], "type_ref": "builtins.tuple"}}}}, "_setup_getitem": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "FuncDef", "arg_kinds": [0, 0], "arg_names": ["self", "index"], "flags": [], "fullname": "sqlalchemy.sql.sqltypes.Indexable.Comparator._setup_getitem", "name": "_setup_getitem", "type": null}}}, "tuple_type": null, "type_vars": ["_T"], "typeddict_type": null}}, "comparator_factory": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "Var", "flags": ["is_initialized_in_class", "is_ready"], "fullname": "sqlalchemy.sql.sqltypes.Indexable.comparator_factory", "name": "comparator_factory", "type": {".class": "Instance", "args": [{".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 2}], "type_ref": "sqlalchemy.sql.type_api._ComparatorFactory"}}}}, "tuple_type": null, "type_vars": [], "typeddict_type": null}}, "Integer": {".class": "SymbolTableNode", "kind": "Gdef", "node": {".class": "TypeInfo", "_promote": null, "abstract_attributes": [], "bases": ["sqlalchemy.sql.sqltypes.HasExpressionLookup", {".class": "Instance", "args": ["builtins.int"], "type_ref": "sqlalchemy.sql.type_api.TypeEngine"}], "declared_metaclass": null, "defn": {".class": "ClassDef", "fullname": "sqlalchemy.sql.sqltypes.Integer", "name": "Integer", "type_vars": []}, "flags": [], "fullname": "sqlalchemy.sql.sqltypes.Integer", "metaclass_type": null, "metadata": {}, "module_name": "sqlalchemy.sql.sqltypes", "mro": ["sqlalchemy.sql.sqltypes.Integer", "sqlalchemy.sql.sqltypes.HasExpressionLookup", "sqlalchemy.sql.type_api.TypeEngineMixin", "sqlalchemy.sql.type_api.TypeEngine", "sqlalchemy.sql.visitors.Visitable", "builtins.object"], "names": {".class": "SymbolTable", "__visit_name__": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "Var", "flags": ["is_initialized_in_class", "is_ready"], "fullname": "sqlalchemy.sql.sqltypes.Integer.__visit_name__", "name": "__visit_name__", "type": "builtins.str"}}, "_expression_adaptations": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "Decorator", "func": {".class": "FuncDef", "arg_kinds": [0], "arg_names": ["self"], "flags": ["is_decorated"], "fullname": "sqlalchemy.sql.sqltypes.Integer._expression_adaptations", "name": "_expression_adaptations", "type": null}, "is_overload": false, "var": {".class": "Var", "flags": ["is_initialized_in_class", "is_ready"], "fullname": null, "name": "_expression_adaptations", "type": {".class": "Instance", "args": [{".class": "AnyType", "missing_import_name": null, "source_any": {".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 1}, "type_of_any": 7}], "type_ref": "sqlalchemy.util.langhelpers.generic_fn_descriptor"}}}}, "_resolve_for_literal": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "FuncDef", "arg_kinds": [0, 0], "arg_names": ["self", "value"], "flags": [], "fullname": "sqlalchemy.sql.sqltypes.Integer._resolve_for_literal", "name": "_resolve_for_literal", "type": null}}, "_type_affinity": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "Decorator", "func": {".class": "FuncDef", "arg_kinds": [0], "arg_names": ["self"], "flags": ["is_property", "is_decorated"], "fullname": "sqlalchemy.sql.sqltypes.Integer._type_affinity", "name": "_type_affinity", "type": {".class": "CallableType", "arg_kinds": [0], "arg_names": ["self"], "arg_types": ["sqlalchemy.sql.sqltypes.Integer"], "bound_args": [], "def_extras": {"first_arg": "self"}, "fallback": "builtins.function", "implicit": false, "is_ellipsis_args": false, "name": "_type_affinity of Integer", "ret_type": {".class": "TypeType", "item": "sqlalchemy.sql.sqltypes.Integer"}, "variables": []}}, "is_overload": false, "var": {".class": "Var", "flags": ["is_initialized_in_class", "is_property", "is_ready"], "fullname": null, "name": "_type_affinity", "type": {".class": "CallableType", "arg_kinds": [0], "arg_names": ["self"], "arg_types": ["sqlalchemy.sql.sqltypes.Integer"], "bound_args": [], "def_extras": {"first_arg": "self"}, "fallback": "builtins.function", "implicit": false, "is_ellipsis_args": false, "name": "_type_affinity of Integer", "ret_type": {".class": "TypeType", "item": "sqlalchemy.sql.sqltypes.Integer"}, "variables": []}}}}, "get_dbapi_type": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "FuncDef", "arg_kinds": [0, 0], "arg_names": ["self", "dbapi"], "flags": [], "fullname": "sqlalchemy.sql.sqltypes.Integer.get_dbapi_type", "name": "get_dbapi_type", "type": null}}, "literal_processor": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "FuncDef", "arg_kinds": [0, 0], "arg_names": ["self", "dialect"], "flags": [], "fullname": "sqlalchemy.sql.sqltypes.Integer.literal_processor", "name": "literal_processor", "type": null}}, "python_type": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "Decorator", "func": {".class": "FuncDef", "arg_kinds": [0], "arg_names": ["self"], "flags": ["is_property", "is_decorated"], "fullname": "sqlalchemy.sql.sqltypes.Integer.python_type", "name": "python_type", "type": null}, "is_overload": false, "var": {".class": "Var", "flags": ["is_initialized_in_class", "is_property", "is_ready"], "fullname": null, "name": "python_type", "type": {".class": "CallableType", "arg_kinds": [0], "arg_names": ["self"], "arg_types": ["sqlalchemy.sql.sqltypes.Integer"], "bound_args": [], "def_extras": {}, "fallback": "builtins.function", "implicit": true, "is_ellipsis_args": false, "name": "python_type of Integer", "ret_type": {".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 1}, "variables": []}}}}}, "tuple_type": null, "type_vars": [], "typeddict_type": null}}, "InternalTraversal": {".class": "SymbolTableNode", "cross_ref": "sqlalchemy.sql.visitors.InternalTraversal", "kind": "Gdef"}, "Interval": {".class": "SymbolTableNode", "kind": "Gdef", "node": {".class": "TypeInfo", "_promote": null, "abstract_attributes": [], "bases": ["sqlalchemy.sql.type_api.Emulated", "sqlalchemy.sql.sqltypes._AbstractInterval", {".class": "Instance", "args": ["datetime.timedelta"], "type_ref": "sqlalchemy.sql.type_api.TypeDecorator"}], "declared_metaclass": null, "defn": {".class": "ClassDef", "fullname": "sqlalchemy.sql.sqltypes.Interval", "name": "Interval", "type_vars": []}, "flags": [], "fullname": "sqlalchemy.sql.sqltypes.Interval", "metaclass_type": null, "metadata": {}, "module_name": "sqlalchemy.sql.sqltypes", "mro": ["sqlalchemy.sql.sqltypes.Interval", "sqlalchemy.sql.type_api.Emulated", "sqlalchemy.sql.sqltypes._AbstractInterval", "sqlalchemy.sql.sqltypes.HasExpressionLookup", "sqlalchemy.sql.type_api.TypeDecorator", "sqlalchemy.sql.base.SchemaEventTarget", "sqlalchemy.event.registry.EventTarget", "sqlalchemy.sql.type_api.ExternalType", "sqlalchemy.sql.type_api.TypeEngineMixin", "sqlalchemy.sql.type_api.TypeEngine", "sqlalchemy.sql.visitors.Visitable", "builtins.object"], "names": {".class": "SymbolTable", "Comparator": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "TypeInfo", "_promote": null, "abstract_attributes": [], "bases": [{".class": "Instance", "args": [{".class": "TypeVarType", "fullname": "sqlalchemy.sql.sqltypes._CT", "id": 1, "name": "_CT", "upper_bound": {".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 2}, "values": [], "variance": 0}], "type_ref": "sqlalchemy.sql.type_api.TypeDecorator.Comparator"}, {".class": "Instance", "args": [{".class": "TypeVarType", "fullname": "sqlalchemy.sql.sqltypes._CT", "id": 1, "name": "_CT", "upper_bound": {".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 2}, "values": [], "variance": 0}], "type_ref": "sqlalchemy.sql.sqltypes.HasExpressionLookup.Comparator"}], "declared_metaclass": null, "defn": {".class": "ClassDef", "fullname": "sqlalchemy.sql.sqltypes.Interval.Comparator", "name": "Comparator", "type_vars": [{".class": "TypeVarDef", "fullname": "sqlalchemy.sql.sqltypes._CT", "id": 1, "name": "_CT", "upper_bound": {".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 2}, "values": [], "variance": 0}]}, "flags": [], "fullname": "sqlalchemy.sql.sqltypes.Interval.Comparator", "metaclass_type": null, "metadata": {}, "module_name": "sqlalchemy.sql.sqltypes", "mro": ["sqlalchemy.sql.sqltypes.Interval.Comparator", "sqlalchemy.sql.type_api.TypeDecorator.Comparator", "sqlalchemy.sql.sqltypes.HasExpressionLookup.Comparator", "sqlalchemy.sql.type_api.TypeEngine.Comparator", "sqlalchemy.sql.operators.ColumnOperators", "sqlalchemy.sql.operators.Operators", "builtins.object"], "names": {".class": "SymbolTable", "__slots__": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "Var", "flags": ["is_initialized_in_class"], "fullname": "sqlalchemy.sql.sqltypes.Interval.Comparator.__slots__", "name": "__slots__", "type": {".class": "TupleType", "implicit": false, "items": [], "partial_fallback": {".class": "Instance", "args": [{".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 6}], "type_ref": "builtins.tuple"}}}}}, "tuple_type": null, "type_vars": ["_CT"], "typeddict_type": null}}, "__init__": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "FuncDef", "arg_kinds": [0, 1, 1, 1], "arg_names": ["self", "native", "second_precision", "day_precision"], "flags": [], "fullname": "sqlalchemy.sql.sqltypes.Interval.__init__", "name": "__init__", "type": {".class": "CallableType", "arg_kinds": [0, 1, 1, 1], "arg_names": ["self", "native", "second_precision", "day_precision"], "arg_types": ["sqlalchemy.sql.sqltypes.Interval", "builtins.bool", {".class": "UnionType", "items": ["builtins.int", {".class": "NoneType"}]}, {".class": "UnionType", "items": ["builtins.int", {".class": "NoneType"}]}], "bound_args": [], "def_extras": {"first_arg": "self"}, "fallback": "builtins.function", "implicit": false, "is_ellipsis_args": false, "name": "__init__ of Interval", "ret_type": {".class": "NoneType"}, "variables": []}}}, "adapt_to_emulated": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "FuncDef", "arg_kinds": [0, 0, 4], "arg_names": ["self", "impltype", "kw"], "flags": [], "fullname": "sqlalchemy.sql.sqltypes.Interval.adapt_to_emulated", "name": "adapt_to_emulated", "type": null}}, "bind_processor": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "FuncDef", "arg_kinds": [0, 0], "arg_names": ["self", "dialect"], "flags": [], "fullname": "sqlalchemy.sql.sqltypes.Interval.bind_processor", "name": "bind_processor", "type": {".class": "CallableType", "arg_kinds": [0, 0], "arg_names": ["self", "dialect"], "arg_types": ["sqlalchemy.sql.sqltypes.Interval", "sqlalchemy.engine.interfaces.Dialect"], "bound_args": [], "def_extras": {"first_arg": "self"}, "fallback": "builtins.function", "implicit": false, "is_ellipsis_args": false, "name": "bind_processor of Interval", "ret_type": {".class": "Instance", "args": ["datetime.timedelta"], "type_ref": "sqlalchemy.sql.type_api._BindProcessorType"}, "variables": []}}}, "cache_ok": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "Var", "flags": ["is_initialized_in_class"], "fullname": "sqlalchemy.sql.sqltypes.Interval.cache_ok", "name": "cache_ok", "type": "builtins.bool"}}, "coerce_compared_value": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "FuncDef", "arg_kinds": [0, 0, 0], "arg_names": ["self", "op", "value"], "flags": [], "fullname": "sqlalchemy.sql.sqltypes.Interval.coerce_compared_value", "name": "coerce_compared_value", "type": null}}, "comparator_factory": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "Var", "flags": ["is_initialized_in_class"], "fullname": "sqlalchemy.sql.sqltypes.Interval.comparator_factory", "name": "comparator_factory", "type": {".class": "CallableType", "arg_kinds": [0], "arg_names": ["expr"], "arg_types": [{".class": "Instance", "args": [{".class": "TypeVarType", "fullname": "sqlalchemy.sql.sqltypes._CT", "id": 1, "name": "_CT", "upper_bound": {".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 2}, "values": [], "variance": 0}], "type_ref": "sqlalchemy.sql.elements.ColumnElement"}], "bound_args": [{".class": "Instance", "args": [{".class": "TypeVarType", "fullname": "sqlalchemy.sql.sqltypes._CT", "id": 1, "name": "_CT", "upper_bound": {".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 2}, "values": [], "variance": 0}], "type_ref": "sqlalchemy.sql.sqltypes.Interval.Comparator"}], "def_extras": {"first_arg": "self"}, "fallback": "builtins.type", "implicit": false, "is_ellipsis_args": false, "name": null, "ret_type": {".class": "Instance", "args": [{".class": "TypeVarType", "fullname": "sqlalchemy.sql.sqltypes._CT", "id": 1, "name": "_CT", "upper_bound": {".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 2}, "values": [], "variance": 0}], "type_ref": "sqlalchemy.sql.sqltypes.Interval.Comparator"}, "variables": [{".class": "TypeVarDef", "fullname": "sqlalchemy.sql.sqltypes._CT", "id": 1, "name": "_CT", "upper_bound": {".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 2}, "values": [], "variance": 0}]}}}, "day_precision": {".class": "SymbolTableNode", "implicit": true, "kind": "Mdef", "node": {".class": "Var", "flags": [], "fullname": "sqlalchemy.sql.sqltypes.Interval.day_precision", "name": "day_precision", "type": {".class": "UnionType", "items": ["builtins.int", {".class": "NoneType"}]}}}, "epoch": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "Var", "flags": ["is_initialized_in_class"], "fullname": "sqlalchemy.sql.sqltypes.Interval.epoch", "name": "epoch", "type": "datetime.datetime"}}, "impl": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "Var", "flags": ["is_initialized_in_class"], "fullname": "sqlalchemy.sql.sqltypes.Interval.impl", "name": "impl", "type": {".class": "CallableType", "arg_kinds": [1], "arg_names": ["timezone"], "arg_types": ["builtins.bool"], "bound_args": ["sqlalchemy.sql.sqltypes.DateTime"], "def_extras": {"first_arg": "self"}, "fallback": "builtins.type", "implicit": false, "is_ellipsis_args": false, "name": null, "ret_type": "sqlalchemy.sql.sqltypes.DateTime", "variables": []}}}, "python_type": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "Decorator", "func": {".class": "FuncDef", "arg_kinds": [0], "arg_names": ["self"], "flags": ["is_property", "is_decorated"], "fullname": "sqlalchemy.sql.sqltypes.Interval.python_type", "name": "python_type", "type": null}, "is_overload": false, "var": {".class": "Var", "flags": ["is_initialized_in_class", "is_property", "is_ready"], "fullname": null, "name": "python_type", "type": {".class": "CallableType", "arg_kinds": [0], "arg_names": ["self"], "arg_types": ["sqlalchemy.sql.sqltypes.Interval"], "bound_args": [], "def_extras": {}, "fallback": "builtins.function", "implicit": true, "is_ellipsis_args": false, "name": "python_type of Interval", "ret_type": {".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 1}, "variables": []}}}}, "result_processor": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "FuncDef", "arg_kinds": [0, 0, 0], "arg_names": ["self", "dialect", "coltype"], "flags": [], "fullname": "sqlalchemy.sql.sqltypes.Interval.result_processor", "name": "result_processor", "type": {".class": "CallableType", "arg_kinds": [0, 0, 0], "arg_names": ["self", "dialect", "coltype"], "arg_types": ["sqlalchemy.sql.sqltypes.Interval", "sqlalchemy.engine.interfaces.Dialect", {".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 2}], "bound_args": [], "def_extras": {"first_arg": "self"}, "fallback": "builtins.function", "implicit": false, "is_ellipsis_args": false, "name": "result_processor of Interval", "ret_type": {".class": "Instance", "args": ["datetime.timedelta"], "type_ref": "sqlalchemy.sql.type_api._ResultProcessorType"}, "variables": []}}}, "second_precision": {".class": "SymbolTableNode", "implicit": true, "kind": "Mdef", "node": {".class": "Var", "flags": [], "fullname": "sqlalchemy.sql.sqltypes.Interval.second_precision", "name": "second_precision", "type": {".class": "UnionType", "items": ["builtins.int", {".class": "NoneType"}]}}}}, "tuple_type": null, "type_vars": [], "typeddict_type": null}}, "JSON": {".class": "SymbolTableNode", "kind": "Gdef", "node": {".class": "TypeInfo", "_promote": null, "abstract_attributes": [], "bases": ["sqlalchemy.sql.sqltypes.Indexable", {".class": "Instance", "args": [{".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 2}], "type_ref": "sqlalchemy.sql.type_api.TypeEngine"}], "declared_metaclass": null, "defn": {".class": "ClassDef", "fullname": "sqlalchemy.sql.sqltypes.JSON", "name": "JSON", "type_vars": []}, "flags": [], "fullname": "sqlalchemy.sql.sqltypes.JSON", "metaclass_type": null, "metadata": {}, "module_name": "sqlalchemy.sql.sqltypes", "mro": ["sqlalchemy.sql.sqltypes.JSON", "sqlalchemy.sql.sqltypes.Indexable", "sqlalchemy.sql.type_api.TypeEngineMixin", "sqlalchemy.sql.type_api.TypeEngine", "sqlalchemy.sql.visitors.Visitable", "builtins.object"], "names": {".class": "SymbolTable", "Comparator": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "TypeInfo", "_promote": null, "abstract_attributes": [], "bases": [{".class": "Instance", "args": [{".class": "TypeVarType", "fullname": "sqlalchemy.sql.sqltypes._T", "id": 1, "name": "_T", "upper_bound": {".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 2}, "values": [], "variance": 0}], "type_ref": "sqlalchemy.sql.sqltypes.Indexable.Comparator"}, {".class": "Instance", "args": [{".class": "TypeVarType", "fullname": "sqlalchemy.sql.sqltypes._T", "id": 1, "name": "_T", "upper_bound": {".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 2}, "values": [], "variance": 0}], "type_ref": "sqlalchemy.sql.sqltypes.Concatenable.Comparator"}], "declared_metaclass": null, "defn": {".class": "ClassDef", "fullname": "sqlalchemy.sql.sqltypes.JSON.Comparator", "name": "Comparator", "type_vars": [{".class": "TypeVarDef", "fullname": "sqlalchemy.sql.sqltypes._T", "id": 1, "name": "_T", "upper_bound": {".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 2}, "values": [], "variance": 0}]}, "flags": [], "fullname": "sqlalchemy.sql.sqltypes.JSON.Comparator", "metaclass_type": null, "metadata": {}, "module_name": "sqlalchemy.sql.sqltypes", "mro": ["sqlalchemy.sql.sqltypes.JSON.Comparator", "sqlalchemy.sql.sqltypes.Indexable.Comparator", "sqlalchemy.sql.sqltypes.Concatenable.Comparator", "sqlalchemy.sql.type_api.TypeEngine.Comparator", "sqlalchemy.sql.operators.ColumnOperators", "sqlalchemy.sql.operators.Operators", "builtins.object"], "names": {".class": "SymbolTable", "__slots__": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "Var", "flags": ["is_initialized_in_class"], "fullname": "sqlalchemy.sql.sqltypes.JSON.Comparator.__slots__", "name": "__slots__", "type": {".class": "TupleType", "implicit": false, "items": [], "partial_fallback": {".class": "Instance", "args": [{".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 6}], "type_ref": "builtins.tuple"}}}}, "_binary_w_type": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "FuncDef", "arg_kinds": [0, 0, 0], "arg_names": ["self", "typ", "method_name"], "flags": [], "fullname": "sqlalchemy.sql.sqltypes.JSON.Comparator._binary_w_type", "name": "_binary_w_type", "type": null}}, "_setup_getitem": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "FuncDef", "arg_kinds": [0, 0], "arg_names": ["self", "index"], "flags": [], "fullname": "sqlalchemy.sql.sqltypes.JSON.Comparator._setup_getitem", "name": "_setup_getitem", "type": null}}, "as_boolean": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "FuncDef", "arg_kinds": [0], "arg_names": ["self"], "flags": [], "fullname": "sqlalchemy.sql.sqltypes.JSON.Comparator.as_boolean", "name": "as_boolean", "type": null}}, "as_float": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "FuncDef", "arg_kinds": [0], "arg_names": ["self"], "flags": [], "fullname": "sqlalchemy.sql.sqltypes.JSON.Comparator.as_float", "name": "as_float", "type": null}}, "as_integer": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "FuncDef", "arg_kinds": [0], "arg_names": ["self"], "flags": [], "fullname": "sqlalchemy.sql.sqltypes.JSON.Comparator.as_integer", "name": "as_integer", "type": null}}, "as_json": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "FuncDef", "arg_kinds": [0], "arg_names": ["self"], "flags": [], "fullname": "sqlalchemy.sql.sqltypes.JSON.Comparator.as_json", "name": "as_json", "type": null}}, "as_numeric": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "FuncDef", "arg_kinds": [0, 0, 0, 1], "arg_names": ["self", "precision", "scale", "asdecimal"], "flags": [], "fullname": "sqlalchemy.sql.sqltypes.JSON.Comparator.as_numeric", "name": "as_numeric", "type": null}}, "as_string": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "FuncDef", "arg_kinds": [0], "arg_names": ["self"], "flags": [], "fullname": "sqlalchemy.sql.sqltypes.JSON.Comparator.as_string", "name": "as_string", "type": null}}}, "tuple_type": null, "type_vars": ["_T"], "typeddict_type": null}}, "JSONElementType": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "TypeInfo", "_promote": null, "abstract_attributes": [], "bases": [{".class": "Instance", "args": [{".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 2}], "type_ref": "sqlalchemy.sql.type_api.TypeEngine"}], "declared_metaclass": null, "defn": {".class": "ClassDef", "fullname": "sqlalchemy.sql.sqltypes.JSON.JSONElementType", "name": "JSONElementType", "type_vars": []}, "flags": [], "fullname": "sqlalchemy.sql.sqltypes.JSON.JSONElementType", "metaclass_type": null, "metadata": {}, "module_name": "sqlalchemy.sql.sqltypes", "mro": ["sqlalchemy.sql.sqltypes.JSON.JSONElementType", "sqlalchemy.sql.type_api.TypeEngine", "sqlalchemy.sql.visitors.Visitable", "builtins.object"], "names": {".class": "SymbolTable", "_integer": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "Var", "flags": ["is_initialized_in_class"], "fullname": "sqlalchemy.sql.sqltypes.JSON.JSONElementType._integer", "name": "_integer", "type": "sqlalchemy.sql.sqltypes.Integer"}}, "_string": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "Var", "flags": ["is_initialized_in_class"], "fullname": "sqlalchemy.sql.sqltypes.JSON.JSONElementType._string", "name": "_string", "type": "sqlalchemy.sql.sqltypes.String"}}, "bind_processor": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "FuncDef", "arg_kinds": [0, 0], "arg_names": ["self", "dialect"], "flags": [], "fullname": "sqlalchemy.sql.sqltypes.JSON.JSONElementType.bind_processor", "name": "bind_processor", "type": null}}, "literal_processor": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "FuncDef", "arg_kinds": [0, 0], "arg_names": ["self", "dialect"], "flags": [], "fullname": "sqlalchemy.sql.sqltypes.JSON.JSONElementType.literal_processor", "name": "literal_processor", "type": null}}, "string_bind_processor": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "FuncDef", "arg_kinds": [0, 0], "arg_names": ["self", "dialect"], "flags": [], "fullname": "sqlalchemy.sql.sqltypes.JSON.JSONElementType.string_bind_processor", "name": "string_bind_processor", "type": null}}, "string_literal_processor": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "FuncDef", "arg_kinds": [0, 0], "arg_names": ["self", "dialect"], "flags": [], "fullname": "sqlalchemy.sql.sqltypes.JSON.JSONElementType.string_literal_processor", "name": "string_literal_processor", "type": null}}}, "tuple_type": null, "type_vars": [], "typeddict_type": null}}, "JSONIndexType": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "TypeInfo", "_promote": null, "abstract_attributes": [], "bases": ["sqlalchemy.sql.sqltypes.JSON.JSONElementType"], "declared_metaclass": null, "defn": {".class": "ClassDef", "fullname": "sqlalchemy.sql.sqltypes.JSON.JSONIndexType", "name": "JSONIndexType", "type_vars": []}, "flags": [], "fullname": "sqlalchemy.sql.sqltypes.JSON.JSONIndexType", "metaclass_type": null, "metadata": {}, "module_name": "sqlalchemy.sql.sqltypes", "mro": ["sqlalchemy.sql.sqltypes.JSON.JSONIndexType", "sqlalchemy.sql.sqltypes.JSON.JSONElementType", "sqlalchemy.sql.type_api.TypeEngine", "sqlalchemy.sql.visitors.Visitable", "builtins.object"], "names": {".class": "SymbolTable"}, "tuple_type": null, "type_vars": [], "typeddict_type": null}}, "JSONIntIndexType": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "TypeInfo", "_promote": null, "abstract_attributes": [], "bases": ["sqlalchemy.sql.sqltypes.JSON.JSONIndexType"], "declared_metaclass": null, "defn": {".class": "ClassDef", "fullname": "sqlalchemy.sql.sqltypes.JSON.JSONIntIndexType", "name": "JSONIntIndexType", "type_vars": []}, "flags": [], "fullname": "sqlalchemy.sql.sqltypes.JSON.JSONIntIndexType", "metaclass_type": null, "metadata": {}, "module_name": "sqlalchemy.sql.sqltypes", "mro": ["sqlalchemy.sql.sqltypes.JSON.JSONIntIndexType", "sqlalchemy.sql.sqltypes.JSON.JSONIndexType", "sqlalchemy.sql.sqltypes.JSON.JSONElementType", "sqlalchemy.sql.type_api.TypeEngine", "sqlalchemy.sql.visitors.Visitable", "builtins.object"], "names": {".class": "SymbolTable"}, "tuple_type": null, "type_vars": [], "typeddict_type": null}}, "JSONPathType": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "TypeInfo", "_promote": null, "abstract_attributes": [], "bases": ["sqlalchemy.sql.sqltypes.JSON.JSONElementType"], "declared_metaclass": null, "defn": {".class": "ClassDef", "fullname": "sqlalchemy.sql.sqltypes.JSON.JSONPathType", "name": "JSONPathType", "type_vars": []}, "flags": [], "fullname": "sqlalchemy.sql.sqltypes.JSON.JSONPathType", "metaclass_type": null, "metadata": {}, "module_name": "sqlalchemy.sql.sqltypes", "mro": ["sqlalchemy.sql.sqltypes.JSON.JSONPathType", "sqlalchemy.sql.sqltypes.JSON.JSONElementType", "sqlalchemy.sql.type_api.TypeEngine", "sqlalchemy.sql.visitors.Visitable", "builtins.object"], "names": {".class": "SymbolTable", "__visit_name__": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "Var", "flags": ["is_initialized_in_class", "is_ready"], "fullname": "sqlalchemy.sql.sqltypes.JSON.JSONPathType.__visit_name__", "name": "__visit_name__", "type": "builtins.str"}}}, "tuple_type": null, "type_vars": [], "typeddict_type": null}}, "JSONStrIndexType": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "TypeInfo", "_promote": null, "abstract_attributes": [], "bases": ["sqlalchemy.sql.sqltypes.JSON.JSONIndexType"], "declared_metaclass": null, "defn": {".class": "ClassDef", "fullname": "sqlalchemy.sql.sqltypes.JSON.JSONStrIndexType", "name": "JSONStrIndexType", "type_vars": []}, "flags": [], "fullname": "sqlalchemy.sql.sqltypes.JSON.JSONStrIndexType", "metaclass_type": null, "metadata": {}, "module_name": "sqlalchemy.sql.sqltypes", "mro": ["sqlalchemy.sql.sqltypes.JSON.JSONStrIndexType", "sqlalchemy.sql.sqltypes.JSON.JSONIndexType", "sqlalchemy.sql.sqltypes.JSON.JSONElementType", "sqlalchemy.sql.type_api.TypeEngine", "sqlalchemy.sql.visitors.Visitable", "builtins.object"], "names": {".class": "SymbolTable"}, "tuple_type": null, "type_vars": [], "typeddict_type": null}}, "NULL": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "Var", "flags": ["is_initialized_in_class"], "fullname": "sqlalchemy.sql.sqltypes.JSON.NULL", "name": "NULL", "type": "sqlalchemy.util.langhelpers.symbol"}}, "__init__": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "FuncDef", "arg_kinds": [0, 1], "arg_names": ["self", "none_as_null"], "flags": [], "fullname": "sqlalchemy.sql.sqltypes.JSON.__init__", "name": "__init__", "type": {".class": "CallableType", "arg_kinds": [0, 1], "arg_names": ["self", "none_as_null"], "arg_types": ["sqlalchemy.sql.sqltypes.JSON", "builtins.bool"], "bound_args": [], "def_extras": {"first_arg": "self"}, "fallback": "builtins.function", "implicit": false, "is_ellipsis_args": false, "name": "__init__ of JSON", "ret_type": {".class": "NoneType"}, "variables": []}}}, "__visit_name__": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "Var", "flags": ["is_initialized_in_class", "is_ready"], "fullname": "sqlalchemy.sql.sqltypes.JSON.__visit_name__", "name": "__visit_name__", "type": "builtins.str"}}, "_make_bind_processor": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "FuncDef", "arg_kinds": [0, 0, 0], "arg_names": ["self", "string_process", "json_serializer"], "flags": [], "fullname": "sqlalchemy.sql.sqltypes.JSON._make_bind_processor", "name": "_make_bind_processor", "type": null}}, "_str_impl": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "Decorator", "func": {".class": "FuncDef", "arg_kinds": [0], "arg_names": ["self"], "flags": ["is_decorated"], "fullname": "sqlalchemy.sql.sqltypes.JSON._str_impl", "name": "_str_impl", "type": null}, "is_overload": false, "var": {".class": "Var", "flags": ["is_initialized_in_class", "is_ready"], "fullname": null, "name": "_str_impl", "type": {".class": "Instance", "args": [{".class": "AnyType", "missing_import_name": null, "source_any": {".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 1}, "type_of_any": 7}], "type_ref": "sqlalchemy.util.langhelpers.generic_fn_descriptor"}}}}, "bind_processor": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "FuncDef", "arg_kinds": [0, 0], "arg_names": ["self", "dialect"], "flags": [], "fullname": "sqlalchemy.sql.sqltypes.JSON.bind_processor", "name": "bind_processor", "type": null}}, "comparator_factory": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "Var", "flags": ["is_initialized_in_class"], "fullname": "sqlalchemy.sql.sqltypes.JSON.comparator_factory", "name": "comparator_factory", "type": {".class": "CallableType", "arg_kinds": [0], "arg_names": ["expr"], "arg_types": [{".class": "Instance", "args": [{".class": "TypeVarType", "fullname": "sqlalchemy.sql.sqltypes._T", "id": 1, "name": "_T", "upper_bound": {".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 2}, "values": [], "variance": 0}], "type_ref": "sqlalchemy.sql.elements.ColumnElement"}], "bound_args": [{".class": "Instance", "args": [{".class": "TypeVarType", "fullname": "sqlalchemy.sql.sqltypes._T", "id": 1, "name": "_T", "upper_bound": {".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 2}, "values": [], "variance": 0}], "type_ref": "sqlalchemy.sql.sqltypes.JSON.Comparator"}], "def_extras": {"first_arg": "self"}, "fallback": "builtins.type", "implicit": false, "is_ellipsis_args": false, "name": null, "ret_type": {".class": "Instance", "args": [{".class": "TypeVarType", "fullname": "sqlalchemy.sql.sqltypes._T", "id": 1, "name": "_T", "upper_bound": {".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 2}, "values": [], "variance": 0}], "type_ref": "sqlalchemy.sql.sqltypes.JSON.Comparator"}, "variables": [{".class": "TypeVarDef", "fullname": "sqlalchemy.sql.sqltypes._T", "id": 1, "name": "_T", "upper_bound": {".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 2}, "values": [], "variance": 0}]}}}, "hashable": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "Var", "flags": ["is_initialized_in_class"], "fullname": "sqlalchemy.sql.sqltypes.JSON.hashable", "name": "hashable", "type": "builtins.bool"}}, "none_as_null": {".class": "SymbolTableNode", "implicit": true, "kind": "Mdef", "node": {".class": "Var", "flags": [], "fullname": "sqlalchemy.sql.sqltypes.JSON.none_as_null", "name": "none_as_null", "type": "builtins.bool"}}, "python_type": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "Decorator", "func": {".class": "FuncDef", "arg_kinds": [0], "arg_names": ["self"], "flags": ["is_property", "is_decorated"], "fullname": "sqlalchemy.sql.sqltypes.JSON.python_type", "name": "python_type", "type": null}, "is_overload": false, "var": {".class": "Var", "flags": ["is_initialized_in_class", "is_property", "is_ready"], "fullname": null, "name": "python_type", "type": {".class": "CallableType", "arg_kinds": [0], "arg_names": ["self"], "arg_types": ["sqlalchemy.sql.sqltypes.JSON"], "bound_args": [], "def_extras": {}, "fallback": "builtins.function", "implicit": true, "is_ellipsis_args": false, "name": "python_type of JSON", "ret_type": {".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 1}, "variables": []}}}}, "result_processor": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "FuncDef", "arg_kinds": [0, 0, 0], "arg_names": ["self", "dialect", "coltype"], "flags": [], "fullname": "sqlalchemy.sql.sqltypes.JSON.result_processor", "name": "result_processor", "type": null}}, "should_evaluate_none": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "OverloadedFuncDef", "flags": ["is_property"], "fullname": "sqlalchemy.sql.sqltypes.JSON.should_evaluate_none", "impl": null, "items": [{".class": "Decorator", "func": {".class": "FuncDef", "arg_kinds": [0], "arg_names": ["self"], "flags": ["is_property", "is_overload", "is_decorated"], "fullname": "sqlalchemy.sql.sqltypes.JSON.should_evaluate_none", "name": "should_evaluate_none", "type": null}, "is_overload": true, "var": {".class": "Var", "flags": ["is_initialized_in_class", "is_property", "is_settable_property", "is_ready"], "fullname": null, "name": "should_evaluate_none", "type": {".class": "CallableType", "arg_kinds": [0], "arg_names": ["self"], "arg_types": ["sqlalchemy.sql.sqltypes.JSON"], "bound_args": [], "def_extras": {}, "fallback": "builtins.function", "implicit": true, "is_ellipsis_args": false, "name": "should_evaluate_none of JSON", "ret_type": {".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 1}, "variables": []}}}, {".class": "Decorator", "func": {".class": "FuncDef", "arg_kinds": [0, 0], "arg_names": ["self", "value"], "flags": ["is_decorated"], "fullname": "sqlalchemy.sql.sqltypes.JSON.should_evaluate_none", "name": "should_evaluate_none", "type": null}, "is_overload": false, "var": {".class": "Var", "flags": [], "fullname": null, "name": "should_evaluate_none", "type": null}}], "type": {".class": "Overloaded", "items": [{".class": "CallableType", "arg_kinds": [0], "arg_names": ["self"], "arg_types": ["sqlalchemy.sql.sqltypes.JSON"], "bound_args": [], "def_extras": {}, "fallback": "builtins.function", "implicit": true, "is_ellipsis_args": false, "name": "should_evaluate_none", "ret_type": {".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 1}, "variables": []}]}}}}, "tuple_type": null, "type_vars": [], "typeddict_type": null}}, "LargeBinary": {".class": "SymbolTableNode", "kind": "Gdef", "node": {".class": "TypeInfo", "_promote": null, "abstract_attributes": [], "bases": ["sqlalchemy.sql.sqltypes._Binary"], "declared_metaclass": null, "defn": {".class": "ClassDef", "fullname": "sqlalchemy.sql.sqltypes.LargeBinary", "name": "LargeBinary", "type_vars": []}, "flags": [], "fullname": "sqlalchemy.sql.sqltypes.LargeBinary", "metaclass_type": null, "metadata": {}, "module_name": "sqlalchemy.sql.sqltypes", "mro": ["sqlalchemy.sql.sqltypes.LargeBinary", "sqlalchemy.sql.sqltypes._Binary", "sqlalchemy.sql.type_api.TypeEngine", "sqlalchemy.sql.visitors.Visitable", "builtins.object"], "names": {".class": "SymbolTable", "__init__": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "FuncDef", "arg_kinds": [0, 1], "arg_names": ["self", "length"], "flags": [], "fullname": "sqlalchemy.sql.sqltypes.LargeBinary.__init__", "name": "__init__", "type": {".class": "CallableType", "arg_kinds": [0, 1], "arg_names": ["self", "length"], "arg_types": ["sqlalchemy.sql.sqltypes.LargeBinary", {".class": "UnionType", "items": ["builtins.int", {".class": "NoneType"}]}], "bound_args": [], "def_extras": {"first_arg": "self"}, "fallback": "builtins.function", "implicit": false, "is_ellipsis_args": false, "name": "__init__ of LargeBinary", "ret_type": {".class": "NoneType"}, "variables": []}}}, "__visit_name__": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "Var", "flags": ["is_initialized_in_class", "is_ready"], "fullname": "sqlalchemy.sql.sqltypes.LargeBinary.__visit_name__", "name": "__visit_name__", "type": "builtins.str"}}}, "tuple_type": null, "type_vars": [], "typeddict_type": null}}, "List": {".class": "SymbolTableNode", "cross_ref": "typing.List", "kind": "Gdef"}, "Literal": {".class": "SymbolTableNode", "cross_ref": "typing_extensions.Literal", "kind": "Gdef"}, "MATCHTYPE": {".class": "SymbolTableNode", "kind": "Gdef", "node": {".class": "Var", "flags": [], "fullname": "sqlalchemy.sql.sqltypes.MATCHTYPE", "name": "MATCHTYPE", "type": "sqlalchemy.sql.sqltypes.MatchType"}}, "MatchType": {".class": "SymbolTableNode", "kind": "Gdef", "node": {".class": "TypeInfo", "_promote": null, "abstract_attributes": [], "bases": ["sqlalchemy.sql.sqltypes.Boolean"], "declared_metaclass": null, "defn": {".class": "ClassDef", "fullname": "sqlalchemy.sql.sqltypes.MatchType", "name": "MatchType", "type_vars": []}, "flags": [], "fullname": "sqlalchemy.sql.sqltypes.MatchType", "metaclass_type": null, "metadata": {}, "module_name": "sqlalchemy.sql.sqltypes", "mro": ["sqlalchemy.sql.sqltypes.MatchType", "sqlalchemy.sql.sqltypes.Boolean", "sqlalchemy.sql.sqltypes.SchemaType", "sqlalchemy.sql.base.SchemaEventTarget", "sqlalchemy.event.registry.EventTarget", "sqlalchemy.sql.type_api.Emulated", "sqlalchemy.sql.type_api.TypeEngineMixin", "sqlalchemy.sql.type_api.TypeEngine", "sqlalchemy.sql.visitors.Visitable", "builtins.object"], "names": {".class": "SymbolTable"}, "tuple_type": null, "type_vars": [], "typeddict_type": null}}, "MetaData": {".class": "SymbolTableNode", "cross_ref": "sqlalchemy.sql.schema.MetaData", "kind": "Gdef"}, "NCHAR": {".class": "SymbolTableNode", "kind": "Gdef", "node": {".class": "TypeInfo", "_promote": null, "abstract_attributes": [], "bases": ["sqlalchemy.sql.sqltypes.Unicode"], "declared_metaclass": null, "defn": {".class": "ClassDef", "fullname": "sqlalchemy.sql.sqltypes.NCHAR", "name": "NCHAR", "type_vars": []}, "flags": [], "fullname": "sqlalchemy.sql.sqltypes.NCHAR", "metaclass_type": null, "metadata": {}, "module_name": "sqlalchemy.sql.sqltypes", "mro": ["sqlalchemy.sql.sqltypes.NCHAR", "sqlalchemy.sql.sqltypes.Unicode", "sqlalchemy.sql.sqltypes.String", "sqlalchemy.sql.sqltypes.Concatenable", "sqlalchemy.sql.type_api.TypeEngineMixin", "sqlalchemy.sql.type_api.TypeEngine", "sqlalchemy.sql.visitors.Visitable", "builtins.object"], "names": {".class": "SymbolTable", "__visit_name__": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "Var", "flags": ["is_initialized_in_class", "is_ready"], "fullname": "sqlalchemy.sql.sqltypes.NCHAR.__visit_name__", "name": "__visit_name__", "type": "builtins.str"}}}, "tuple_type": null, "type_vars": [], "typeddict_type": null}}, "NO_ARG": {".class": "SymbolTableNode", "cross_ref": "sqlalchemy.sql.base.NO_ARG", "kind": "Gdef"}, "NULLTYPE": {".class": "SymbolTableNode", "kind": "Gdef", "node": {".class": "Var", "flags": [], "fullname": "sqlalchemy.sql.sqltypes.NULLTYPE", "name": "NULLTYPE", "type": "sqlalchemy.sql.sqltypes.NullType"}}, "NUMERIC": {".class": "SymbolTableNode", "kind": "Gdef", "node": {".class": "TypeInfo", "_promote": null, "abstract_attributes": [], "bases": [{".class": "Instance", "args": [{".class": "TypeVarType", "fullname": "sqlalchemy.sql.sqltypes._N", "id": 1, "name": "_N", "upper_bound": {".class": "UnionType", "items": ["decimal.Decimal", "builtins.float"]}, "values": [], "variance": 0}], "type_ref": "sqlalchemy.sql.sqltypes.Numeric"}], "declared_metaclass": null, "defn": {".class": "ClassDef", "fullname": "sqlalchemy.sql.sqltypes.NUMERIC", "name": "NUMERIC", "type_vars": [{".class": "TypeVarDef", "fullname": "sqlalchemy.sql.sqltypes._N", "id": 1, "name": "_N", "upper_bound": {".class": "UnionType", "items": ["decimal.Decimal", "builtins.float"]}, "values": [], "variance": 0}]}, "flags": [], "fullname": "sqlalchemy.sql.sqltypes.NUMERIC", "metaclass_type": null, "metadata": {}, "module_name": "sqlalchemy.sql.sqltypes", "mro": ["sqlalchemy.sql.sqltypes.NUMERIC", "sqlalchemy.sql.sqltypes.Numeric", "sqlalchemy.sql.sqltypes.HasExpressionLookup", "sqlalchemy.sql.type_api.TypeEngineMixin", "sqlalchemy.sql.type_api.TypeEngine", "sqlalchemy.sql.visitors.Visitable", "builtins.object"], "names": {".class": "SymbolTable", "__visit_name__": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "Var", "flags": ["is_initialized_in_class", "is_ready"], "fullname": "sqlalchemy.sql.sqltypes.NUMERIC.__visit_name__", "name": "__visit_name__", "type": "builtins.str"}}}, "tuple_type": null, "type_vars": ["_N"], "typeddict_type": null}}, "NUMERICTYPE": {".class": "SymbolTableNode", "kind": "Gdef", "node": {".class": "Var", "flags": ["is_ready"], "fullname": "sqlalchemy.sql.sqltypes.NUMERICTYPE", "name": "NUMERICTYPE", "type": {".class": "Instance", "args": ["decimal.Decimal"], "type_ref": "sqlalchemy.sql.sqltypes.Numeric"}}}, "NVARCHAR": {".class": "SymbolTableNode", "kind": "Gdef", "node": {".class": "TypeInfo", "_promote": null, "abstract_attributes": [], "bases": ["sqlalchemy.sql.sqltypes.Unicode"], "declared_metaclass": null, "defn": {".class": "ClassDef", "fullname": "sqlalchemy.sql.sqltypes.NVARCHAR", "name": "NVARCHAR", "type_vars": []}, "flags": [], "fullname": "sqlalchemy.sql.sqltypes.NVARCHAR", "metaclass_type": null, "metadata": {}, "module_name": "sqlalchemy.sql.sqltypes", "mro": ["sqlalchemy.sql.sqltypes.NVARCHAR", "sqlalchemy.sql.sqltypes.Unicode", "sqlalchemy.sql.sqltypes.String", "sqlalchemy.sql.sqltypes.Concatenable", "sqlalchemy.sql.type_api.TypeEngineMixin", "sqlalchemy.sql.type_api.TypeEngine", "sqlalchemy.sql.visitors.Visitable", "builtins.object"], "names": {".class": "SymbolTable", "__visit_name__": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "Var", "flags": ["is_initialized_in_class", "is_ready"], "fullname": "sqlalchemy.sql.sqltypes.NVARCHAR.__visit_name__", "name": "__visit_name__", "type": "builtins.str"}}}, "tuple_type": null, "type_vars": [], "typeddict_type": null}}, "NativeForEmulated": {".class": "SymbolTableNode", "cross_ref": "sqlalchemy.sql.type_api.NativeForEmulated", "kind": "Gdef"}, "NullType": {".class": "SymbolTableNode", "kind": "Gdef", "node": {".class": "TypeInfo", "_promote": null, "abstract_attributes": [], "bases": [{".class": "Instance", "args": [{".class": "NoneType"}], "type_ref": "sqlalchemy.sql.type_api.TypeEngine"}], "declared_metaclass": null, "defn": {".class": "ClassDef", "fullname": "sqlalchemy.sql.sqltypes.NullType", "name": "NullType", "type_vars": []}, "flags": [], "fullname": "sqlalchemy.sql.sqltypes.NullType", "metaclass_type": null, "metadata": {}, "module_name": "sqlalchemy.sql.sqltypes", "mro": ["sqlalchemy.sql.sqltypes.NullType", "sqlalchemy.sql.type_api.TypeEngine", "sqlalchemy.sql.visitors.Visitable", "builtins.object"], "names": {".class": "SymbolTable", "Comparator": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "TypeInfo", "_promote": null, "abstract_attributes": [], "bases": [{".class": "Instance", "args": [{".class": "TypeVarType", "fullname": "sqlalchemy.sql.sqltypes._T", "id": 1, "name": "_T", "upper_bound": {".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 2}, "values": [], "variance": 0}], "type_ref": "sqlalchemy.sql.type_api.TypeEngine.Comparator"}], "declared_metaclass": null, "defn": {".class": "ClassDef", "fullname": "sqlalchemy.sql.sqltypes.NullType.Comparator", "name": "Comparator", "type_vars": [{".class": "TypeVarDef", "fullname": "sqlalchemy.sql.sqltypes._T", "id": 1, "name": "_T", "upper_bound": {".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 2}, "values": [], "variance": 0}]}, "flags": [], "fullname": "sqlalchemy.sql.sqltypes.NullType.Comparator", "metaclass_type": null, "metadata": {}, "module_name": "sqlalchemy.sql.sqltypes", "mro": ["sqlalchemy.sql.sqltypes.NullType.Comparator", "sqlalchemy.sql.type_api.TypeEngine.Comparator", "sqlalchemy.sql.operators.ColumnOperators", "sqlalchemy.sql.operators.Operators", "builtins.object"], "names": {".class": "SymbolTable", "__slots__": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "Var", "flags": ["is_initialized_in_class"], "fullname": "sqlalchemy.sql.sqltypes.NullType.Comparator.__slots__", "name": "__slots__", "type": {".class": "TupleType", "implicit": false, "items": [], "partial_fallback": {".class": "Instance", "args": [{".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 6}], "type_ref": "builtins.tuple"}}}}, "_adapt_expression": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "FuncDef", "arg_kinds": [0, 0, 0], "arg_names": ["self", "op", "other_comparator"], "flags": [], "fullname": "sqlalchemy.sql.sqltypes.NullType.Comparator._adapt_expression", "name": "_adapt_expression", "type": {".class": "CallableType", "arg_kinds": [0, 0, 0], "arg_names": ["self", "op", "other_comparator"], "arg_types": [{".class": "Instance", "args": [{".class": "TypeVarType", "fullname": "sqlalchemy.sql.sqltypes._T", "id": 1, "name": "_T", "upper_bound": {".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 2}, "values": [], "variance": 0}], "type_ref": "sqlalchemy.sql.sqltypes.NullType.Comparator"}, "sqlalchemy.sql.operators.OperatorType", {".class": "Instance", "args": [{".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 2}], "type_ref": "sqlalchemy.sql.type_api.TypeEngine.Comparator"}], "bound_args": [], "def_extras": {"first_arg": "self"}, "fallback": "builtins.function", "implicit": false, "is_ellipsis_args": false, "name": "_adapt_expression of Comparator", "ret_type": {".class": "TupleType", "implicit": false, "items": ["sqlalchemy.sql.operators.OperatorType", {".class": "Instance", "args": [{".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 2}], "type_ref": "sqlalchemy.sql.type_api.TypeEngine"}], "partial_fallback": {".class": "Instance", "args": [{".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 6}], "type_ref": "builtins.tuple"}}, "variables": []}}}}, "tuple_type": null, "type_vars": ["_T"], "typeddict_type": null}}, "__visit_name__": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "Var", "flags": ["is_initialized_in_class", "is_ready"], "fullname": "sqlalchemy.sql.sqltypes.NullType.__visit_name__", "name": "__visit_name__", "type": "builtins.str"}}, "_isnull": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "Var", "flags": ["is_initialized_in_class"], "fullname": "sqlalchemy.sql.sqltypes.NullType._isnull", "name": "_isnull", "type": "builtins.bool"}}, "comparator_factory": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "Var", "flags": ["is_initialized_in_class"], "fullname": "sqlalchemy.sql.sqltypes.NullType.comparator_factory", "name": "comparator_factory", "type": {".class": "CallableType", "arg_kinds": [0], "arg_names": ["expr"], "arg_types": [{".class": "Instance", "args": [{".class": "TypeVarType", "fullname": "sqlalchemy.sql.sqltypes._T", "id": 1, "name": "_T", "upper_bound": {".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 2}, "values": [], "variance": 0}], "type_ref": "sqlalchemy.sql.elements.ColumnElement"}], "bound_args": [{".class": "Instance", "args": [{".class": "TypeVarType", "fullname": "sqlalchemy.sql.sqltypes._T", "id": 1, "name": "_T", "upper_bound": {".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 2}, "values": [], "variance": 0}], "type_ref": "sqlalchemy.sql.sqltypes.NullType.Comparator"}], "def_extras": {"first_arg": "self"}, "fallback": "builtins.type", "implicit": false, "is_ellipsis_args": false, "name": null, "ret_type": {".class": "Instance", "args": [{".class": "TypeVarType", "fullname": "sqlalchemy.sql.sqltypes._T", "id": 1, "name": "_T", "upper_bound": {".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 2}, "values": [], "variance": 0}], "type_ref": "sqlalchemy.sql.sqltypes.NullType.Comparator"}, "variables": [{".class": "TypeVarDef", "fullname": "sqlalchemy.sql.sqltypes._T", "id": 1, "name": "_T", "upper_bound": {".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 2}, "values": [], "variance": 0}]}}}, "literal_processor": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "FuncDef", "arg_kinds": [0, 0], "arg_names": ["self", "dialect"], "flags": [], "fullname": "sqlalchemy.sql.sqltypes.NullType.literal_processor", "name": "literal_processor", "type": null}}}, "tuple_type": null, "type_vars": [], "typeddict_type": null}}, "Numeric": {".class": "SymbolTableNode", "kind": "Gdef", "node": {".class": "TypeInfo", "_promote": null, "abstract_attributes": [], "bases": ["sqlalchemy.sql.sqltypes.HasExpressionLookup", {".class": "Instance", "args": [{".class": "TypeVarType", "fullname": "sqlalchemy.sql.sqltypes._N", "id": 1, "name": "_N", "upper_bound": {".class": "UnionType", "items": ["decimal.Decimal", "builtins.float"]}, "values": [], "variance": 0}], "type_ref": "sqlalchemy.sql.type_api.TypeEngine"}], "declared_metaclass": null, "defn": {".class": "ClassDef", "fullname": "sqlalchemy.sql.sqltypes.Numeric", "name": "Numeric", "type_vars": [{".class": "TypeVarDef", "fullname": "sqlalchemy.sql.sqltypes._N", "id": 1, "name": "_N", "upper_bound": {".class": "UnionType", "items": ["decimal.Decimal", "builtins.float"]}, "values": [], "variance": 0}]}, "flags": [], "fullname": "sqlalchemy.sql.sqltypes.Numeric", "metaclass_type": null, "metadata": {}, "module_name": "sqlalchemy.sql.sqltypes", "mro": ["sqlalchemy.sql.sqltypes.Numeric", "sqlalchemy.sql.sqltypes.HasExpressionLookup", "sqlalchemy.sql.type_api.TypeEngineMixin", "sqlalchemy.sql.type_api.TypeEngine", "sqlalchemy.sql.visitors.Visitable", "builtins.object"], "names": {".class": "SymbolTable", "__init__": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "OverloadedFuncDef", "flags": [], "fullname": "sqlalchemy.sql.sqltypes.Numeric.__init__", "impl": {".class": "FuncDef", "arg_kinds": [0, 1, 1, 1, 1], "arg_names": ["self", "precision", "scale", "decimal_return_scale", "asdecimal"], "flags": ["is_overload"], "fullname": "sqlalchemy.sql.sqltypes.Numeric.__init__", "name": "__init__", "type": {".class": "CallableType", "arg_kinds": [0, 1, 1, 1, 1], "arg_names": ["self", "precision", "scale", "decimal_return_scale", "asdecimal"], "arg_types": [{".class": "Instance", "args": [{".class": "TypeVarType", "fullname": "sqlalchemy.sql.sqltypes._N", "id": 1, "name": "_N", "upper_bound": {".class": "UnionType", "items": ["decimal.Decimal", "builtins.float"]}, "values": [], "variance": 0}], "type_ref": "sqlalchemy.sql.sqltypes.Numeric"}, {".class": "UnionType", "items": ["builtins.int", {".class": "NoneType"}]}, {".class": "UnionType", "items": ["builtins.int", {".class": "NoneType"}]}, {".class": "UnionType", "items": ["builtins.int", {".class": "NoneType"}]}, "builtins.bool"], "bound_args": [], "def_extras": {"first_arg": "self"}, "fallback": "builtins.function", "implicit": false, "is_ellipsis_args": false, "name": "__init__ of Numeric", "ret_type": {".class": "NoneType"}, "variables": []}}, "items": [{".class": "Decorator", "func": {".class": "FuncDef", "arg_kinds": [0, 1, 1, 1, 1], "arg_names": ["self", "precision", "scale", "decimal_return_scale", "asdecimal"], "flags": ["is_overload", "is_decorated"], "fullname": "sqlalchemy.sql.sqltypes.Numeric.__init__", "name": "__init__", "type": {".class": "CallableType", "arg_kinds": [0, 1, 1, 1, 1], "arg_names": ["self", "precision", "scale", "decimal_return_scale", "asdecimal"], "arg_types": [{".class": "Instance", "args": ["decimal.Decimal"], "type_ref": "sqlalchemy.sql.sqltypes.Numeric"}, {".class": "UnionType", "items": ["builtins.int", {".class": "NoneType"}]}, {".class": "UnionType", "items": ["builtins.int", {".class": "NoneType"}]}, {".class": "UnionType", "items": ["builtins.int", {".class": "NoneType"}]}, {".class": "LiteralType", "fallback": "builtins.bool", "value": true}], "bound_args": [], "def_extras": {"first_arg": "self"}, "fallback": "builtins.function", "implicit": false, "is_ellipsis_args": false, "name": "__init__ of Numeric", "ret_type": {".class": "NoneType"}, "variables": []}}, "is_overload": true, "var": {".class": "Var", "flags": [], "fullname": null, "name": "__init__", "type": null}}, {".class": "Decorator", "func": {".class": "FuncDef", "arg_kinds": [0, 1, 1, 1, 1], "arg_names": ["self", "precision", "scale", "decimal_return_scale", "asdecimal"], "flags": ["is_overload", "is_decorated"], "fullname": "sqlalchemy.sql.sqltypes.Numeric.__init__", "name": "__init__", "type": {".class": "CallableType", "arg_kinds": [0, 1, 1, 1, 1], "arg_names": ["self", "precision", "scale", "decimal_return_scale", "asdecimal"], "arg_types": [{".class": "Instance", "args": ["builtins.float"], "type_ref": "sqlalchemy.sql.sqltypes.Numeric"}, {".class": "UnionType", "items": ["builtins.int", {".class": "NoneType"}]}, {".class": "UnionType", "items": ["builtins.int", {".class": "NoneType"}]}, {".class": "UnionType", "items": ["builtins.int", {".class": "NoneType"}]}, {".class": "LiteralType", "fallback": "builtins.bool", "value": false}], "bound_args": [], "def_extras": {"first_arg": "self"}, "fallback": "builtins.function", "implicit": false, "is_ellipsis_args": false, "name": "__init__ of Numeric", "ret_type": {".class": "NoneType"}, "variables": []}}, "is_overload": true, "var": {".class": "Var", "flags": [], "fullname": null, "name": "__init__", "type": null}}], "type": {".class": "Overloaded", "items": [{".class": "CallableType", "arg_kinds": [0, 1, 1, 1, 1], "arg_names": ["self", "precision", "scale", "decimal_return_scale", "asdecimal"], "arg_types": [{".class": "Instance", "args": ["decimal.Decimal"], "type_ref": "sqlalchemy.sql.sqltypes.Numeric"}, {".class": "UnionType", "items": ["builtins.int", {".class": "NoneType"}]}, {".class": "UnionType", "items": ["builtins.int", {".class": "NoneType"}]}, {".class": "UnionType", "items": ["builtins.int", {".class": "NoneType"}]}, {".class": "LiteralType", "fallback": "builtins.bool", "value": true}], "bound_args": [], "def_extras": {"first_arg": "self"}, "fallback": "builtins.function", "implicit": false, "is_ellipsis_args": false, "name": "__init__ of Numeric", "ret_type": {".class": "NoneType"}, "variables": []}, {".class": "CallableType", "arg_kinds": [0, 1, 1, 1, 1], "arg_names": ["self", "precision", "scale", "decimal_return_scale", "asdecimal"], "arg_types": [{".class": "Instance", "args": ["builtins.float"], "type_ref": "sqlalchemy.sql.sqltypes.Numeric"}, {".class": "UnionType", "items": ["builtins.int", {".class": "NoneType"}]}, {".class": "UnionType", "items": ["builtins.int", {".class": "NoneType"}]}, {".class": "UnionType", "items": ["builtins.int", {".class": "NoneType"}]}, {".class": "LiteralType", "fallback": "builtins.bool", "value": false}], "bound_args": [], "def_extras": {"first_arg": "self"}, "fallback": "builtins.function", "implicit": false, "is_ellipsis_args": false, "name": "__init__ of Numeric", "ret_type": {".class": "NoneType"}, "variables": []}]}}}, "__visit_name__": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "Var", "flags": ["is_initialized_in_class", "is_ready"], "fullname": "sqlalchemy.sql.sqltypes.Numeric.__visit_name__", "name": "__visit_name__", "type": "builtins.str"}}, "_default_decimal_return_scale": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "Var", "flags": ["is_initialized_in_class", "is_ready"], "fullname": "sqlalchemy.sql.sqltypes.Numeric._default_decimal_return_scale", "name": "_default_decimal_return_scale", "type": "builtins.int"}}, "_effective_decimal_return_scale": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "Decorator", "func": {".class": "FuncDef", "arg_kinds": [0], "arg_names": ["self"], "flags": ["is_property", "is_decorated"], "fullname": "sqlalchemy.sql.sqltypes.Numeric._effective_decimal_return_scale", "name": "_effective_decimal_return_scale", "type": null}, "is_overload": false, "var": {".class": "Var", "flags": ["is_initialized_in_class", "is_property", "is_ready"], "fullname": null, "name": "_effective_decimal_return_scale", "type": {".class": "CallableType", "arg_kinds": [0], "arg_names": ["self"], "arg_types": [{".class": "Instance", "args": [{".class": "TypeVarType", "fullname": "sqlalchemy.sql.sqltypes._N", "id": 1, "name": "_N", "upper_bound": {".class": "UnionType", "items": ["decimal.Decimal", "builtins.float"]}, "values": [], "variance": 0}], "type_ref": "sqlalchemy.sql.sqltypes.Numeric"}], "bound_args": [], "def_extras": {}, "fallback": "builtins.function", "implicit": true, "is_ellipsis_args": false, "name": "_effective_decimal_return_scale of Numeric", "ret_type": {".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 1}, "variables": []}}}}, "_expression_adaptations": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "Decorator", "func": {".class": "FuncDef", "arg_kinds": [0], "arg_names": ["self"], "flags": ["is_decorated"], "fullname": "sqlalchemy.sql.sqltypes.Numeric._expression_adaptations", "name": "_expression_adaptations", "type": null}, "is_overload": false, "var": {".class": "Var", "flags": ["is_initialized_in_class", "is_ready"], "fullname": null, "name": "_expression_adaptations", "type": {".class": "Instance", "args": [{".class": "AnyType", "missing_import_name": null, "source_any": {".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 1}, "type_of_any": 7}], "type_ref": "sqlalchemy.util.langhelpers.generic_fn_descriptor"}}}}, "_type_affinity": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "Decorator", "func": {".class": "FuncDef", "arg_kinds": [0], "arg_names": ["self"], "flags": ["is_property", "is_decorated"], "fullname": "sqlalchemy.sql.sqltypes.Numeric._type_affinity", "name": "_type_affinity", "type": {".class": "CallableType", "arg_kinds": [0], "arg_names": ["self"], "arg_types": [{".class": "Instance", "args": [{".class": "TypeVarType", "fullname": "sqlalchemy.sql.sqltypes._N", "id": 1, "name": "_N", "upper_bound": {".class": "UnionType", "items": ["decimal.Decimal", "builtins.float"]}, "values": [], "variance": 0}], "type_ref": "sqlalchemy.sql.sqltypes.Numeric"}], "bound_args": [], "def_extras": {"first_arg": "self"}, "fallback": "builtins.function", "implicit": false, "is_ellipsis_args": false, "name": "_type_affinity of Numeric", "ret_type": {".class": "TypeType", "item": {".class": "Instance", "args": [{".class": "TypeVarType", "fullname": "sqlalchemy.sql.sqltypes._N", "id": 1, "name": "_N", "upper_bound": {".class": "UnionType", "items": ["decimal.Decimal", "builtins.float"]}, "values": [], "variance": 0}], "type_ref": "sqlalchemy.sql.sqltypes.Numeric"}}, "variables": []}}, "is_overload": false, "var": {".class": "Var", "flags": ["is_initialized_in_class", "is_property", "is_ready"], "fullname": null, "name": "_type_affinity", "type": {".class": "CallableType", "arg_kinds": [0], "arg_names": ["self"], "arg_types": [{".class": "Instance", "args": [{".class": "TypeVarType", "fullname": "sqlalchemy.sql.sqltypes._N", "id": 1, "name": "_N", "upper_bound": {".class": "UnionType", "items": ["decimal.Decimal", "builtins.float"]}, "values": [], "variance": 0}], "type_ref": "sqlalchemy.sql.sqltypes.Numeric"}], "bound_args": [], "def_extras": {"first_arg": "self"}, "fallback": "builtins.function", "implicit": false, "is_ellipsis_args": false, "name": "_type_affinity of Numeric", "ret_type": {".class": "TypeType", "item": {".class": "Instance", "args": [{".class": "TypeVarType", "fullname": "sqlalchemy.sql.sqltypes._N", "id": 1, "name": "_N", "upper_bound": {".class": "UnionType", "items": ["decimal.Decimal", "builtins.float"]}, "values": [], "variance": 0}], "type_ref": "sqlalchemy.sql.sqltypes.Numeric"}}, "variables": []}}}}, "asdecimal": {".class": "SymbolTableNode", "implicit": true, "kind": "Mdef", "node": {".class": "Var", "flags": [], "fullname": "sqlalchemy.sql.sqltypes.Numeric.asdecimal", "name": "asdecimal", "type": "builtins.bool"}}, "bind_processor": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "FuncDef", "arg_kinds": [0, 0], "arg_names": ["self", "dialect"], "flags": [], "fullname": "sqlalchemy.sql.sqltypes.Numeric.bind_processor", "name": "bind_processor", "type": null}}, "decimal_return_scale": {".class": "SymbolTableNode", "implicit": true, "kind": "Mdef", "node": {".class": "Var", "flags": [], "fullname": "sqlalchemy.sql.sqltypes.Numeric.decimal_return_scale", "name": "decimal_return_scale", "type": {".class": "UnionType", "items": ["builtins.int", {".class": "NoneType"}]}}}, "get_dbapi_type": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "FuncDef", "arg_kinds": [0, 0], "arg_names": ["self", "dbapi"], "flags": [], "fullname": "sqlalchemy.sql.sqltypes.Numeric.get_dbapi_type", "name": "get_dbapi_type", "type": null}}, "literal_processor": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "FuncDef", "arg_kinds": [0, 0], "arg_names": ["self", "dialect"], "flags": [], "fullname": "sqlalchemy.sql.sqltypes.Numeric.literal_processor", "name": "literal_processor", "type": null}}, "precision": {".class": "SymbolTableNode", "implicit": true, "kind": "Mdef", "node": {".class": "Var", "flags": [], "fullname": "sqlalchemy.sql.sqltypes.Numeric.precision", "name": "precision", "type": {".class": "UnionType", "items": ["builtins.int", {".class": "NoneType"}]}}}, "python_type": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "Decorator", "func": {".class": "FuncDef", "arg_kinds": [0], "arg_names": ["self"], "flags": ["is_property", "is_decorated"], "fullname": "sqlalchemy.sql.sqltypes.Numeric.python_type", "name": "python_type", "type": null}, "is_overload": false, "var": {".class": "Var", "flags": ["is_initialized_in_class", "is_property", "is_ready"], "fullname": null, "name": "python_type", "type": {".class": "CallableType", "arg_kinds": [0], "arg_names": ["self"], "arg_types": [{".class": "Instance", "args": [{".class": "TypeVarType", "fullname": "sqlalchemy.sql.sqltypes._N", "id": 1, "name": "_N", "upper_bound": {".class": "UnionType", "items": ["decimal.Decimal", "builtins.float"]}, "values": [], "variance": 0}], "type_ref": "sqlalchemy.sql.sqltypes.Numeric"}], "bound_args": [], "def_extras": {}, "fallback": "builtins.function", "implicit": true, "is_ellipsis_args": false, "name": "python_type of Numeric", "ret_type": {".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 1}, "variables": []}}}}, "result_processor": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "FuncDef", "arg_kinds": [0, 0, 0], "arg_names": ["self", "dialect", "coltype"], "flags": [], "fullname": "sqlalchemy.sql.sqltypes.Numeric.result_processor", "name": "result_processor", "type": null}}, "scale": {".class": "SymbolTableNode", "implicit": true, "kind": "Mdef", "node": {".class": "Var", "flags": [], "fullname": "sqlalchemy.sql.sqltypes.Numeric.scale", "name": "scale", "type": {".class": "UnionType", "items": ["builtins.int", {".class": "NoneType"}]}}}}, "tuple_type": null, "type_vars": ["_N"], "typeddict_type": null}}, "OperatorType": {".class": "SymbolTableNode", "cross_ref": "sqlalchemy.sql.operators.OperatorType", "kind": "Gdef"}, "Optional": {".class": "SymbolTableNode", "cross_ref": "typing.Optional", "kind": "Gdef"}, "OrderedDict": {".class": "SymbolTableNode", "cross_ref": "sqlalchemy.util._collections.OrderedDict", "kind": "Gdef"}, "PickleType": {".class": "SymbolTableNode", "kind": "Gdef", "node": {".class": "TypeInfo", "_promote": null, "abstract_attributes": [], "bases": [{".class": "Instance", "args": ["builtins.object"], "type_ref": "sqlalchemy.sql.type_api.TypeDecorator"}], "declared_metaclass": null, "defn": {".class": "ClassDef", "fullname": "sqlalchemy.sql.sqltypes.PickleType", "name": "PickleType", "type_vars": []}, "flags": [], "fullname": "sqlalchemy.sql.sqltypes.PickleType", "metaclass_type": null, "metadata": {}, "module_name": "sqlalchemy.sql.sqltypes", "mro": ["sqlalchemy.sql.sqltypes.PickleType", "sqlalchemy.sql.type_api.TypeDecorator", "sqlalchemy.sql.base.SchemaEventTarget", "sqlalchemy.event.registry.EventTarget", "sqlalchemy.sql.type_api.ExternalType", "sqlalchemy.sql.type_api.TypeEngineMixin", "sqlalchemy.sql.type_api.TypeEngine", "sqlalchemy.sql.visitors.Visitable", "builtins.object"], "names": {".class": "SymbolTable", "__init__": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "FuncDef", "arg_kinds": [0, 1, 1, 1, 1], "arg_names": ["self", "protocol", "pickler", "comparator", "impl"], "flags": [], "fullname": "sqlalchemy.sql.sqltypes.PickleType.__init__", "name": "__init__", "type": {".class": "CallableType", "arg_kinds": [0, 1, 1, 1, 1], "arg_names": ["self", "protocol", "pickler", "comparator", "impl"], "arg_types": ["sqlalchemy.sql.sqltypes.PickleType", "builtins.int", {".class": "UnionType", "items": [{".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 2}, {".class": "NoneType"}]}, {".class": "UnionType", "items": [{".class": "CallableType", "arg_kinds": [0, 0], "arg_names": [null, null], "arg_types": [{".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 2}, {".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 2}], "bound_args": [], "def_extras": {}, "fallback": "builtins.function", "implicit": false, "is_ellipsis_args": false, "name": null, "ret_type": "builtins.bool", "variables": []}, {".class": "NoneType"}]}, {".class": "UnionType", "items": [{".class": "TypeType", "item": {".class": "Instance", "args": [{".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 2}], "type_ref": "sqlalchemy.sql.type_api.TypeEngine"}}, {".class": "Instance", "args": [{".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 2}], "type_ref": "sqlalchemy.sql.type_api.TypeEngine"}, {".class": "NoneType"}]}], "bound_args": [], "def_extras": {"first_arg": "self"}, "fallback": "builtins.function", "implicit": false, "is_ellipsis_args": false, "name": "__init__ of PickleType", "ret_type": {".class": "NoneType"}, "variables": []}}}, "__reduce__": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "FuncDef", "arg_kinds": [0], "arg_names": ["self"], "flags": [], "fullname": "sqlalchemy.sql.sqltypes.PickleType.__reduce__", "name": "__reduce__", "type": null}}, "bind_processor": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "FuncDef", "arg_kinds": [0, 0], "arg_names": ["self", "dialect"], "flags": [], "fullname": "sqlalchemy.sql.sqltypes.PickleType.bind_processor", "name": "bind_processor", "type": null}}, "cache_ok": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "Var", "flags": ["is_initialized_in_class"], "fullname": "sqlalchemy.sql.sqltypes.PickleType.cache_ok", "name": "cache_ok", "type": "builtins.bool"}}, "comparator": {".class": "SymbolTableNode", "implicit": true, "kind": "Mdef", "node": {".class": "Var", "flags": [], "fullname": "sqlalchemy.sql.sqltypes.PickleType.comparator", "name": "comparator", "type": {".class": "UnionType", "items": [{".class": "CallableType", "arg_kinds": [0, 0], "arg_names": [null, null], "arg_types": [{".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 2}, {".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 2}], "bound_args": [], "def_extras": {}, "fallback": "builtins.function", "implicit": false, "is_ellipsis_args": false, "name": null, "ret_type": "builtins.bool", "variables": []}, {".class": "NoneType"}]}}}, "compare_values": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "FuncDef", "arg_kinds": [0, 0, 0], "arg_names": ["self", "x", "y"], "flags": [], "fullname": "sqlalchemy.sql.sqltypes.PickleType.compare_values", "name": "compare_values", "type": null}}, "impl": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "Var", "flags": ["is_initialized_in_class"], "fullname": "sqlalchemy.sql.sqltypes.PickleType.impl", "name": "impl", "type": {".class": "CallableType", "arg_kinds": [1], "arg_names": ["length"], "arg_types": [{".class": "UnionType", "items": ["builtins.int", {".class": "NoneType"}]}], "bound_args": ["sqlalchemy.sql.sqltypes.LargeBinary"], "def_extras": {"first_arg": "self"}, "fallback": "builtins.type", "implicit": false, "is_ellipsis_args": false, "name": null, "ret_type": "sqlalchemy.sql.sqltypes.LargeBinary", "variables": []}}}, "pickler": {".class": "SymbolTableNode", "implicit": true, "kind": "Mdef", "node": {".class": "Var", "flags": [], "fullname": "sqlalchemy.sql.sqltypes.PickleType.pickler", "name": "pickler", "type": {".class": "UnionType", "items": [{".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 2}, "_importlib_modulespec.ModuleType"]}}}, "protocol": {".class": "SymbolTableNode", "implicit": true, "kind": "Mdef", "node": {".class": "Var", "flags": [], "fullname": "sqlalchemy.sql.sqltypes.PickleType.protocol", "name": "protocol", "type": "builtins.int"}}, "result_processor": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "FuncDef", "arg_kinds": [0, 0, 0], "arg_names": ["self", "dialect", "coltype"], "flags": [], "fullname": "sqlalchemy.sql.sqltypes.PickleType.result_processor", "name": "result_processor", "type": null}}}, "tuple_type": null, "type_vars": [], "typeddict_type": null}}, "REAL": {".class": "SymbolTableNode", "kind": "Gdef", "node": {".class": "TypeInfo", "_promote": null, "abstract_attributes": [], "bases": [{".class": "Instance", "args": [{".class": "TypeVarType", "fullname": "sqlalchemy.sql.sqltypes._N", "id": 1, "name": "_N", "upper_bound": {".class": "UnionType", "items": ["decimal.Decimal", "builtins.float"]}, "values": [], "variance": 0}], "type_ref": "sqlalchemy.sql.sqltypes.Float"}], "declared_metaclass": null, "defn": {".class": "ClassDef", "fullname": "sqlalchemy.sql.sqltypes.REAL", "name": "REAL", "type_vars": [{".class": "TypeVarDef", "fullname": "sqlalchemy.sql.sqltypes._N", "id": 1, "name": "_N", "upper_bound": {".class": "UnionType", "items": ["decimal.Decimal", "builtins.float"]}, "values": [], "variance": 0}]}, "flags": [], "fullname": "sqlalchemy.sql.sqltypes.REAL", "metaclass_type": null, "metadata": {}, "module_name": "sqlalchemy.sql.sqltypes", "mro": ["sqlalchemy.sql.sqltypes.REAL", "sqlalchemy.sql.sqltypes.Float", "sqlalchemy.sql.sqltypes.Numeric", "sqlalchemy.sql.sqltypes.HasExpressionLookup", "sqlalchemy.sql.type_api.TypeEngineMixin", "sqlalchemy.sql.type_api.TypeEngine", "sqlalchemy.sql.visitors.Visitable", "builtins.object"], "names": {".class": "SymbolTable", "__visit_name__": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "Var", "flags": ["is_initialized_in_class", "is_ready"], "fullname": "sqlalchemy.sql.sqltypes.REAL.__visit_name__", "name": "__visit_name__", "type": "builtins.str"}}}, "tuple_type": null, "type_vars": ["_N"], "typeddict_type": null}}, "SMALLINT": {".class": "SymbolTableNode", "kind": "Gdef", "node": {".class": "TypeInfo", "_promote": null, "abstract_attributes": [], "bases": ["sqlalchemy.sql.sqltypes.SmallInteger"], "declared_metaclass": null, "defn": {".class": "ClassDef", "fullname": "sqlalchemy.sql.sqltypes.SMALLINT", "name": "SMALLINT", "type_vars": []}, "flags": [], "fullname": "sqlalchemy.sql.sqltypes.SMALLINT", "metaclass_type": null, "metadata": {}, "module_name": "sqlalchemy.sql.sqltypes", "mro": ["sqlalchemy.sql.sqltypes.SMALLINT", "sqlalchemy.sql.sqltypes.SmallInteger", "sqlalchemy.sql.sqltypes.Integer", "sqlalchemy.sql.sqltypes.HasExpressionLookup", "sqlalchemy.sql.type_api.TypeEngineMixin", "sqlalchemy.sql.type_api.TypeEngine", "sqlalchemy.sql.visitors.Visitable", "builtins.object"], "names": {".class": "SymbolTable", "__visit_name__": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "Var", "flags": ["is_initialized_in_class", "is_ready"], "fullname": "sqlalchemy.sql.sqltypes.SMALLINT.__visit_name__", "name": "__visit_name__", "type": "builtins.str"}}}, "tuple_type": null, "type_vars": [], "typeddict_type": null}}, "STRINGTYPE": {".class": "SymbolTableNode", "kind": "Gdef", "node": {".class": "Var", "flags": [], "fullname": "sqlalchemy.sql.sqltypes.STRINGTYPE", "name": "STRINGTYPE", "type": "sqlalchemy.sql.sqltypes.String"}}, "SchemaEventTarget": {".class": "SymbolTableNode", "cross_ref": "sqlalchemy.sql.base.SchemaEventTarget", "kind": "Gdef"}, "SchemaType": {".class": "SymbolTableNode", "kind": "Gdef", "node": {".class": "TypeInfo", "_promote": null, "abstract_attributes": [], "bases": ["sqlalchemy.sql.base.SchemaEventTarget", "sqlalchemy.sql.type_api.TypeEngineMixin"], "declared_metaclass": null, "defn": {".class": "ClassDef", "fullname": "sqlalchemy.sql.sqltypes.SchemaType", "name": "SchemaType", "type_vars": []}, "flags": [], "fullname": "sqlalchemy.sql.sqltypes.SchemaType", "metaclass_type": null, "metadata": {}, "module_name": "sqlalchemy.sql.sqltypes", "mro": ["sqlalchemy.sql.sqltypes.SchemaType", "sqlalchemy.sql.base.SchemaEventTarget", "sqlalchemy.event.registry.EventTarget", "sqlalchemy.sql.type_api.TypeEngineMixin", "builtins.object"], "names": {".class": "SymbolTable", "__init__": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "FuncDef", "arg_kinds": [0, 1, 1, 1, 1, 1, 1, 1], "arg_names": ["self", "name", "schema", "metadata", "inherit_schema", "quote", "_create_events", "_adapted_from"], "flags": [], "fullname": "sqlalchemy.sql.sqltypes.SchemaType.__init__", "name": "__init__", "type": {".class": "CallableType", "arg_kinds": [0, 1, 1, 1, 1, 1, 1, 1], "arg_names": ["self", "name", "schema", "metadata", "inherit_schema", "quote", "_create_events", "_adapted_from"], "arg_types": ["sqlalchemy.sql.sqltypes.SchemaType", {".class": "UnionType", "items": ["builtins.str", {".class": "NoneType"}]}, {".class": "UnionType", "items": ["builtins.str", {".class": "NoneType"}]}, {".class": "UnionType", "items": ["sqlalchemy.sql.schema.MetaData", {".class": "NoneType"}]}, "builtins.bool", {".class": "UnionType", "items": ["builtins.bool", {".class": "NoneType"}]}, "builtins.bool", {".class": "UnionType", "items": ["sqlalchemy.sql.sqltypes.SchemaType", {".class": "NoneType"}]}], "bound_args": [], "def_extras": {"first_arg": "self"}, "fallback": "builtins.function", "implicit": false, "is_ellipsis_args": false, "name": "__init__ of SchemaType", "ret_type": {".class": "NoneType"}, "variables": []}}}, "_create_events": {".class": "SymbolTableNode", "implicit": true, "kind": "Mdef", "node": {".class": "Var", "flags": [], "fullname": "sqlalchemy.sql.sqltypes.SchemaType._create_events", "name": "_create_events", "type": "builtins.bool"}}, "_is_impl_for_variant": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "FuncDef", "arg_kinds": [0, 0, 0], "arg_names": ["self", "dialect", "kw"], "flags": [], "fullname": "sqlalchemy.sql.sqltypes.SchemaType._is_impl_for_variant", "name": "_is_impl_for_variant", "type": null}}, "_on_metadata_create": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "FuncDef", "arg_kinds": [0, 0, 0, 4], "arg_names": ["self", "target", "bind", "kw"], "flags": [], "fullname": "sqlalchemy.sql.sqltypes.SchemaType._on_metadata_create", "name": "_on_metadata_create", "type": null}}, "_on_metadata_drop": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "FuncDef", "arg_kinds": [0, 0, 0, 4], "arg_names": ["self", "target", "bind", "kw"], "flags": [], "fullname": "sqlalchemy.sql.sqltypes.SchemaType._on_metadata_drop", "name": "_on_metadata_drop", "type": null}}, "_on_table_create": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "FuncDef", "arg_kinds": [0, 0, 0, 4], "arg_names": ["self", "target", "bind", "kw"], "flags": [], "fullname": "sqlalchemy.sql.sqltypes.SchemaType._on_table_create", "name": "_on_table_create", "type": null}}, "_on_table_drop": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "FuncDef", "arg_kinds": [0, 0, 0, 4], "arg_names": ["self", "target", "bind", "kw"], "flags": [], "fullname": "sqlalchemy.sql.sqltypes.SchemaType._on_table_drop", "name": "_on_table_drop", "type": null}}, "_set_parent": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "FuncDef", "arg_kinds": [0, 0, 4], "arg_names": ["self", "column", "kw"], "flags": [], "fullname": "sqlalchemy.sql.sqltypes.SchemaType._set_parent", "name": "_set_parent", "type": null}}, "_set_table": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "FuncDef", "arg_kinds": [0, 0, 0], "arg_names": ["self", "column", "table"], "flags": [], "fullname": "sqlalchemy.sql.sqltypes.SchemaType._set_table", "name": "_set_table", "type": null}}, "_use_schema_map": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "Var", "flags": ["is_initialized_in_class"], "fullname": "sqlalchemy.sql.sqltypes.SchemaType._use_schema_map", "name": "_use_schema_map", "type": "builtins.bool"}}, "_variant_mapping_for_set_table": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "FuncDef", "arg_kinds": [0, 0], "arg_names": ["self", "column"], "flags": [], "fullname": "sqlalchemy.sql.sqltypes.SchemaType._variant_mapping_for_set_table", "name": "_variant_mapping_for_set_table", "type": null}}, "adapt": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "OverloadedFuncDef", "flags": [], "fullname": "sqlalchemy.sql.sqltypes.SchemaType.adapt", "impl": {".class": "FuncDef", "arg_kinds": [0, 0, 4], "arg_names": ["self", "cls", "kw"], "flags": ["is_overload"], "fullname": "sqlalchemy.sql.sqltypes.SchemaType.adapt", "name": "adapt", "type": {".class": "CallableType", "arg_kinds": [0, 0, 4], "arg_names": ["self", "cls", "kw"], "arg_types": ["sqlalchemy.sql.sqltypes.SchemaType", {".class": "UnionType", "items": [{".class": "TypeType", "item": {".class": "Instance", "args": [{".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 2}], "type_ref": "sqlalchemy.sql.type_api.TypeEngine"}}, {".class": "TypeType", "item": "sqlalchemy.sql.type_api.TypeEngineMixin"}]}, {".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 2}], "bound_args": [], "def_extras": {"first_arg": "self"}, "fallback": "builtins.function", "implicit": false, "is_ellipsis_args": false, "name": "adapt of SchemaType", "ret_type": {".class": "Instance", "args": [{".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 2}], "type_ref": "sqlalchemy.sql.type_api.TypeEngine"}, "variables": []}}, "items": [{".class": "Decorator", "func": {".class": "FuncDef", "arg_kinds": [0, 0, 4], "arg_names": ["self", "cls", "kw"], "flags": ["is_overload", "is_decorated"], "fullname": "sqlalchemy.sql.sqltypes.SchemaType.adapt", "name": "adapt", "type": {".class": "CallableType", "arg_kinds": [0, 0, 4], "arg_names": ["self", "cls", "kw"], "arg_types": ["sqlalchemy.sql.sqltypes.SchemaType", {".class": "TypeType", "item": {".class": "TypeVarType", "fullname": "sqlalchemy.sql.sqltypes._TE", "id": -1, "name": "_TE", "upper_bound": {".class": "Instance", "args": [{".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 2}], "type_ref": "sqlalchemy.sql.type_api.TypeEngine"}, "values": [], "variance": 0}}, {".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 2}], "bound_args": [], "def_extras": {"first_arg": "self"}, "fallback": "builtins.function", "implicit": false, "is_ellipsis_args": false, "name": "adapt of SchemaType", "ret_type": {".class": "TypeVarType", "fullname": "sqlalchemy.sql.sqltypes._TE", "id": -1, "name": "_TE", "upper_bound": {".class": "Instance", "args": [{".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 2}], "type_ref": "sqlalchemy.sql.type_api.TypeEngine"}, "values": [], "variance": 0}, "variables": [{".class": "TypeVarDef", "fullname": "sqlalchemy.sql.sqltypes._TE", "id": -1, "name": "_TE", "upper_bound": {".class": "Instance", "args": [{".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 2}], "type_ref": "sqlalchemy.sql.type_api.TypeEngine"}, "values": [], "variance": 0}]}}, "is_overload": true, "var": {".class": "Var", "flags": [], "fullname": null, "name": "adapt", "type": null}}, {".class": "Decorator", "func": {".class": "FuncDef", "arg_kinds": [0, 0, 4], "arg_names": ["self", "cls", "kw"], "flags": ["is_overload", "is_decorated"], "fullname": "sqlalchemy.sql.sqltypes.SchemaType.adapt", "name": "adapt", "type": {".class": "CallableType", "arg_kinds": [0, 0, 4], "arg_names": ["self", "cls", "kw"], "arg_types": ["sqlalchemy.sql.sqltypes.SchemaType", {".class": "TypeType", "item": "sqlalchemy.sql.type_api.TypeEngineMixin"}, {".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 2}], "bound_args": [], "def_extras": {"first_arg": "self"}, "fallback": "builtins.function", "implicit": false, "is_ellipsis_args": false, "name": "adapt of SchemaType", "ret_type": {".class": "Instance", "args": [{".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 2}], "type_ref": "sqlalchemy.sql.type_api.TypeEngine"}, "variables": []}}, "is_overload": true, "var": {".class": "Var", "flags": [], "fullname": null, "name": "adapt", "type": null}}], "type": {".class": "Overloaded", "items": [{".class": "CallableType", "arg_kinds": [0, 0, 4], "arg_names": ["self", "cls", "kw"], "arg_types": ["sqlalchemy.sql.sqltypes.SchemaType", {".class": "TypeType", "item": {".class": "TypeVarType", "fullname": "sqlalchemy.sql.sqltypes._TE", "id": -1, "name": "_TE", "upper_bound": {".class": "Instance", "args": [{".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 2}], "type_ref": "sqlalchemy.sql.type_api.TypeEngine"}, "values": [], "variance": 0}}, {".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 2}], "bound_args": [], "def_extras": {"first_arg": "self"}, "fallback": "builtins.function", "implicit": false, "is_ellipsis_args": false, "name": "adapt of SchemaType", "ret_type": {".class": "TypeVarType", "fullname": "sqlalchemy.sql.sqltypes._TE", "id": -1, "name": "_TE", "upper_bound": {".class": "Instance", "args": [{".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 2}], "type_ref": "sqlalchemy.sql.type_api.TypeEngine"}, "values": [], "variance": 0}, "variables": [{".class": "TypeVarDef", "fullname": "sqlalchemy.sql.sqltypes._TE", "id": -1, "name": "_TE", "upper_bound": {".class": "Instance", "args": [{".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 2}], "type_ref": "sqlalchemy.sql.type_api.TypeEngine"}, "values": [], "variance": 0}]}, {".class": "CallableType", "arg_kinds": [0, 0, 4], "arg_names": ["self", "cls", "kw"], "arg_types": ["sqlalchemy.sql.sqltypes.SchemaType", {".class": "TypeType", "item": "sqlalchemy.sql.type_api.TypeEngineMixin"}, {".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 2}], "bound_args": [], "def_extras": {"first_arg": "self"}, "fallback": "builtins.function", "implicit": false, "is_ellipsis_args": false, "name": "adapt of SchemaType", "ret_type": {".class": "Instance", "args": [{".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 2}], "type_ref": "sqlalchemy.sql.type_api.TypeEngine"}, "variables": []}]}}}, "copy": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "FuncDef", "arg_kinds": [0, 4], "arg_names": ["self", "kw"], "flags": [], "fullname": "sqlalchemy.sql.sqltypes.SchemaType.copy", "name": "copy", "type": null}}, "create": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "FuncDef", "arg_kinds": [0, 0, 1], "arg_names": ["self", "bind", "checkfirst"], "flags": [], "fullname": "sqlalchemy.sql.sqltypes.SchemaType.create", "name": "create", "type": null}}, "drop": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "FuncDef", "arg_kinds": [0, 0, 1], "arg_names": ["self", "bind", "checkfirst"], "flags": [], "fullname": "sqlalchemy.sql.sqltypes.SchemaType.drop", "name": "drop", "type": null}}, "inherit_schema": {".class": "SymbolTableNode", "implicit": true, "kind": "Mdef", "node": {".class": "Var", "flags": [], "fullname": "sqlalchemy.sql.sqltypes.SchemaType.inherit_schema", "name": "inherit_schema", "type": "builtins.bool"}}, "metadata": {".class": "SymbolTableNode", "implicit": true, "kind": "Mdef", "node": {".class": "Var", "flags": [], "fullname": "sqlalchemy.sql.sqltypes.SchemaType.metadata", "name": "metadata", "type": {".class": "UnionType", "items": ["sqlalchemy.sql.schema.MetaData", {".class": "NoneType"}]}}}, "name": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "Var", "flags": ["is_initialized_in_class", "is_ready"], "fullname": "sqlalchemy.sql.sqltypes.SchemaType.name", "name": "name", "type": {".class": "UnionType", "items": ["builtins.str", {".class": "NoneType"}]}}}, "schema": {".class": "SymbolTableNode", "implicit": true, "kind": "Mdef", "node": {".class": "Var", "flags": [], "fullname": "sqlalchemy.sql.sqltypes.SchemaType.schema", "name": "schema", "type": {".class": "UnionType", "items": ["builtins.str", {".class": "NoneType"}]}}}}, "tuple_type": null, "type_vars": [], "typeddict_type": null}}, "Sequence": {".class": "SymbolTableNode", "cross_ref": "typing.Sequence", "kind": "Gdef"}, "Slice": {".class": "SymbolTableNode", "cross_ref": "sqlalchemy.sql.elements.Slice", "kind": "Gdef"}, "SmallInteger": {".class": "SymbolTableNode", "kind": "Gdef", "node": {".class": "TypeInfo", "_promote": null, "abstract_attributes": [], "bases": ["sqlalchemy.sql.sqltypes.Integer"], "declared_metaclass": null, "defn": {".class": "ClassDef", "fullname": "sqlalchemy.sql.sqltypes.SmallInteger", "name": "SmallInteger", "type_vars": []}, "flags": [], "fullname": "sqlalchemy.sql.sqltypes.SmallInteger", "metaclass_type": null, "metadata": {}, "module_name": "sqlalchemy.sql.sqltypes", "mro": ["sqlalchemy.sql.sqltypes.SmallInteger", "sqlalchemy.sql.sqltypes.Integer", "sqlalchemy.sql.sqltypes.HasExpressionLookup", "sqlalchemy.sql.type_api.TypeEngineMixin", "sqlalchemy.sql.type_api.TypeEngine", "sqlalchemy.sql.visitors.Visitable", "builtins.object"], "names": {".class": "SymbolTable", "__visit_name__": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "Var", "flags": ["is_initialized_in_class", "is_ready"], "fullname": "sqlalchemy.sql.sqltypes.SmallInteger.__visit_name__", "name": "__visit_name__", "type": "builtins.str"}}}, "tuple_type": null, "type_vars": [], "typeddict_type": null}}, "String": {".class": "SymbolTableNode", "kind": "Gdef", "node": {".class": "TypeInfo", "_promote": null, "abstract_attributes": [], "bases": ["sqlalchemy.sql.sqltypes.Concatenable", {".class": "Instance", "args": ["builtins.str"], "type_ref": "sqlalchemy.sql.type_api.TypeEngine"}], "declared_metaclass": null, "defn": {".class": "ClassDef", "fullname": "sqlalchemy.sql.sqltypes.String", "name": "String", "type_vars": []}, "flags": [], "fullname": "sqlalchemy.sql.sqltypes.String", "metaclass_type": null, "metadata": {}, "module_name": "sqlalchemy.sql.sqltypes", "mro": ["sqlalchemy.sql.sqltypes.String", "sqlalchemy.sql.sqltypes.Concatenable", "sqlalchemy.sql.type_api.TypeEngineMixin", "sqlalchemy.sql.type_api.TypeEngine", "sqlalchemy.sql.visitors.Visitable", "builtins.object"], "names": {".class": "SymbolTable", "__init__": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "FuncDef", "arg_kinds": [0, 1, 1], "arg_names": ["self", "length", "collation"], "flags": [], "fullname": "sqlalchemy.sql.sqltypes.String.__init__", "name": "__init__", "type": {".class": "CallableType", "arg_kinds": [0, 1, 1], "arg_names": ["self", "length", "collation"], "arg_types": ["sqlalchemy.sql.sqltypes.String", {".class": "UnionType", "items": ["builtins.int", {".class": "NoneType"}]}, {".class": "UnionType", "items": ["builtins.str", {".class": "NoneType"}]}], "bound_args": [], "def_extras": {"first_arg": "self"}, "fallback": "builtins.function", "implicit": false, "is_ellipsis_args": false, "name": "__init__ of String", "ret_type": {".class": "NoneType"}, "variables": []}}}, "__visit_name__": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "Var", "flags": ["is_initialized_in_class", "is_ready"], "fullname": "sqlalchemy.sql.sqltypes.String.__visit_name__", "name": "__visit_name__", "type": "builtins.str"}}, "_resolve_for_literal": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "FuncDef", "arg_kinds": [0, 0], "arg_names": ["self", "value"], "flags": [], "fullname": "sqlalchemy.sql.sqltypes.String._resolve_for_literal", "name": "_resolve_for_literal", "type": null}}, "bind_processor": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "FuncDef", "arg_kinds": [0, 0], "arg_names": ["self", "dialect"], "flags": [], "fullname": "sqlalchemy.sql.sqltypes.String.bind_processor", "name": "bind_processor", "type": null}}, "collation": {".class": "SymbolTableNode", "implicit": true, "kind": "Mdef", "node": {".class": "Var", "flags": [], "fullname": "sqlalchemy.sql.sqltypes.String.collation", "name": "collation", "type": {".class": "UnionType", "items": ["builtins.str", {".class": "NoneType"}]}}}, "get_dbapi_type": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "FuncDef", "arg_kinds": [0, 0], "arg_names": ["self", "dbapi"], "flags": [], "fullname": "sqlalchemy.sql.sqltypes.String.get_dbapi_type", "name": "get_dbapi_type", "type": null}}, "length": {".class": "SymbolTableNode", "implicit": true, "kind": "Mdef", "node": {".class": "Var", "flags": [], "fullname": "sqlalchemy.sql.sqltypes.String.length", "name": "length", "type": {".class": "UnionType", "items": ["builtins.int", {".class": "NoneType"}]}}}, "literal_processor": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "FuncDef", "arg_kinds": [0, 0], "arg_names": ["self", "dialect"], "flags": [], "fullname": "sqlalchemy.sql.sqltypes.String.literal_processor", "name": "literal_processor", "type": null}}, "python_type": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "Decorator", "func": {".class": "FuncDef", "arg_kinds": [0], "arg_names": ["self"], "flags": ["is_property", "is_decorated"], "fullname": "sqlalchemy.sql.sqltypes.String.python_type", "name": "python_type", "type": null}, "is_overload": false, "var": {".class": "Var", "flags": ["is_initialized_in_class", "is_property", "is_ready"], "fullname": null, "name": "python_type", "type": {".class": "CallableType", "arg_kinds": [0], "arg_names": ["self"], "arg_types": ["sqlalchemy.sql.sqltypes.String"], "bound_args": [], "def_extras": {}, "fallback": "builtins.function", "implicit": true, "is_ellipsis_args": false, "name": "python_type of String", "ret_type": {".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 1}, "variables": []}}}}, "result_processor": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "FuncDef", "arg_kinds": [0, 0, 0], "arg_names": ["self", "dialect", "coltype"], "flags": [], "fullname": "sqlalchemy.sql.sqltypes.String.result_processor", "name": "result_processor", "type": null}}}, "tuple_type": null, "type_vars": [], "typeddict_type": null}}, "TABLEVALUE": {".class": "SymbolTableNode", "kind": "Gdef", "node": {".class": "Var", "flags": [], "fullname": "sqlalchemy.sql.sqltypes.TABLEVALUE", "name": "TABLEVALUE", "type": "sqlalchemy.sql.sqltypes.TableValueType"}}, "TEXT": {".class": "SymbolTableNode", "kind": "Gdef", "node": {".class": "TypeInfo", "_promote": null, "abstract_attributes": [], "bases": ["sqlalchemy.sql.sqltypes.Text"], "declared_metaclass": null, "defn": {".class": "ClassDef", "fullname": "sqlalchemy.sql.sqltypes.TEXT", "name": "TEXT", "type_vars": []}, "flags": [], "fullname": "sqlalchemy.sql.sqltypes.TEXT", "metaclass_type": null, "metadata": {}, "module_name": "sqlalchemy.sql.sqltypes", "mro": ["sqlalchemy.sql.sqltypes.TEXT", "sqlalchemy.sql.sqltypes.Text", "sqlalchemy.sql.sqltypes.String", "sqlalchemy.sql.sqltypes.Concatenable", "sqlalchemy.sql.type_api.TypeEngineMixin", "sqlalchemy.sql.type_api.TypeEngine", "sqlalchemy.sql.visitors.Visitable", "builtins.object"], "names": {".class": "SymbolTable", "__visit_name__": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "Var", "flags": ["is_initialized_in_class", "is_ready"], "fullname": "sqlalchemy.sql.sqltypes.TEXT.__visit_name__", "name": "__visit_name__", "type": "builtins.str"}}}, "tuple_type": null, "type_vars": [], "typeddict_type": null}}, "TIME": {".class": "SymbolTableNode", "kind": "Gdef", "node": {".class": "TypeInfo", "_promote": null, "abstract_attributes": [], "bases": ["sqlalchemy.sql.sqltypes.Time"], "declared_metaclass": null, "defn": {".class": "ClassDef", "fullname": "sqlalchemy.sql.sqltypes.TIME", "name": "TIME", "type_vars": []}, "flags": [], "fullname": "sqlalchemy.sql.sqltypes.TIME", "metaclass_type": null, "metadata": {}, "module_name": "sqlalchemy.sql.sqltypes", "mro": ["sqlalchemy.sql.sqltypes.TIME", "sqlalchemy.sql.sqltypes.Time", "sqlalchemy.sql.sqltypes._RenderISO8601NoT", "sqlalchemy.sql.sqltypes.HasExpressionLookup", "sqlalchemy.sql.type_api.TypeEngineMixin", "sqlalchemy.sql.type_api.TypeEngine", "sqlalchemy.sql.visitors.Visitable", "builtins.object"], "names": {".class": "SymbolTable", "__visit_name__": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "Var", "flags": ["is_initialized_in_class", "is_ready"], "fullname": "sqlalchemy.sql.sqltypes.TIME.__visit_name__", "name": "__visit_name__", "type": "builtins.str"}}}, "tuple_type": null, "type_vars": [], "typeddict_type": null}}, "TIMESTAMP": {".class": "SymbolTableNode", "kind": "Gdef", "node": {".class": "TypeInfo", "_promote": null, "abstract_attributes": [], "bases": ["sqlalchemy.sql.sqltypes.DateTime"], "declared_metaclass": null, "defn": {".class": "ClassDef", "fullname": "sqlalchemy.sql.sqltypes.TIMESTAMP", "name": "TIMESTAMP", "type_vars": []}, "flags": [], "fullname": "sqlalchemy.sql.sqltypes.TIMESTAMP", "metaclass_type": null, "metadata": {}, "module_name": "sqlalchemy.sql.sqltypes", "mro": ["sqlalchemy.sql.sqltypes.TIMESTAMP", "sqlalchemy.sql.sqltypes.DateTime", "sqlalchemy.sql.sqltypes._RenderISO8601NoT", "sqlalchemy.sql.sqltypes.HasExpressionLookup", "sqlalchemy.sql.type_api.TypeEngineMixin", "sqlalchemy.sql.type_api.TypeEngine", "sqlalchemy.sql.visitors.Visitable", "builtins.object"], "names": {".class": "SymbolTable", "__init__": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "FuncDef", "arg_kinds": [0, 1], "arg_names": ["self", "timezone"], "flags": [], "fullname": "sqlalchemy.sql.sqltypes.TIMESTAMP.__init__", "name": "__init__", "type": {".class": "CallableType", "arg_kinds": [0, 1], "arg_names": ["self", "timezone"], "arg_types": ["sqlalchemy.sql.sqltypes.TIMESTAMP", "builtins.bool"], "bound_args": [], "def_extras": {"first_arg": "self"}, "fallback": "builtins.function", "implicit": false, "is_ellipsis_args": false, "name": "__init__ of TIMESTAMP", "ret_type": {".class": "NoneType"}, "variables": []}}}, "__visit_name__": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "Var", "flags": ["is_initialized_in_class", "is_ready"], "fullname": "sqlalchemy.sql.sqltypes.TIMESTAMP.__visit_name__", "name": "__visit_name__", "type": "builtins.str"}}, "get_dbapi_type": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "FuncDef", "arg_kinds": [0, 0], "arg_names": ["self", "dbapi"], "flags": [], "fullname": "sqlalchemy.sql.sqltypes.TIMESTAMP.get_dbapi_type", "name": "get_dbapi_type", "type": null}}}, "tuple_type": null, "type_vars": [], "typeddict_type": null}}, "TIME_TIMEZONE": {".class": "SymbolTableNode", "kind": "Gdef", "node": {".class": "Var", "flags": [], "fullname": "sqlalchemy.sql.sqltypes.TIME_TIMEZONE", "name": "TIME_TIMEZONE", "type": "sqlalchemy.sql.sqltypes.Time"}}, "TYPE_CHECKING": {".class": "SymbolTableNode", "cross_ref": "typing.TYPE_CHECKING", "kind": "Gdef"}, "TableValueType": {".class": "SymbolTableNode", "kind": "Gdef", "node": {".class": "TypeInfo", "_promote": null, "abstract_attributes": [], "bases": ["sqlalchemy.sql.cache_key.HasCacheKey", {".class": "Instance", "args": [{".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 2}], "type_ref": "sqlalchemy.sql.type_api.TypeEngine"}], "declared_metaclass": null, "defn": {".class": "ClassDef", "fullname": "sqlalchemy.sql.sqltypes.TableValueType", "name": "TableValueType", "type_vars": []}, "flags": [], "fullname": "sqlalchemy.sql.sqltypes.TableValueType", "metaclass_type": null, "metadata": {}, "module_name": "sqlalchemy.sql.sqltypes", "mro": ["sqlalchemy.sql.sqltypes.TableValueType", "sqlalchemy.sql.cache_key.HasCacheKey", "sqlalchemy.sql.type_api.TypeEngine", "sqlalchemy.sql.visitors.Visitable", "builtins.object"], "names": {".class": "SymbolTable", "__init__": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "FuncDef", "arg_kinds": [0, 2], "arg_names": ["self", "elements"], "flags": [], "fullname": "sqlalchemy.sql.sqltypes.TableValueType.__init__", "name": "__init__", "type": {".class": "CallableType", "arg_kinds": [0, 2], "arg_names": ["self", "elements"], "arg_types": ["sqlalchemy.sql.sqltypes.TableValueType", {".class": "UnionType", "items": ["builtins.str", {".class": "TypeAliasType", "args": [{".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 2}], "type_ref": "sqlalchemy.sql._typing._ColumnExpressionArgument"}]}], "bound_args": [], "def_extras": {"first_arg": "self"}, "fallback": "builtins.function", "implicit": false, "is_ellipsis_args": false, "name": "__init__ of TableValueType", "ret_type": {".class": "NoneType"}, "variables": []}}}, "_elements": {".class": "SymbolTableNode", "implicit": true, "kind": "Mdef", "node": {".class": "Var", "flags": [], "fullname": "sqlalchemy.sql.sqltypes.TableValueType._elements", "name": "_elements", "type": {".class": "Instance", "args": [{".class": "Instance", "args": [{".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 2}], "type_ref": "sqlalchemy.sql.elements.ColumnElement"}], "type_ref": "builtins.list"}}}, "_is_table_value": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "Var", "flags": ["is_initialized_in_class"], "fullname": "sqlalchemy.sql.sqltypes.TableValueType._is_table_value", "name": "_is_table_value", "type": "builtins.bool"}}, "_traverse_internals": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "Var", "flags": ["is_initialized_in_class"], "fullname": "sqlalchemy.sql.sqltypes.TableValueType._traverse_internals", "name": "_traverse_internals", "type": {".class": "Instance", "args": [{".class": "TupleType", "implicit": false, "items": ["builtins.str", "sqlalchemy.sql.visitors.InternalTraversal"], "partial_fallback": {".class": "Instance", "args": [{".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 6}], "type_ref": "builtins.tuple"}}], "type_ref": "builtins.list"}}}}, "tuple_type": null, "type_vars": [], "typeddict_type": null}}, "Text": {".class": "SymbolTableNode", "kind": "Gdef", "node": {".class": "TypeInfo", "_promote": null, "abstract_attributes": [], "bases": ["sqlalchemy.sql.sqltypes.String"], "declared_metaclass": null, "defn": {".class": "ClassDef", "fullname": "sqlalchemy.sql.sqltypes.Text", "name": "Text", "type_vars": []}, "flags": [], "fullname": "sqlalchemy.sql.sqltypes.Text", "metaclass_type": null, "metadata": {}, "module_name": "sqlalchemy.sql.sqltypes", "mro": ["sqlalchemy.sql.sqltypes.Text", "sqlalchemy.sql.sqltypes.String", "sqlalchemy.sql.sqltypes.Concatenable", "sqlalchemy.sql.type_api.TypeEngineMixin", "sqlalchemy.sql.type_api.TypeEngine", "sqlalchemy.sql.visitors.Visitable", "builtins.object"], "names": {".class": "SymbolTable", "__visit_name__": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "Var", "flags": ["is_initialized_in_class", "is_ready"], "fullname": "sqlalchemy.sql.sqltypes.Text.__visit_name__", "name": "__visit_name__", "type": "builtins.str"}}}, "tuple_type": null, "type_vars": [], "typeddict_type": null}}, "Time": {".class": "SymbolTableNode", "kind": "Gdef", "node": {".class": "TypeInfo", "_promote": null, "abstract_attributes": [], "bases": ["sqlalchemy.sql.sqltypes._RenderISO8601NoT", "sqlalchemy.sql.sqltypes.HasExpressionLookup", {".class": "Instance", "args": ["datetime.time"], "type_ref": "sqlalchemy.sql.type_api.TypeEngine"}], "declared_metaclass": null, "defn": {".class": "ClassDef", "fullname": "sqlalchemy.sql.sqltypes.Time", "name": "Time", "type_vars": []}, "flags": [], "fullname": "sqlalchemy.sql.sqltypes.Time", "metaclass_type": null, "metadata": {}, "module_name": "sqlalchemy.sql.sqltypes", "mro": ["sqlalchemy.sql.sqltypes.Time", "sqlalchemy.sql.sqltypes._RenderISO8601NoT", "sqlalchemy.sql.sqltypes.HasExpressionLookup", "sqlalchemy.sql.type_api.TypeEngineMixin", "sqlalchemy.sql.type_api.TypeEngine", "sqlalchemy.sql.visitors.Visitable", "builtins.object"], "names": {".class": "SymbolTable", "__init__": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "FuncDef", "arg_kinds": [0, 1], "arg_names": ["self", "timezone"], "flags": [], "fullname": "sqlalchemy.sql.sqltypes.Time.__init__", "name": "__init__", "type": {".class": "CallableType", "arg_kinds": [0, 1], "arg_names": ["self", "timezone"], "arg_types": ["sqlalchemy.sql.sqltypes.Time", "builtins.bool"], "bound_args": [], "def_extras": {"first_arg": "self"}, "fallback": "builtins.function", "implicit": false, "is_ellipsis_args": false, "name": "__init__ of Time", "ret_type": {".class": "NoneType"}, "variables": []}}}, "__visit_name__": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "Var", "flags": ["is_initialized_in_class", "is_ready"], "fullname": "sqlalchemy.sql.sqltypes.Time.__visit_name__", "name": "__visit_name__", "type": "builtins.str"}}, "_expression_adaptations": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "Decorator", "func": {".class": "FuncDef", "arg_kinds": [0], "arg_names": ["self"], "flags": ["is_decorated"], "fullname": "sqlalchemy.sql.sqltypes.Time._expression_adaptations", "name": "_expression_adaptations", "type": null}, "is_overload": false, "var": {".class": "Var", "flags": ["is_initialized_in_class", "is_ready"], "fullname": null, "name": "_expression_adaptations", "type": {".class": "Instance", "args": [{".class": "AnyType", "missing_import_name": null, "source_any": {".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 1}, "type_of_any": 7}], "type_ref": "sqlalchemy.util.langhelpers.generic_fn_descriptor"}}}}, "_resolve_for_literal": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "FuncDef", "arg_kinds": [0, 0], "arg_names": ["self", "value"], "flags": [], "fullname": "sqlalchemy.sql.sqltypes.Time._resolve_for_literal", "name": "_resolve_for_literal", "type": null}}, "get_dbapi_type": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "FuncDef", "arg_kinds": [0, 0], "arg_names": ["self", "dbapi"], "flags": [], "fullname": "sqlalchemy.sql.sqltypes.Time.get_dbapi_type", "name": "get_dbapi_type", "type": null}}, "literal_processor": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "FuncDef", "arg_kinds": [0, 0], "arg_names": ["self", "dialect"], "flags": [], "fullname": "sqlalchemy.sql.sqltypes.Time.literal_processor", "name": "literal_processor", "type": null}}, "python_type": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "Decorator", "func": {".class": "FuncDef", "arg_kinds": [0], "arg_names": ["self"], "flags": ["is_property", "is_decorated"], "fullname": "sqlalchemy.sql.sqltypes.Time.python_type", "name": "python_type", "type": null}, "is_overload": false, "var": {".class": "Var", "flags": ["is_initialized_in_class", "is_property", "is_ready"], "fullname": null, "name": "python_type", "type": {".class": "CallableType", "arg_kinds": [0], "arg_names": ["self"], "arg_types": ["sqlalchemy.sql.sqltypes.Time"], "bound_args": [], "def_extras": {}, "fallback": "builtins.function", "implicit": true, "is_ellipsis_args": false, "name": "python_type of Time", "ret_type": {".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 1}, "variables": []}}}}, "timezone": {".class": "SymbolTableNode", "implicit": true, "kind": "Mdef", "node": {".class": "Var", "flags": [], "fullname": "sqlalchemy.sql.sqltypes.Time.timezone", "name": "timezone", "type": "builtins.bool"}}}, "tuple_type": null, "type_vars": [], "typeddict_type": null}}, "Tuple": {".class": "SymbolTableNode", "cross_ref": "typing.Tuple", "kind": "Gdef"}, "TupleType": {".class": "SymbolTableNode", "kind": "Gdef", "node": {".class": "TypeInfo", "_promote": null, "abstract_attributes": [], "bases": [{".class": "Instance", "args": [{".class": "Instance", "args": [{".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 2}], "type_ref": "builtins.tuple"}], "type_ref": "sqlalchemy.sql.type_api.TypeEngine"}], "declared_metaclass": null, "defn": {".class": "ClassDef", "fullname": "sqlalchemy.sql.sqltypes.TupleType", "name": "TupleType", "type_vars": []}, "flags": [], "fullname": "sqlalchemy.sql.sqltypes.TupleType", "metaclass_type": null, "metadata": {}, "module_name": "sqlalchemy.sql.sqltypes", "mro": ["sqlalchemy.sql.sqltypes.TupleType", "sqlalchemy.sql.type_api.TypeEngine", "sqlalchemy.sql.visitors.Visitable", "builtins.object"], "names": {".class": "SymbolTable", "__init__": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "FuncDef", "arg_kinds": [0, 2], "arg_names": ["self", "types"], "flags": [], "fullname": "sqlalchemy.sql.sqltypes.TupleType.__init__", "name": "__init__", "type": {".class": "CallableType", "arg_kinds": [0, 2], "arg_names": ["self", "types"], "arg_types": ["sqlalchemy.sql.sqltypes.TupleType", {".class": "TypeAliasType", "args": [{".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 2}], "type_ref": "sqlalchemy.sql._typing._TypeEngineArgument"}], "bound_args": [], "def_extras": {"first_arg": "self"}, "fallback": "builtins.function", "implicit": false, "is_ellipsis_args": false, "name": "__init__ of TupleType", "ret_type": {".class": "NoneType"}, "variables": []}}}, "_fully_typed": {".class": "SymbolTableNode", "implicit": true, "kind": "Mdef", "node": {".class": "Var", "flags": [], "fullname": "sqlalchemy.sql.sqltypes.TupleType._fully_typed", "name": "_fully_typed", "type": "builtins.bool"}}, "_is_tuple_type": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "Var", "flags": ["is_initialized_in_class"], "fullname": "sqlalchemy.sql.sqltypes.TupleType._is_tuple_type", "name": "_is_tuple_type", "type": "builtins.bool"}}, "_resolve_values_to_types": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "FuncDef", "arg_kinds": [0, 0], "arg_names": ["self", "value"], "flags": [], "fullname": "sqlalchemy.sql.sqltypes.TupleType._resolve_values_to_types", "name": "_resolve_values_to_types", "type": {".class": "CallableType", "arg_kinds": [0, 0], "arg_names": ["self", "value"], "arg_types": ["sqlalchemy.sql.sqltypes.TupleType", {".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 2}], "bound_args": [], "def_extras": {"first_arg": "self"}, "fallback": "builtins.function", "implicit": false, "is_ellipsis_args": false, "name": "_resolve_values_to_types of TupleType", "ret_type": "sqlalchemy.sql.sqltypes.TupleType", "variables": []}}}, "coerce_compared_value": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "FuncDef", "arg_kinds": [0, 0, 0], "arg_names": ["self", "op", "value"], "flags": [], "fullname": "sqlalchemy.sql.sqltypes.TupleType.coerce_compared_value", "name": "coerce_compared_value", "type": {".class": "CallableType", "arg_kinds": [0, 0, 0], "arg_names": ["self", "op", "value"], "arg_types": ["sqlalchemy.sql.sqltypes.TupleType", {".class": "UnionType", "items": ["sqlalchemy.sql.operators.OperatorType", {".class": "NoneType"}]}, {".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 2}], "bound_args": [], "def_extras": {"first_arg": "self"}, "fallback": "builtins.function", "implicit": false, "is_ellipsis_args": false, "name": "coerce_compared_value of TupleType", "ret_type": {".class": "Instance", "args": [{".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 2}], "type_ref": "sqlalchemy.sql.type_api.TypeEngine"}, "variables": []}}}, "result_processor": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "FuncDef", "arg_kinds": [0, 0, 0], "arg_names": ["self", "dialect", "coltype"], "flags": [], "fullname": "sqlalchemy.sql.sqltypes.TupleType.result_processor", "name": "result_processor", "type": null}}, "types": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "Var", "flags": ["is_initialized_in_class", "is_ready"], "fullname": "sqlalchemy.sql.sqltypes.TupleType.types", "name": "types", "type": {".class": "Instance", "args": [{".class": "Instance", "args": [{".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 2}], "type_ref": "sqlalchemy.sql.type_api.TypeEngine"}], "type_ref": "builtins.list"}}}}, "tuple_type": null, "type_vars": [], "typeddict_type": null}}, "Type": {".class": "SymbolTableNode", "cross_ref": "typing.Type", "kind": "Gdef"}, "TypeDecorator": {".class": "SymbolTableNode", "cross_ref": "sqlalchemy.sql.type_api.TypeDecorator", "kind": "Gdef"}, "TypeEngine": {".class": "SymbolTableNode", "cross_ref": "sqlalchemy.sql.type_api.TypeEngine", "kind": "Gdef"}, "TypeEngineMixin": {".class": "SymbolTableNode", "cross_ref": "sqlalchemy.sql.type_api.TypeEngineMixin", "kind": "Gdef"}, "TypeVar": {".class": "SymbolTableNode", "cross_ref": "typing.TypeVar", "kind": "Gdef"}, "UUID": {".class": "SymbolTableNode", "kind": "Gdef", "node": {".class": "TypeInfo", "_promote": null, "abstract_attributes": [], "bases": [{".class": "Instance", "args": [{".class": "TypeVarType", "fullname": "sqlalchemy.sql.sqltypes._UUID_RETURN", "id": 1, "name": "_UUID_RETURN", "upper_bound": "builtins.object", "values": ["builtins.str", "uuid.UUID"], "variance": 0}], "type_ref": "sqlalchemy.sql.sqltypes.Uuid"}], "declared_metaclass": null, "defn": {".class": "ClassDef", "fullname": "sqlalchemy.sql.sqltypes.UUID", "name": "UUID", "type_vars": [{".class": "TypeVarDef", "fullname": "sqlalchemy.sql.sqltypes._UUID_RETURN", "id": 1, "name": "_UUID_RETURN", "upper_bound": "builtins.object", "values": ["builtins.str", "uuid.UUID"], "variance": 0}]}, "flags": [], "fullname": "sqlalchemy.sql.sqltypes.UUID", "metaclass_type": null, "metadata": {}, "module_name": "sqlalchemy.sql.sqltypes", "mro": ["sqlalchemy.sql.sqltypes.UUID", "sqlalchemy.sql.sqltypes.Uuid", "sqlalchemy.sql.type_api.TypeEngine", "sqlalchemy.sql.visitors.Visitable", "builtins.object"], "names": {".class": "SymbolTable", "__init__": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "OverloadedFuncDef", "flags": [], "fullname": "sqlalchemy.sql.sqltypes.UUID.__init__", "impl": {".class": "FuncDef", "arg_kinds": [0, 1], "arg_names": ["self", "as_uuid"], "flags": ["is_overload"], "fullname": "sqlalchemy.sql.sqltypes.UUID.__init__", "name": "__init__", "type": {".class": "CallableType", "arg_kinds": [0, 1], "arg_names": ["self", "as_uuid"], "arg_types": [{".class": "Instance", "args": [{".class": "TypeVarType", "fullname": "sqlalchemy.sql.sqltypes._UUID_RETURN", "id": 1, "name": "_UUID_RETURN", "upper_bound": "builtins.object", "values": ["builtins.str", "uuid.UUID"], "variance": 0}], "type_ref": "sqlalchemy.sql.sqltypes.UUID"}, "builtins.bool"], "bound_args": [], "def_extras": {"first_arg": "self"}, "fallback": "builtins.function", "implicit": false, "is_ellipsis_args": false, "name": "__init__ of UUID", "ret_type": {".class": "NoneType"}, "variables": []}}, "items": [{".class": "Decorator", "func": {".class": "FuncDef", "arg_kinds": [0, 1], "arg_names": ["self", "as_uuid"], "flags": ["is_overload", "is_decorated"], "fullname": "sqlalchemy.sql.sqltypes.UUID.__init__", "name": "__init__", "type": {".class": "CallableType", "arg_kinds": [0, 1], "arg_names": ["self", "as_uuid"], "arg_types": [{".class": "Instance", "args": ["uuid.UUID"], "type_ref": "sqlalchemy.sql.sqltypes.UUID"}, {".class": "LiteralType", "fallback": "builtins.bool", "value": true}], "bound_args": [], "def_extras": {"first_arg": "self"}, "fallback": "builtins.function", "implicit": false, "is_ellipsis_args": false, "name": "__init__ of UUID", "ret_type": {".class": "NoneType"}, "variables": []}}, "is_overload": true, "var": {".class": "Var", "flags": [], "fullname": null, "name": "__init__", "type": null}}, {".class": "Decorator", "func": {".class": "FuncDef", "arg_kinds": [0, 1], "arg_names": ["self", "as_uuid"], "flags": ["is_overload", "is_decorated"], "fullname": "sqlalchemy.sql.sqltypes.UUID.__init__", "name": "__init__", "type": {".class": "CallableType", "arg_kinds": [0, 1], "arg_names": ["self", "as_uuid"], "arg_types": [{".class": "Instance", "args": ["builtins.str"], "type_ref": "sqlalchemy.sql.sqltypes.UUID"}, {".class": "LiteralType", "fallback": "builtins.bool", "value": false}], "bound_args": [], "def_extras": {"first_arg": "self"}, "fallback": "builtins.function", "implicit": false, "is_ellipsis_args": false, "name": "__init__ of UUID", "ret_type": {".class": "NoneType"}, "variables": []}}, "is_overload": true, "var": {".class": "Var", "flags": [], "fullname": null, "name": "__init__", "type": null}}], "type": {".class": "Overloaded", "items": [{".class": "CallableType", "arg_kinds": [0, 1], "arg_names": ["self", "as_uuid"], "arg_types": [{".class": "Instance", "args": ["uuid.UUID"], "type_ref": "sqlalchemy.sql.sqltypes.UUID"}, {".class": "LiteralType", "fallback": "builtins.bool", "value": true}], "bound_args": [], "def_extras": {"first_arg": "self"}, "fallback": "builtins.function", "implicit": false, "is_ellipsis_args": false, "name": "__init__ of UUID", "ret_type": {".class": "NoneType"}, "variables": []}, {".class": "CallableType", "arg_kinds": [0, 1], "arg_names": ["self", "as_uuid"], "arg_types": [{".class": "Instance", "args": ["builtins.str"], "type_ref": "sqlalchemy.sql.sqltypes.UUID"}, {".class": "LiteralType", "fallback": "builtins.bool", "value": false}], "bound_args": [], "def_extras": {"first_arg": "self"}, "fallback": "builtins.function", "implicit": false, "is_ellipsis_args": false, "name": "__init__ of UUID", "ret_type": {".class": "NoneType"}, "variables": []}]}}}, "__visit_name__": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "Var", "flags": ["is_initialized_in_class", "is_ready"], "fullname": "sqlalchemy.sql.sqltypes.UUID.__visit_name__", "name": "__visit_name__", "type": "builtins.str"}}}, "tuple_type": null, "type_vars": ["_UUID_RETURN"], "typeddict_type": null}}, "Unicode": {".class": "SymbolTableNode", "kind": "Gdef", "node": {".class": "TypeInfo", "_promote": null, "abstract_attributes": [], "bases": ["sqlalchemy.sql.sqltypes.String"], "declared_metaclass": null, "defn": {".class": "ClassDef", "fullname": "sqlalchemy.sql.sqltypes.Unicode", "name": "Unicode", "type_vars": []}, "flags": [], "fullname": "sqlalchemy.sql.sqltypes.Unicode", "metaclass_type": null, "metadata": {}, "module_name": "sqlalchemy.sql.sqltypes", "mro": ["sqlalchemy.sql.sqltypes.Unicode", "sqlalchemy.sql.sqltypes.String", "sqlalchemy.sql.sqltypes.Concatenable", "sqlalchemy.sql.type_api.TypeEngineMixin", "sqlalchemy.sql.type_api.TypeEngine", "sqlalchemy.sql.visitors.Visitable", "builtins.object"], "names": {".class": "SymbolTable", "__init__": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "FuncDef", "arg_kinds": [0, 1, 4], "arg_names": ["self", "length", "kwargs"], "flags": [], "fullname": "sqlalchemy.sql.sqltypes.Unicode.__init__", "name": "__init__", "type": null}}, "__visit_name__": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "Var", "flags": ["is_initialized_in_class", "is_ready"], "fullname": "sqlalchemy.sql.sqltypes.Unicode.__visit_name__", "name": "__visit_name__", "type": "builtins.str"}}}, "tuple_type": null, "type_vars": [], "typeddict_type": null}}, "UnicodeText": {".class": "SymbolTableNode", "kind": "Gdef", "node": {".class": "TypeInfo", "_promote": null, "abstract_attributes": [], "bases": ["sqlalchemy.sql.sqltypes.Text"], "declared_metaclass": null, "defn": {".class": "ClassDef", "fullname": "sqlalchemy.sql.sqltypes.UnicodeText", "name": "UnicodeText", "type_vars": []}, "flags": [], "fullname": "sqlalchemy.sql.sqltypes.UnicodeText", "metaclass_type": null, "metadata": {}, "module_name": "sqlalchemy.sql.sqltypes", "mro": ["sqlalchemy.sql.sqltypes.UnicodeText", "sqlalchemy.sql.sqltypes.Text", "sqlalchemy.sql.sqltypes.String", "sqlalchemy.sql.sqltypes.Concatenable", "sqlalchemy.sql.type_api.TypeEngineMixin", "sqlalchemy.sql.type_api.TypeEngine", "sqlalchemy.sql.visitors.Visitable", "builtins.object"], "names": {".class": "SymbolTable", "__init__": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "FuncDef", "arg_kinds": [0, 1, 4], "arg_names": ["self", "length", "kwargs"], "flags": [], "fullname": "sqlalchemy.sql.sqltypes.UnicodeText.__init__", "name": "__init__", "type": null}}, "__visit_name__": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "Var", "flags": ["is_initialized_in_class", "is_ready"], "fullname": "sqlalchemy.sql.sqltypes.UnicodeText.__visit_name__", "name": "__visit_name__", "type": "builtins.str"}}}, "tuple_type": null, "type_vars": [], "typeddict_type": null}}, "Union": {".class": "SymbolTableNode", "cross_ref": "typing.Union", "kind": "Gdef"}, "Uuid": {".class": "SymbolTableNode", "kind": "Gdef", "node": {".class": "TypeInfo", "_promote": null, "abstract_attributes": [], "bases": [{".class": "Instance", "args": [{".class": "TypeVarType", "fullname": "sqlalchemy.sql.sqltypes._UUID_RETURN", "id": 1, "name": "_UUID_RETURN", "upper_bound": "builtins.object", "values": ["builtins.str", "uuid.UUID"], "variance": 0}], "type_ref": "sqlalchemy.sql.type_api.TypeEngine"}], "declared_metaclass": null, "defn": {".class": "ClassDef", "fullname": "sqlalchemy.sql.sqltypes.Uuid", "name": "Uuid", "type_vars": [{".class": "TypeVarDef", "fullname": "sqlalchemy.sql.sqltypes._UUID_RETURN", "id": 1, "name": "_UUID_RETURN", "upper_bound": "builtins.object", "values": ["builtins.str", "uuid.UUID"], "variance": 0}]}, "flags": [], "fullname": "sqlalchemy.sql.sqltypes.Uuid", "metaclass_type": null, "metadata": {}, "module_name": "sqlalchemy.sql.sqltypes", "mro": ["sqlalchemy.sql.sqltypes.Uuid", "sqlalchemy.sql.type_api.TypeEngine", "sqlalchemy.sql.visitors.Visitable", "builtins.object"], "names": {".class": "SymbolTable", "__init__": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "OverloadedFuncDef", "flags": [], "fullname": "sqlalchemy.sql.sqltypes.Uuid.__init__", "impl": {".class": "FuncDef", "arg_kinds": [0, 1, 1], "arg_names": ["self", "as_uuid", "native_uuid"], "flags": ["is_overload"], "fullname": "sqlalchemy.sql.sqltypes.Uuid.__init__", "name": "__init__", "type": {".class": "CallableType", "arg_kinds": [0, 1, 1], "arg_names": ["self", "as_uuid", "native_uuid"], "arg_types": [{".class": "Instance", "args": [{".class": "TypeVarType", "fullname": "sqlalchemy.sql.sqltypes._UUID_RETURN", "id": 1, "name": "_UUID_RETURN", "upper_bound": "builtins.object", "values": ["builtins.str", "uuid.UUID"], "variance": 0}], "type_ref": "sqlalchemy.sql.sqltypes.Uuid"}, "builtins.bool", "builtins.bool"], "bound_args": [], "def_extras": {"first_arg": "self"}, "fallback": "builtins.function", "implicit": false, "is_ellipsis_args": false, "name": "__init__ of Uuid", "ret_type": {".class": "NoneType"}, "variables": []}}, "items": [{".class": "Decorator", "func": {".class": "FuncDef", "arg_kinds": [0, 1, 1], "arg_names": ["self", "as_uuid", "native_uuid"], "flags": ["is_overload", "is_decorated"], "fullname": "sqlalchemy.sql.sqltypes.Uuid.__init__", "name": "__init__", "type": {".class": "CallableType", "arg_kinds": [0, 1, 1], "arg_names": ["self", "as_uuid", "native_uuid"], "arg_types": [{".class": "Instance", "args": ["uuid.UUID"], "type_ref": "sqlalchemy.sql.sqltypes.Uuid"}, {".class": "LiteralType", "fallback": "builtins.bool", "value": true}, "builtins.bool"], "bound_args": [], "def_extras": {"first_arg": "self"}, "fallback": "builtins.function", "implicit": false, "is_ellipsis_args": false, "name": "__init__ of Uuid", "ret_type": {".class": "NoneType"}, "variables": []}}, "is_overload": true, "var": {".class": "Var", "flags": [], "fullname": null, "name": "__init__", "type": null}}, {".class": "Decorator", "func": {".class": "FuncDef", "arg_kinds": [0, 1, 1], "arg_names": ["self", "as_uuid", "native_uuid"], "flags": ["is_overload", "is_decorated"], "fullname": "sqlalchemy.sql.sqltypes.Uuid.__init__", "name": "__init__", "type": {".class": "CallableType", "arg_kinds": [0, 1, 1], "arg_names": ["self", "as_uuid", "native_uuid"], "arg_types": [{".class": "Instance", "args": ["builtins.str"], "type_ref": "sqlalchemy.sql.sqltypes.Uuid"}, {".class": "LiteralType", "fallback": "builtins.bool", "value": false}, "builtins.bool"], "bound_args": [], "def_extras": {"first_arg": "self"}, "fallback": "builtins.function", "implicit": false, "is_ellipsis_args": false, "name": "__init__ of Uuid", "ret_type": {".class": "NoneType"}, "variables": []}}, "is_overload": true, "var": {".class": "Var", "flags": [], "fullname": null, "name": "__init__", "type": null}}], "type": {".class": "Overloaded", "items": [{".class": "CallableType", "arg_kinds": [0, 1, 1], "arg_names": ["self", "as_uuid", "native_uuid"], "arg_types": [{".class": "Instance", "args": ["uuid.UUID"], "type_ref": "sqlalchemy.sql.sqltypes.Uuid"}, {".class": "LiteralType", "fallback": "builtins.bool", "value": true}, "builtins.bool"], "bound_args": [], "def_extras": {"first_arg": "self"}, "fallback": "builtins.function", "implicit": false, "is_ellipsis_args": false, "name": "__init__ of Uuid", "ret_type": {".class": "NoneType"}, "variables": []}, {".class": "CallableType", "arg_kinds": [0, 1, 1], "arg_names": ["self", "as_uuid", "native_uuid"], "arg_types": [{".class": "Instance", "args": ["builtins.str"], "type_ref": "sqlalchemy.sql.sqltypes.Uuid"}, {".class": "LiteralType", "fallback": "builtins.bool", "value": false}, "builtins.bool"], "bound_args": [], "def_extras": {"first_arg": "self"}, "fallback": "builtins.function", "implicit": false, "is_ellipsis_args": false, "name": "__init__ of Uuid", "ret_type": {".class": "NoneType"}, "variables": []}]}}}, "__visit_name__": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "Var", "flags": ["is_initialized_in_class", "is_ready"], "fullname": "sqlalchemy.sql.sqltypes.Uuid.__visit_name__", "name": "__visit_name__", "type": "builtins.str"}}, "as_uuid": {".class": "SymbolTableNode", "implicit": true, "kind": "Mdef", "node": {".class": "Var", "flags": [], "fullname": "sqlalchemy.sql.sqltypes.Uuid.as_uuid", "name": "as_uuid", "type": "builtins.bool"}}, "bind_processor": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "FuncDef", "arg_kinds": [0, 0], "arg_names": ["self", "dialect"], "flags": [], "fullname": "sqlalchemy.sql.sqltypes.Uuid.bind_processor", "name": "bind_processor", "type": null}}, "coerce_compared_value": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "FuncDef", "arg_kinds": [0, 0, 0], "arg_names": ["self", "op", "value"], "flags": [], "fullname": "sqlalchemy.sql.sqltypes.Uuid.coerce_compared_value", "name": "coerce_compared_value", "type": null}}, "collation": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "Var", "flags": ["is_initialized_in_class", "is_ready"], "fullname": "sqlalchemy.sql.sqltypes.Uuid.collation", "name": "collation", "type": {".class": "UnionType", "items": ["builtins.str", {".class": "NoneType"}]}}}, "literal_processor": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "FuncDef", "arg_kinds": [0, 0], "arg_names": ["self", "dialect"], "flags": [], "fullname": "sqlalchemy.sql.sqltypes.Uuid.literal_processor", "name": "literal_processor", "type": null}}, "native_uuid": {".class": "SymbolTableNode", "implicit": true, "kind": "Mdef", "node": {".class": "Var", "flags": [], "fullname": "sqlalchemy.sql.sqltypes.Uuid.native_uuid", "name": "native_uuid", "type": "builtins.bool"}}, "python_type": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "Decorator", "func": {".class": "FuncDef", "arg_kinds": [0], "arg_names": ["self"], "flags": ["is_property", "is_decorated"], "fullname": "sqlalchemy.sql.sqltypes.Uuid.python_type", "name": "python_type", "type": null}, "is_overload": false, "var": {".class": "Var", "flags": ["is_initialized_in_class", "is_property", "is_ready"], "fullname": null, "name": "python_type", "type": {".class": "CallableType", "arg_kinds": [0], "arg_names": ["self"], "arg_types": [{".class": "Instance", "args": [{".class": "TypeVarType", "fullname": "sqlalchemy.sql.sqltypes._UUID_RETURN", "id": 1, "name": "_UUID_RETURN", "upper_bound": "builtins.object", "values": ["builtins.str", "uuid.UUID"], "variance": 0}], "type_ref": "sqlalchemy.sql.sqltypes.Uuid"}], "bound_args": [], "def_extras": {}, "fallback": "builtins.function", "implicit": true, "is_ellipsis_args": false, "name": "python_type of Uuid", "ret_type": {".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 1}, "variables": []}}}}, "result_processor": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "FuncDef", "arg_kinds": [0, 0, 0], "arg_names": ["self", "dialect", "coltype"], "flags": [], "fullname": "sqlalchemy.sql.sqltypes.Uuid.result_processor", "name": "result_processor", "type": null}}}, "tuple_type": null, "type_vars": ["_UUID_RETURN"], "typeddict_type": null}}, "VARBINARY": {".class": "SymbolTableNode", "kind": "Gdef", "node": {".class": "TypeInfo", "_promote": null, "abstract_attributes": [], "bases": ["sqlalchemy.sql.sqltypes._Binary"], "declared_metaclass": null, "defn": {".class": "ClassDef", "fullname": "sqlalchemy.sql.sqltypes.VARBINARY", "name": "VARBINARY", "type_vars": []}, "flags": [], "fullname": "sqlalchemy.sql.sqltypes.VARBINARY", "metaclass_type": null, "metadata": {}, "module_name": "sqlalchemy.sql.sqltypes", "mro": ["sqlalchemy.sql.sqltypes.VARBINARY", "sqlalchemy.sql.sqltypes._Binary", "sqlalchemy.sql.type_api.TypeEngine", "sqlalchemy.sql.visitors.Visitable", "builtins.object"], "names": {".class": "SymbolTable", "__visit_name__": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "Var", "flags": ["is_initialized_in_class", "is_ready"], "fullname": "sqlalchemy.sql.sqltypes.VARBINARY.__visit_name__", "name": "__visit_name__", "type": "builtins.str"}}}, "tuple_type": null, "type_vars": [], "typeddict_type": null}}, "VARCHAR": {".class": "SymbolTableNode", "kind": "Gdef", "node": {".class": "TypeInfo", "_promote": null, "abstract_attributes": [], "bases": ["sqlalchemy.sql.sqltypes.String"], "declared_metaclass": null, "defn": {".class": "ClassDef", "fullname": "sqlalchemy.sql.sqltypes.VARCHAR", "name": "VARCHAR", "type_vars": []}, "flags": [], "fullname": "sqlalchemy.sql.sqltypes.VARCHAR", "metaclass_type": null, "metadata": {}, "module_name": "sqlalchemy.sql.sqltypes", "mro": ["sqlalchemy.sql.sqltypes.VARCHAR", "sqlalchemy.sql.sqltypes.String", "sqlalchemy.sql.sqltypes.Concatenable", "sqlalchemy.sql.type_api.TypeEngineMixin", "sqlalchemy.sql.type_api.TypeEngine", "sqlalchemy.sql.visitors.Visitable", "builtins.object"], "names": {".class": "SymbolTable", "__visit_name__": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "Var", "flags": ["is_initialized_in_class", "is_ready"], "fullname": "sqlalchemy.sql.sqltypes.VARCHAR.__visit_name__", "name": "__visit_name__", "type": "builtins.str"}}}, "tuple_type": null, "type_vars": [], "typeddict_type": null}}, "Variant": {".class": "SymbolTableNode", "cross_ref": "sqlalchemy.sql.type_api.Variant", "kind": "Gdef"}, "_AbstractInterval": {".class": "SymbolTableNode", "kind": "Gdef", "node": {".class": "TypeInfo", "_promote": null, "abstract_attributes": [], "bases": ["sqlalchemy.sql.sqltypes.HasExpressionLookup", {".class": "Instance", "args": ["datetime.timedelta"], "type_ref": "sqlalchemy.sql.type_api.TypeEngine"}], "declared_metaclass": null, "defn": {".class": "ClassDef", "fullname": "sqlalchemy.sql.sqltypes._AbstractInterval", "name": "_AbstractInterval", "type_vars": []}, "flags": [], "fullname": "sqlalchemy.sql.sqltypes._AbstractInterval", "metaclass_type": null, "metadata": {}, "module_name": "sqlalchemy.sql.sqltypes", "mro": ["sqlalchemy.sql.sqltypes._AbstractInterval", "sqlalchemy.sql.sqltypes.HasExpressionLookup", "sqlalchemy.sql.type_api.TypeEngineMixin", "sqlalchemy.sql.type_api.TypeEngine", "sqlalchemy.sql.visitors.Visitable", "builtins.object"], "names": {".class": "SymbolTable", "_expression_adaptations": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "Decorator", "func": {".class": "FuncDef", "arg_kinds": [0], "arg_names": ["self"], "flags": ["is_decorated"], "fullname": "sqlalchemy.sql.sqltypes._AbstractInterval._expression_adaptations", "name": "_expression_adaptations", "type": null}, "is_overload": false, "var": {".class": "Var", "flags": ["is_initialized_in_class", "is_ready"], "fullname": null, "name": "_expression_adaptations", "type": {".class": "Instance", "args": [{".class": "AnyType", "missing_import_name": null, "source_any": {".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 1}, "type_of_any": 7}], "type_ref": "sqlalchemy.util.langhelpers.generic_fn_descriptor"}}}}, "_type_affinity": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "Decorator", "func": {".class": "FuncDef", "arg_kinds": [0], "arg_names": ["self"], "flags": ["is_property", "is_decorated"], "fullname": "sqlalchemy.sql.sqltypes._AbstractInterval._type_affinity", "name": "_type_affinity", "type": {".class": "CallableType", "arg_kinds": [0], "arg_names": ["self"], "arg_types": ["sqlalchemy.sql.sqltypes._AbstractInterval"], "bound_args": [], "def_extras": {"first_arg": "self"}, "fallback": "builtins.function", "implicit": false, "is_ellipsis_args": false, "name": "_type_affinity of _AbstractInterval", "ret_type": {".class": "TypeType", "item": "sqlalchemy.sql.sqltypes.Interval"}, "variables": []}}, "is_overload": false, "var": {".class": "Var", "flags": ["is_initialized_in_class", "is_property", "is_ready"], "fullname": null, "name": "_type_affinity", "type": {".class": "CallableType", "arg_kinds": [0], "arg_names": ["self"], "arg_types": ["sqlalchemy.sql.sqltypes._AbstractInterval"], "bound_args": [], "def_extras": {"first_arg": "self"}, "fallback": "builtins.function", "implicit": false, "is_ellipsis_args": false, "name": "_type_affinity of _AbstractInterval", "ret_type": {".class": "TypeType", "item": "sqlalchemy.sql.sqltypes.Interval"}, "variables": []}}}}}, "tuple_type": null, "type_vars": [], "typeddict_type": null}}, "_BIGINTEGER": {".class": "SymbolTableNode", "kind": "Gdef", "node": {".class": "Var", "flags": [], "fullname": "sqlalchemy.sql.sqltypes._BIGINTEGER", "name": "_BIGINTEGER", "type": "sqlalchemy.sql.sqltypes.BigInteger"}}, "_Binary": {".class": "SymbolTableNode", "kind": "Gdef", "node": {".class": "TypeInfo", "_promote": null, "abstract_attributes": [], "bases": [{".class": "Instance", "args": ["builtins.bytes"], "type_ref": "sqlalchemy.sql.type_api.TypeEngine"}], "declared_metaclass": null, "defn": {".class": "ClassDef", "fullname": "sqlalchemy.sql.sqltypes._Binary", "name": "_Binary", "type_vars": []}, "flags": [], "fullname": "sqlalchemy.sql.sqltypes._Binary", "metaclass_type": null, "metadata": {}, "module_name": "sqlalchemy.sql.sqltypes", "mro": ["sqlalchemy.sql.sqltypes._Binary", "sqlalchemy.sql.type_api.TypeEngine", "sqlalchemy.sql.visitors.Visitable", "builtins.object"], "names": {".class": "SymbolTable", "__init__": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "FuncDef", "arg_kinds": [0, 1], "arg_names": ["self", "length"], "flags": [], "fullname": "sqlalchemy.sql.sqltypes._Binary.__init__", "name": "__init__", "type": {".class": "CallableType", "arg_kinds": [0, 1], "arg_names": ["self", "length"], "arg_types": ["sqlalchemy.sql.sqltypes._Binary", {".class": "UnionType", "items": ["builtins.int", {".class": "NoneType"}]}], "bound_args": [], "def_extras": {"first_arg": "self"}, "fallback": "builtins.function", "implicit": false, "is_ellipsis_args": false, "name": "__init__ of _Binary", "ret_type": {".class": "NoneType"}, "variables": []}}}, "bind_processor": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "FuncDef", "arg_kinds": [0, 0], "arg_names": ["self", "dialect"], "flags": [], "fullname": "sqlalchemy.sql.sqltypes._Binary.bind_processor", "name": "bind_processor", "type": null}}, "coerce_compared_value": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "FuncDef", "arg_kinds": [0, 0, 0], "arg_names": ["self", "op", "value"], "flags": [], "fullname": "sqlalchemy.sql.sqltypes._Binary.coerce_compared_value", "name": "coerce_compared_value", "type": null}}, "get_dbapi_type": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "FuncDef", "arg_kinds": [0, 0], "arg_names": ["self", "dbapi"], "flags": [], "fullname": "sqlalchemy.sql.sqltypes._Binary.get_dbapi_type", "name": "get_dbapi_type", "type": null}}, "length": {".class": "SymbolTableNode", "implicit": true, "kind": "Mdef", "node": {".class": "Var", "flags": [], "fullname": "sqlalchemy.sql.sqltypes._Binary.length", "name": "length", "type": {".class": "UnionType", "items": ["builtins.int", {".class": "NoneType"}]}}}, "literal_processor": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "FuncDef", "arg_kinds": [0, 0], "arg_names": ["self", "dialect"], "flags": [], "fullname": "sqlalchemy.sql.sqltypes._Binary.literal_processor", "name": "literal_processor", "type": null}}, "python_type": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "Decorator", "func": {".class": "FuncDef", "arg_kinds": [0], "arg_names": ["self"], "flags": ["is_property", "is_decorated"], "fullname": "sqlalchemy.sql.sqltypes._Binary.python_type", "name": "python_type", "type": null}, "is_overload": false, "var": {".class": "Var", "flags": ["is_initialized_in_class", "is_property", "is_ready"], "fullname": null, "name": "python_type", "type": {".class": "CallableType", "arg_kinds": [0], "arg_names": ["self"], "arg_types": ["sqlalchemy.sql.sqltypes._Binary"], "bound_args": [], "def_extras": {}, "fallback": "builtins.function", "implicit": true, "is_ellipsis_args": false, "name": "python_type of _Binary", "ret_type": {".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 1}, "variables": []}}}}, "result_processor": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "FuncDef", "arg_kinds": [0, 0, 0], "arg_names": ["self", "dialect", "coltype"], "flags": [], "fullname": "sqlalchemy.sql.sqltypes._Binary.result_processor", "name": "result_processor", "type": null}}}, "tuple_type": null, "type_vars": [], "typeddict_type": null}}, "_BindProcessorType": {".class": "SymbolTableNode", "cross_ref": "sqlalchemy.sql.type_api._BindProcessorType", "kind": "Gdef"}, "_CT": {".class": "SymbolTableNode", "kind": "Gdef", "node": {".class": "TypeVarExpr", "fullname": "sqlalchemy.sql.sqltypes._CT", "name": "_CT", "upper_bound": {".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 2}, "values": [], "variance": 0}}, "_ColumnExpressionArgument": {".class": "SymbolTableNode", "cross_ref": "sqlalchemy.sql._typing._ColumnExpressionArgument", "kind": "Gdef"}, "_ComparatorFactory": {".class": "SymbolTableNode", "cross_ref": "sqlalchemy.sql.type_api._ComparatorFactory", "kind": "Gdef"}, "_DATETIME": {".class": "SymbolTableNode", "kind": "Gdef", "node": {".class": "Var", "flags": [], "fullname": "sqlalchemy.sql.sqltypes._DATETIME", "name": "_DATETIME", "type": "sqlalchemy.sql.sqltypes.DateTime"}}, "_MatchedOnType": {".class": "SymbolTableNode", "cross_ref": "sqlalchemy.sql.type_api._MatchedOnType", "kind": "Gdef"}, "_N": {".class": "SymbolTableNode", "kind": "Gdef", "node": {".class": "TypeVarExpr", "fullname": "sqlalchemy.sql.sqltypes._N", "name": "_N", "upper_bound": {".class": "UnionType", "items": ["decimal.Decimal", "builtins.float"]}, "values": [], "variance": 0}}, "_NONE_NAME": {".class": "SymbolTableNode", "cross_ref": "sqlalchemy.sql.base._NONE_NAME", "kind": "Gdef"}, "_RenderISO8601NoT": {".class": "SymbolTableNode", "kind": "Gdef", "node": {".class": "TypeInfo", "_promote": null, "abstract_attributes": [], "bases": ["builtins.object"], "declared_metaclass": null, "defn": {".class": "ClassDef", "fullname": "sqlalchemy.sql.sqltypes._RenderISO8601NoT", "name": "_RenderISO8601NoT", "type_vars": []}, "flags": [], "fullname": "sqlalchemy.sql.sqltypes._RenderISO8601NoT", "metaclass_type": null, "metadata": {}, "module_name": "sqlalchemy.sql.sqltypes", "mro": ["sqlalchemy.sql.sqltypes._RenderISO8601NoT", "builtins.object"], "names": {".class": "SymbolTable", "_literal_processor_date": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "FuncDef", "arg_kinds": [0, 0], "arg_names": ["self", "dialect"], "flags": [], "fullname": "sqlalchemy.sql.sqltypes._RenderISO8601NoT._literal_processor_date", "name": "_literal_processor_date", "type": null}}, "_literal_processor_datetime": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "FuncDef", "arg_kinds": [0, 0], "arg_names": ["self", "dialect"], "flags": [], "fullname": "sqlalchemy.sql.sqltypes._RenderISO8601NoT._literal_processor_datetime", "name": "_literal_processor_datetime", "type": null}}, "_literal_processor_portion": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "FuncDef", "arg_kinds": [0, 0, 1], "arg_names": ["self", "dialect", "_portion"], "flags": [], "fullname": "sqlalchemy.sql.sqltypes._RenderISO8601NoT._literal_processor_portion", "name": "_literal_processor_portion", "type": null}}, "_literal_processor_time": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "FuncDef", "arg_kinds": [0, 0], "arg_names": ["self", "dialect"], "flags": [], "fullname": "sqlalchemy.sql.sqltypes._RenderISO8601NoT._literal_processor_time", "name": "_literal_processor_time", "type": null}}}, "tuple_type": null, "type_vars": [], "typeddict_type": null}}, "_ResultProcessorType": {".class": "SymbolTableNode", "cross_ref": "sqlalchemy.sql.type_api._ResultProcessorType", "kind": "Gdef"}, "_STRING": {".class": "SymbolTableNode", "kind": "Gdef", "node": {".class": "Var", "flags": [], "fullname": "sqlalchemy.sql.sqltypes._STRING", "name": "_STRING", "type": "sqlalchemy.sql.sqltypes.String"}}, "_T": {".class": "SymbolTableNode", "kind": "Gdef", "node": {".class": "TypeVarExpr", "fullname": "sqlalchemy.sql.sqltypes._T", "name": "_T", "upper_bound": {".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 2}, "values": [], "variance": 0}}, "_TE": {".class": "SymbolTableNode", "kind": "Gdef", "node": {".class": "TypeVarExpr", "fullname": "sqlalchemy.sql.sqltypes._TE", "name": "_TE", "upper_bound": {".class": "Instance", "args": [{".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 2}], "type_ref": "sqlalchemy.sql.type_api.TypeEngine"}, "values": [], "variance": 0}}, "_TIME": {".class": "SymbolTableNode", "kind": "Gdef", "node": {".class": "Var", "flags": [], "fullname": "sqlalchemy.sql.sqltypes._TIME", "name": "_TIME", "type": "sqlalchemy.sql.sqltypes.Time"}}, "_TypeEngineArgument": {".class": "SymbolTableNode", "cross_ref": "sqlalchemy.sql._typing._TypeEngineArgument", "kind": "Gdef"}, "_UNICODE": {".class": "SymbolTableNode", "kind": "Gdef", "node": {".class": "Var", "flags": [], "fullname": "sqlalchemy.sql.sqltypes._UNICODE", "name": "_UNICODE", "type": "sqlalchemy.sql.sqltypes.Unicode"}}, "_UUID_RETURN": {".class": "SymbolTableNode", "kind": "Gdef", "node": {".class": "TypeVarExpr", "fullname": "sqlalchemy.sql.sqltypes._UUID_RETURN", "name": "_UUID_RETURN", "upper_bound": "builtins.object", "values": ["builtins.str", "uuid.UUID"], "variance": 0}}, "__doc__": {".class": "SymbolTableNode", "kind": "Gdef", "node": {".class": "Var", "flags": ["is_ready"], "fullname": "sqlalchemy.sql.sqltypes.__doc__", "name": "__doc__", "type": "builtins.str"}}, "__file__": {".class": "SymbolTableNode", "kind": "Gdef", "node": {".class": "Var", "flags": ["is_ready"], "fullname": "sqlalchemy.sql.sqltypes.__file__", "name": "__file__", "type": "builtins.str"}}, "__name__": {".class": "SymbolTableNode", "kind": "Gdef", "node": {".class": "Var", "flags": ["is_ready"], "fullname": "sqlalchemy.sql.sqltypes.__name__", "name": "__name__", "type": "builtins.str"}}, "__package__": {".class": "SymbolTableNode", "kind": "Gdef", "node": {".class": "Var", "flags": ["is_ready"], "fullname": "sqlalchemy.sql.sqltypes.__package__", "name": "__package__", "type": "builtins.str"}}, "_python_UUID": {".class": "SymbolTableNode", "cross_ref": "uuid.UUID", "kind": "Gdef"}, "_resolve_value_to_type": {".class": "SymbolTableNode", "kind": "Gdef", "node": {".class": "FuncDef", "arg_kinds": [0], "arg_names": ["value"], "flags": [], "fullname": "sqlalchemy.sql.sqltypes._resolve_value_to_type", "name": "_resolve_value_to_type", "type": {".class": "CallableType", "arg_kinds": [0], "arg_names": ["value"], "arg_types": [{".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 2}], "bound_args": [], "def_extras": {"first_arg": null}, "fallback": "builtins.function", "implicit": false, "is_ellipsis_args": false, "name": "_resolve_value_to_type", "ret_type": {".class": "Instance", "args": [{".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 2}], "type_ref": "sqlalchemy.sql.type_api.TypeEngine"}, "variables": []}}}, "_type_map": {".class": "SymbolTableNode", "kind": "Gdef", "node": {".class": "Var", "flags": ["is_ready"], "fullname": "sqlalchemy.sql.sqltypes._type_map", "name": "_type_map", "type": {".class": "Instance", "args": [{".class": "TypeType", "item": {".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 2}}, {".class": "Instance", "args": [{".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 2}], "type_ref": "sqlalchemy.sql.type_api.TypeEngine"}], "type_ref": "builtins.dict"}}}, "_type_map_get": {".class": "SymbolTableNode", "kind": "Gdef", "node": {".class": "Var", "flags": [], "fullname": "sqlalchemy.sql.sqltypes._type_map_get", "name": "_type_map_get", "type": {".class": "Overloaded", "items": [{".class": "CallableType", "arg_kinds": [0], "arg_names": ["k"], "arg_types": [{".class": "TypeType", "item": {".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 2}}], "bound_args": [{".class": "Instance", "args": [{".class": "TypeType", "item": {".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 2}}, {".class": "Instance", "args": [{".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 2}], "type_ref": "sqlalchemy.sql.type_api.TypeEngine"}], "type_ref": "builtins.dict"}], "def_extras": {"first_arg": "self"}, "fallback": "builtins.function", "implicit": false, "is_ellipsis_args": false, "name": null, "ret_type": {".class": "UnionType", "items": [{".class": "Instance", "args": [{".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 2}], "type_ref": "sqlalchemy.sql.type_api.TypeEngine"}, {".class": "NoneType"}]}, "variables": []}, {".class": "CallableType", "arg_kinds": [0, 0], "arg_names": ["k", "default"], "arg_types": [{".class": "TypeType", "item": {".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 2}}, {".class": "UnionType", "items": [{".class": "Instance", "args": [{".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 2}], "type_ref": "sqlalchemy.sql.type_api.TypeEngine"}, {".class": "TypeVarType", "fullname": "typing._T", "id": 4956, "name": "_T", "upper_bound": "builtins.object", "values": [], "variance": 0}]}], "bound_args": [{".class": "Instance", "args": [{".class": "TypeType", "item": {".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 2}}, {".class": "Instance", "args": [{".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 2}], "type_ref": "sqlalchemy.sql.type_api.TypeEngine"}], "type_ref": "builtins.dict"}], "def_extras": {"first_arg": "self"}, "fallback": "builtins.function", "implicit": false, "is_ellipsis_args": false, "name": null, "ret_type": {".class": "UnionType", "items": [{".class": "Instance", "args": [{".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 2}], "type_ref": "sqlalchemy.sql.type_api.TypeEngine"}, {".class": "TypeVarType", "fullname": "typing._T", "id": 4956, "name": "_T", "upper_bound": "builtins.object", "values": [], "variance": 0}]}, "variables": [{".class": "TypeVarDef", "fullname": "typing._T", "id": 4956, "name": "_T", "upper_bound": "builtins.object", "values": [], "variance": 0}]}]}}}, "annotations": {".class": "SymbolTableNode", "cross_ref": "__future__.annotations", "kind": "Gdef"}, "cast": {".class": "SymbolTableNode", "cross_ref": "typing.cast", "kind": "Gdef"}, "coercions": {".class": "SymbolTableNode", "cross_ref": "sqlalchemy.sql.coercions", "kind": "Gdef"}, "collections_abc": {".class": "SymbolTableNode", "cross_ref": "collections.abc", "kind": "Gdef"}, "decimal": {".class": "SymbolTableNode", "cross_ref": "decimal", "kind": "Gdef"}, "dt": {".class": "SymbolTableNode", "cross_ref": "datetime", "kind": "Gdef"}, "elements": {".class": "SymbolTableNode", "cross_ref": "sqlalchemy.sql.elements", "kind": "Gdef"}, "enum": {".class": "SymbolTableNode", "cross_ref": "enum", "kind": "Gdef"}, "event": {".class": "SymbolTableNode", "cross_ref": "sqlalchemy.event", "kind": "Gdef"}, "exc": {".class": "SymbolTableNode", "cross_ref": "sqlalchemy.exc", "kind": "Gdef"}, "inspection": {".class": "SymbolTableNode", "cross_ref": "sqlalchemy.inspection", "kind": "Gdef"}, "is_literal": {".class": "SymbolTableNode", "cross_ref": "sqlalchemy.util.typing.is_literal", "kind": "Gdef"}, "json": {".class": "SymbolTableNode", "cross_ref": "json", "kind": "Gdef"}, "langhelpers": {".class": "SymbolTableNode", "cross_ref": "sqlalchemy.util.langhelpers", "kind": "Gdef"}, "operators": {".class": "SymbolTableNode", "cross_ref": "sqlalchemy.sql.operators", "kind": "Gdef"}, "overload": {".class": "SymbolTableNode", "cross_ref": "typing.overload", "kind": "Gdef"}, "pickle": {".class": "SymbolTableNode", "cross_ref": "pickle", "kind": "Gdef"}, "processors": {".class": "SymbolTableNode", "cross_ref": "sqlalchemy.engine.processors", "kind": "Gdef"}, "quoted_name": {".class": "SymbolTableNode", "cross_ref": "sqlalchemy.sql.elements.quoted_name", "kind": "Gdef"}, "roles": {".class": "SymbolTableNode", "cross_ref": "sqlalchemy.sql.roles", "kind": "Gdef"}, "to_instance": {".class": "SymbolTableNode", "cross_ref": "sqlalchemy.sql.type_api.to_instance", "kind": "Gdef"}, "type_api": {".class": "SymbolTableNode", "cross_ref": "sqlalchemy.sql.type_api", "kind": "Gdef"}, "type_coerce": {".class": "SymbolTableNode", "cross_ref": "sqlalchemy.sql.elements.TypeCoerce", "kind": "Gdef"}, "typing_get_args": {".class": "SymbolTableNode", "cross_ref": "sqlalchemy.util.typing.typing_get_args", "kind": "Gdef"}, "util": {".class": "SymbolTableNode", "cross_ref": "sqlalchemy.util", "kind": "Gdef"}}, "path": "/home/gabriel/.local/lib/python3.8/site-packages/sqlalchemy/sql/sqltypes.py"}