{".class": "MypyFile", "_fullname": "sqlalchemy.sql.selectable", "is_partial_stub_package": false, "is_stub": false, "names": {".class": "SymbolTable", "AbstractSet": {".class": "SymbolTableNode", "cross_ref": "typing.AbstractSet", "kind": "Gdef"}, "Alias": {".class": "SymbolTableNode", "kind": "Gdef", "node": {".class": "TypeInfo", "_promote": null, "abstract_attributes": [], "bases": ["sqlalchemy.sql.roles.DMLTableRole", "sqlalchemy.sql.selectable.FromClauseAlias"], "declared_metaclass": null, "defn": {".class": "ClassDef", "fullname": "sqlalchemy.sql.selectable.Alias", "name": "Alias", "type_vars": []}, "flags": [], "fullname": "sqlalchemy.sql.selectable.Alias", "metaclass_type": null, "metadata": {}, "module_name": "sqlalchemy.sql.selectable", "mro": ["sqlalchemy.sql.selectable.Alias", "sqlalchemy.sql.roles.DMLTableRole", "sqlalchemy.sql.selectable.FromClauseAlias", "sqlalchemy.sql.selectable.AliasedReturnsRows", "sqlalchemy.sql.selectable.NoInit", "sqlalchemy.sql.selectable.NamedFromClause", "sqlalchemy.sql.selectable.FromClause", "sqlalchemy.sql.roles.AnonymizedFromClauseRole", "sqlalchemy.sql.roles.StrictFromClauseRole", "sqlalchemy.sql.roles.FromClauseRole", "sqlalchemy.sql.roles.ColumnsClauseRole", "sqlalchemy.sql.roles.JoinTargetRole", "sqlalchemy.sql.roles.AllowsLambdaRole", "sqlalchemy.sql.roles.UsesInspection", "sqlalchemy.sql.roles.ColumnListRole", "sqlalchemy.sql.roles.StructuralRole", "sqlalchemy.sql.selectable.Selectable", "sqlalchemy.sql.selectable.ReturnsRows", "sqlalchemy.sql.roles.ReturnsRowsRole", "sqlalchemy.sql.roles.SQLRole", "sqlalchemy.sql.elements.DQLDMLClauseElement", "sqlalchemy.sql.elements.ClauseElement", "sqlalchemy.sql.annotation.SupportsWrappingAnnotations", "sqlalchemy.sql.annotation.SupportsAnnotations", "sqlalchemy.sql.cache_key.MemoizedHasCacheKey", "sqlalchemy.sql.cache_key.HasCacheKey", "sqlalchemy.util.langhelpers.HasMemoized", "sqlalchemy.sql.traversals.HasCopyInternals", "sqlalchemy.sql.visitors.ExternallyTraversible", "sqlalchemy.sql.visitors.HasTraverseInternals", "sqlalchemy.sql.elements.CompilerElement", "sqlalchemy.sql.visitors.Visitable", "builtins.object"], "names": {".class": "SymbolTable", "__visit_name__": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "Var", "flags": ["is_initialized_in_class", "is_ready"], "fullname": "sqlalchemy.sql.selectable.Alias.__visit_name__", "name": "__visit_name__", "type": "builtins.str"}}, "_factory": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "Decorator", "func": {".class": "FuncDef", "arg_kinds": [0, 0, 1, 1], "arg_names": ["cls", "selectable", "name", "flat"], "flags": ["is_class", "is_decorated"], "fullname": "sqlalchemy.sql.selectable.Alias._factory", "name": "_factory", "type": {".class": "CallableType", "arg_kinds": [0, 0, 1, 1], "arg_names": ["cls", "selectable", "name", "flat"], "arg_types": [{".class": "TypeType", "item": "sqlalchemy.sql.selectable.Alias"}, "sqlalchemy.sql.selectable.FromClause", {".class": "UnionType", "items": ["builtins.str", {".class": "NoneType"}]}, "builtins.bool"], "bound_args": [], "def_extras": {"first_arg": "cls"}, "fallback": "builtins.function", "implicit": false, "is_ellipsis_args": false, "name": "_factory of Alias", "ret_type": "sqlalchemy.sql.selectable.NamedFromClause", "variables": []}}, "is_overload": false, "var": {".class": "Var", "flags": ["is_initialized_in_class", "is_classmethod", "is_ready"], "fullname": null, "name": "_factory", "type": {".class": "CallableType", "arg_kinds": [0, 0, 1, 1], "arg_names": ["cls", "selectable", "name", "flat"], "arg_types": [{".class": "TypeType", "item": "sqlalchemy.sql.selectable.Alias"}, "sqlalchemy.sql.selectable.FromClause", {".class": "UnionType", "items": ["builtins.str", {".class": "NoneType"}]}, "builtins.bool"], "bound_args": [], "def_extras": {"first_arg": "cls"}, "fallback": "builtins.function", "implicit": false, "is_ellipsis_args": false, "name": "_factory of Alias", "ret_type": "sqlalchemy.sql.selectable.NamedFromClause", "variables": []}}}}, "element": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "Var", "flags": ["is_initialized_in_class", "is_ready"], "fullname": "sqlalchemy.sql.selectable.Alias.element", "name": "element", "type": "sqlalchemy.sql.selectable.FromClause"}}, "inherit_cache": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "Var", "flags": ["is_initialized_in_class"], "fullname": "sqlalchemy.sql.selectable.Alias.inherit_cache", "name": "inherit_cache", "type": "builtins.bool"}}}, "tuple_type": null, "type_vars": [], "typeddict_type": null}}, "AliasedReturnsRows": {".class": "SymbolTableNode", "kind": "Gdef", "node": {".class": "TypeInfo", "_promote": null, "abstract_attributes": [], "bases": ["sqlalchemy.sql.selectable.NoInit", "sqlalchemy.sql.selectable.NamedFromClause"], "declared_metaclass": null, "defn": {".class": "ClassDef", "fullname": "sqlalchemy.sql.selectable.AliasedReturnsRows", "name": "AliasedReturnsRows", "type_vars": []}, "flags": [], "fullname": "sqlalchemy.sql.selectable.AliasedReturnsRows", "metaclass_type": null, "metadata": {}, "module_name": "sqlalchemy.sql.selectable", "mro": ["sqlalchemy.sql.selectable.AliasedReturnsRows", "sqlalchemy.sql.selectable.NoInit", "sqlalchemy.sql.selectable.NamedFromClause", "sqlalchemy.sql.selectable.FromClause", "sqlalchemy.sql.roles.AnonymizedFromClauseRole", "sqlalchemy.sql.roles.StrictFromClauseRole", "sqlalchemy.sql.roles.FromClauseRole", "sqlalchemy.sql.roles.ColumnsClauseRole", "sqlalchemy.sql.roles.JoinTargetRole", "sqlalchemy.sql.roles.AllowsLambdaRole", "sqlalchemy.sql.roles.UsesInspection", "sqlalchemy.sql.roles.ColumnListRole", "sqlalchemy.sql.roles.StructuralRole", "sqlalchemy.sql.selectable.Selectable", "sqlalchemy.sql.selectable.ReturnsRows", "sqlalchemy.sql.roles.ReturnsRowsRole", "sqlalchemy.sql.roles.SQLRole", "sqlalchemy.sql.elements.DQLDMLClauseElement", "sqlalchemy.sql.elements.ClauseElement", "sqlalchemy.sql.annotation.SupportsWrappingAnnotations", "sqlalchemy.sql.annotation.SupportsAnnotations", "sqlalchemy.sql.cache_key.MemoizedHasCacheKey", "sqlalchemy.sql.cache_key.HasCacheKey", "sqlalchemy.util.langhelpers.HasMemoized", "sqlalchemy.sql.traversals.HasCopyInternals", "sqlalchemy.sql.visitors.ExternallyTraversible", "sqlalchemy.sql.visitors.HasTraverseInternals", "sqlalchemy.sql.elements.CompilerElement", "sqlalchemy.sql.visitors.Visitable", "builtins.object"], "names": {".class": "SymbolTable", "_construct": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "Decorator", "func": {".class": "FuncDef", "arg_kinds": [0, 0, 5, 4], "arg_names": ["cls", "selectable", "name", "kw"], "flags": ["is_class", "is_decorated"], "fullname": "sqlalchemy.sql.selectable.AliasedReturnsRows._construct", "name": "_construct", "type": {".class": "CallableType", "arg_kinds": [0, 0, 5, 4], "arg_names": ["cls", "selectable", "name", "kw"], "arg_types": [{".class": "TypeType", "item": "sqlalchemy.sql.selectable.AliasedReturnsRows"}, {".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 2}, {".class": "UnionType", "items": ["builtins.str", {".class": "NoneType"}]}, {".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 2}], "bound_args": [], "def_extras": {"first_arg": "cls"}, "fallback": "builtins.function", "implicit": false, "is_ellipsis_args": false, "name": "_construct of AliasedReturnsRows", "ret_type": {".class": "AnyType", "missing_import_name": "sqlalchemy.util.typing.Self", "source_any": null, "type_of_any": 3}, "variables": []}}, "is_overload": false, "var": {".class": "Var", "flags": ["is_initialized_in_class", "is_classmethod", "is_ready"], "fullname": null, "name": "_construct", "type": {".class": "CallableType", "arg_kinds": [0, 0, 5, 4], "arg_names": ["cls", "selectable", "name", "kw"], "arg_types": [{".class": "TypeType", "item": "sqlalchemy.sql.selectable.AliasedReturnsRows"}, {".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 2}, {".class": "UnionType", "items": ["builtins.str", {".class": "NoneType"}]}, {".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 2}], "bound_args": [], "def_extras": {"first_arg": "cls"}, "fallback": "builtins.function", "implicit": false, "is_ellipsis_args": false, "name": "_construct of AliasedReturnsRows", "ret_type": {".class": "AnyType", "missing_import_name": "sqlalchemy.util.typing.Self", "source_any": null, "type_of_any": 3}, "variables": []}}}}, "_copy_internals": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "FuncDef", "arg_kinds": [0, 1, 4], "arg_names": ["self", "clone", "kw"], "flags": [], "fullname": "sqlalchemy.sql.selectable.AliasedReturnsRows._copy_internals", "name": "_copy_internals", "type": {".class": "CallableType", "arg_kinds": [0, 1, 4], "arg_names": ["self", "clone", "kw"], "arg_types": ["sqlalchemy.sql.selectable.AliasedReturnsRows", "sqlalchemy.sql.visitors._CloneCallableType", {".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 2}], "bound_args": [], "def_extras": {"first_arg": "self"}, "fallback": "builtins.function", "implicit": false, "is_ellipsis_args": false, "name": "_copy_internals of AliasedReturnsRows", "ret_type": {".class": "NoneType"}, "variables": []}}}, "_from_objects": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "Decorator", "func": {".class": "FuncDef", "arg_kinds": [0], "arg_names": ["self"], "flags": ["is_property", "is_decorated"], "fullname": "sqlalchemy.sql.selectable.AliasedReturnsRows._from_objects", "name": "_from_objects", "type": {".class": "CallableType", "arg_kinds": [0], "arg_names": ["self"], "arg_types": ["sqlalchemy.sql.selectable.AliasedReturnsRows"], "bound_args": [], "def_extras": {"first_arg": "self"}, "fallback": "builtins.function", "implicit": false, "is_ellipsis_args": false, "name": "_from_objects of AliasedReturnsRows", "ret_type": {".class": "Instance", "args": ["sqlalchemy.sql.selectable.FromClause"], "type_ref": "builtins.list"}, "variables": []}}, "is_overload": false, "var": {".class": "Var", "flags": ["is_initialized_in_class", "is_property", "is_ready"], "fullname": null, "name": "_from_objects", "type": {".class": "CallableType", "arg_kinds": [0], "arg_names": ["self"], "arg_types": ["sqlalchemy.sql.selectable.AliasedReturnsRows"], "bound_args": [], "def_extras": {"first_arg": "self"}, "fallback": "builtins.function", "implicit": false, "is_ellipsis_args": false, "name": "_from_objects of AliasedReturnsRows", "ret_type": {".class": "Instance", "args": ["sqlalchemy.sql.selectable.FromClause"], "type_ref": "builtins.list"}, "variables": []}}}}, "_init": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "FuncDef", "arg_kinds": [0, 0, 5], "arg_names": ["self", "selectable", "name"], "flags": [], "fullname": "sqlalchemy.sql.selectable.AliasedReturnsRows._init", "name": "_init", "type": {".class": "CallableType", "arg_kinds": [0, 0, 5], "arg_names": ["self", "selectable", "name"], "arg_types": ["sqlalchemy.sql.selectable.AliasedReturnsRows", {".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 2}, {".class": "UnionType", "items": ["builtins.str", {".class": "NoneType"}]}], "bound_args": [], "def_extras": {"first_arg": "self"}, "fallback": "builtins.function", "implicit": false, "is_ellipsis_args": false, "name": "_init of AliasedReturnsRows", "ret_type": {".class": "NoneType"}, "variables": []}}}, "_is_from_container": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "Var", "flags": ["is_initialized_in_class"], "fullname": "sqlalchemy.sql.selectable.AliasedReturnsRows._is_from_container", "name": "_is_from_container", "type": "builtins.bool"}}, "_orig_name": {".class": "SymbolTableNode", "implicit": true, "kind": "Mdef", "node": {".class": "Var", "flags": [], "fullname": "sqlalchemy.sql.selectable.AliasedReturnsRows._orig_name", "name": "_orig_name", "type": {".class": "UnionType", "items": ["builtins.str", {".class": "NoneType"}]}}}, "_populate_column_collection": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "FuncDef", "arg_kinds": [0], "arg_names": ["self"], "flags": [], "fullname": "sqlalchemy.sql.selectable.AliasedReturnsRows._populate_column_collection", "name": "_populate_column_collection", "type": {".class": "CallableType", "arg_kinds": [0], "arg_names": ["self"], "arg_types": ["sqlalchemy.sql.selectable.AliasedReturnsRows"], "bound_args": [], "def_extras": {"first_arg": "self"}, "fallback": "builtins.function", "implicit": false, "is_ellipsis_args": false, "name": "_populate_column_collection of AliasedReturnsRows", "ret_type": {".class": "NoneType"}, "variables": []}}}, "_refresh_for_new_column": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "FuncDef", "arg_kinds": [0, 0], "arg_names": ["self", "column"], "flags": [], "fullname": "sqlalchemy.sql.selectable.AliasedReturnsRows._refresh_for_new_column", "name": "_refresh_for_new_column", "type": {".class": "CallableType", "arg_kinds": [0, 0], "arg_names": ["self", "column"], "arg_types": ["sqlalchemy.sql.selectable.AliasedReturnsRows", {".class": "Instance", "args": [{".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 2}], "type_ref": "sqlalchemy.sql.elements.ColumnElement"}], "bound_args": [], "def_extras": {"first_arg": "self"}, "fallback": "builtins.function", "implicit": false, "is_ellipsis_args": false, "name": "_refresh_for_new_column of AliasedReturnsRows", "ret_type": {".class": "NoneType"}, "variables": []}}}, "_supports_derived_columns": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "Var", "flags": ["is_initialized_in_class"], "fullname": "sqlalchemy.sql.selectable.AliasedReturnsRows._supports_derived_columns", "name": "_supports_derived_columns", "type": "builtins.bool"}}, "_traverse_internals": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "Var", "flags": ["is_initialized_in_class", "is_ready"], "fullname": "sqlalchemy.sql.selectable.AliasedReturnsRows._traverse_internals", "name": "_traverse_internals", "type": {".class": "TypeAliasType", "args": [], "type_ref": "sqlalchemy.sql.visitors._TraverseInternalsType"}}}, "description": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "Decorator", "func": {".class": "FuncDef", "arg_kinds": [0], "arg_names": ["self"], "flags": ["is_property", "is_decorated"], "fullname": "sqlalchemy.sql.selectable.AliasedReturnsRows.description", "name": "description", "type": {".class": "CallableType", "arg_kinds": [0], "arg_names": ["self"], "arg_types": ["sqlalchemy.sql.selectable.AliasedReturnsRows"], "bound_args": [], "def_extras": {"first_arg": "self"}, "fallback": "builtins.function", "implicit": false, "is_ellipsis_args": false, "name": "description of AliasedReturnsRows", "ret_type": "builtins.str", "variables": []}}, "is_overload": false, "var": {".class": "Var", "flags": ["is_initialized_in_class", "is_property", "is_ready"], "fullname": null, "name": "description", "type": {".class": "CallableType", "arg_kinds": [0], "arg_names": ["self"], "arg_types": ["sqlalchemy.sql.selectable.AliasedReturnsRows"], "bound_args": [], "def_extras": {"first_arg": "self"}, "fallback": "builtins.function", "implicit": false, "is_ellipsis_args": false, "name": "description of AliasedReturnsRows", "ret_type": "builtins.str", "variables": []}}}}, "element": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "Var", "flags": ["is_initialized_in_class", "is_ready"], "fullname": "sqlalchemy.sql.selectable.AliasedReturnsRows.element", "name": "element", "type": "sqlalchemy.sql.selectable.ReturnsRows"}}, "implicit_returning": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "Decorator", "func": {".class": "FuncDef", "arg_kinds": [0], "arg_names": ["self"], "flags": ["is_property", "is_decorated"], "fullname": "sqlalchemy.sql.selectable.AliasedReturnsRows.implicit_returning", "name": "implicit_returning", "type": {".class": "CallableType", "arg_kinds": [0], "arg_names": ["self"], "arg_types": ["sqlalchemy.sql.selectable.AliasedReturnsRows"], "bound_args": [], "def_extras": {"first_arg": "self"}, "fallback": "builtins.function", "implicit": false, "is_ellipsis_args": false, "name": "implicit_returning of AliasedReturnsRows", "ret_type": "builtins.bool", "variables": []}}, "is_overload": false, "var": {".class": "Var", "flags": ["is_initialized_in_class", "is_property", "is_ready"], "fullname": null, "name": "implicit_returning", "type": {".class": "CallableType", "arg_kinds": [0], "arg_names": ["self"], "arg_types": ["sqlalchemy.sql.selectable.AliasedReturnsRows"], "bound_args": [], "def_extras": {"first_arg": "self"}, "fallback": "builtins.function", "implicit": false, "is_ellipsis_args": false, "name": "implicit_returning of AliasedReturnsRows", "ret_type": "builtins.bool", "variables": []}}}}, "is_derived_from": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "FuncDef", "arg_kinds": [0, 0], "arg_names": ["self", "fromclause"], "flags": [], "fullname": "sqlalchemy.sql.selectable.AliasedReturnsRows.is_derived_from", "name": "is_derived_from", "type": {".class": "CallableType", "arg_kinds": [0, 0], "arg_names": ["self", "fromclause"], "arg_types": ["sqlalchemy.sql.selectable.AliasedReturnsRows", {".class": "UnionType", "items": ["sqlalchemy.sql.selectable.FromClause", {".class": "NoneType"}]}], "bound_args": [], "def_extras": {"first_arg": "self"}, "fallback": "builtins.function", "implicit": false, "is_ellipsis_args": false, "name": "is_derived_from of AliasedReturnsRows", "ret_type": "builtins.bool", "variables": []}}}, "original": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "Decorator", "func": {".class": "FuncDef", "arg_kinds": [0], "arg_names": ["self"], "flags": ["is_property", "is_decorated"], "fullname": "sqlalchemy.sql.selectable.AliasedReturnsRows.original", "name": "original", "type": {".class": "CallableType", "arg_kinds": [0], "arg_names": ["self"], "arg_types": ["sqlalchemy.sql.selectable.AliasedReturnsRows"], "bound_args": [], "def_extras": {"first_arg": "self"}, "fallback": "builtins.function", "implicit": false, "is_ellipsis_args": false, "name": "original of AliasedReturnsRows", "ret_type": "sqlalchemy.sql.selectable.ReturnsRows", "variables": []}}, "is_overload": false, "var": {".class": "Var", "flags": ["is_initialized_in_class", "is_property", "is_ready"], "fullname": null, "name": "original", "type": {".class": "CallableType", "arg_kinds": [0], "arg_names": ["self"], "arg_types": ["sqlalchemy.sql.selectable.AliasedReturnsRows"], "bound_args": [], "def_extras": {"first_arg": "self"}, "fallback": "builtins.function", "implicit": false, "is_ellipsis_args": false, "name": "original of AliasedReturnsRows", "ret_type": "sqlalchemy.sql.selectable.ReturnsRows", "variables": []}}}}}, "tuple_type": null, "type_vars": [], "typeddict_type": null}}, "Annotated": {".class": "SymbolTableNode", "cross_ref": "sqlalchemy.sql.annotation.Annotated", "kind": "Gdef"}, "AnnotatedFromClause": {".class": "SymbolTableNode", "kind": "Gdef", "node": {".class": "TypeInfo", "_promote": null, "abstract_attributes": [], "bases": ["sqlalchemy.sql.annotation.Annotated"], "declared_metaclass": null, "defn": {".class": "ClassDef", "fullname": "sqlalchemy.sql.selectable.AnnotatedFromClause", "name": "AnnotatedFromClause", "type_vars": []}, "flags": [], "fullname": "sqlalchemy.sql.selectable.AnnotatedFromClause", "metaclass_type": null, "metadata": {}, "module_name": "sqlalchemy.sql.selectable", "mro": ["sqlalchemy.sql.selectable.AnnotatedFromClause", "sqlalchemy.sql.annotation.Annotated", "sqlalchemy.sql.annotation.SupportsAnnotations", "sqlalchemy.sql.visitors.ExternallyTraversible", "sqlalchemy.sql.visitors.HasTraverseInternals", "sqlalchemy.sql.visitors.Visitable", "builtins.object"], "names": {".class": "SymbolTable", "_copy_internals": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "FuncDef", "arg_kinds": [0, 4], "arg_names": ["self", "kw"], "flags": [], "fullname": "sqlalchemy.sql.selectable.AnnotatedFromClause._copy_internals", "name": "_copy_internals", "type": {".class": "CallableType", "arg_kinds": [0, 4], "arg_names": ["self", "kw"], "arg_types": ["sqlalchemy.sql.selectable.AnnotatedFromClause", {".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 2}], "bound_args": [], "def_extras": {"first_arg": "self"}, "fallback": "builtins.function", "implicit": false, "is_ellipsis_args": false, "name": "_copy_internals of AnnotatedFromClause", "ret_type": {".class": "NoneType"}, "variables": []}}}, "c": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "Decorator", "func": {".class": "FuncDef", "arg_kinds": [0], "arg_names": ["self"], "flags": ["is_property", "is_decorated"], "fullname": "sqlalchemy.sql.selectable.AnnotatedFromClause.c", "name": "c", "type": {".class": "CallableType", "arg_kinds": [0], "arg_names": ["self"], "arg_types": ["sqlalchemy.sql.selectable.AnnotatedFromClause"], "bound_args": [], "def_extras": {"first_arg": "self"}, "fallback": "builtins.function", "implicit": false, "is_ellipsis_args": false, "name": "c of AnnotatedFromClause", "ret_type": {".class": "Instance", "args": ["builtins.str", {".class": "Instance", "args": [{".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 2}], "type_ref": "sqlalchemy.sql.elements.KeyedColumnElement"}], "type_ref": "sqlalchemy.sql.base.ReadOnlyColumnCollection"}, "variables": []}}, "is_overload": false, "var": {".class": "Var", "flags": ["is_initialized_in_class", "is_property", "is_ready"], "fullname": null, "name": "c", "type": {".class": "CallableType", "arg_kinds": [0], "arg_names": ["self"], "arg_types": ["sqlalchemy.sql.selectable.AnnotatedFromClause"], "bound_args": [], "def_extras": {"first_arg": "self"}, "fallback": "builtins.function", "implicit": false, "is_ellipsis_args": false, "name": "c of AnnotatedFromClause", "ret_type": {".class": "Instance", "args": ["builtins.str", {".class": "Instance", "args": [{".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 2}], "type_ref": "sqlalchemy.sql.elements.KeyedColumnElement"}], "type_ref": "sqlalchemy.sql.base.ReadOnlyColumnCollection"}, "variables": []}}}}}, "tuple_type": null, "type_vars": [], "typeddict_type": null}}, "Any": {".class": "SymbolTableNode", "cross_ref": "typing.Any", "kind": "Gdef"}, "BinaryExpression": {".class": "SymbolTableNode", "cross_ref": "sqlalchemy.sql.elements.BinaryExpression", "kind": "Gdef"}, "BindParameter": {".class": "SymbolTableNode", "cross_ref": "sqlalchemy.sql.elements.BindParameter", "kind": "Gdef"}, "BooleanClauseList": {".class": "SymbolTableNode", "cross_ref": "sqlalchemy.sql.elements.BooleanClauseList", "kind": "Gdef"}, "CTE": {".class": "SymbolTableNode", "kind": "Gdef", "node": {".class": "TypeInfo", "_promote": null, "abstract_attributes": [], "bases": ["sqlalchemy.sql.roles.DMLTableRole", "sqlalchemy.sql.roles.IsCTERole", "sqlalchemy.sql.base.Generative", "sqlalchemy.sql.selectable.HasPrefixes", "sqlalchemy.sql.selectable.HasSuffixes", "sqlalchemy.sql.selectable.AliasedReturnsRows"], "declared_metaclass": null, "defn": {".class": "ClassDef", "fullname": "sqlalchemy.sql.selectable.CTE", "name": "CTE", "type_vars": []}, "flags": [], "fullname": "sqlalchemy.sql.selectable.CTE", "metaclass_type": null, "metadata": {}, "module_name": "sqlalchemy.sql.selectable", "mro": ["sqlalchemy.sql.selectable.CTE", "sqlalchemy.sql.roles.DMLTableRole", "sqlalchemy.sql.roles.IsCTERole", "sqlalchemy.sql.base.Generative", "sqlalchemy.sql.selectable.HasPrefixes", "sqlalchemy.sql.selectable.HasSuffixes", "sqlalchemy.sql.selectable.AliasedReturnsRows", "sqlalchemy.sql.selectable.NoInit", "sqlalchemy.sql.selectable.NamedFromClause", "sqlalchemy.sql.selectable.FromClause", "sqlalchemy.sql.roles.AnonymizedFromClauseRole", "sqlalchemy.sql.roles.StrictFromClauseRole", "sqlalchemy.sql.roles.FromClauseRole", "sqlalchemy.sql.roles.ColumnsClauseRole", "sqlalchemy.sql.roles.JoinTargetRole", "sqlalchemy.sql.roles.AllowsLambdaRole", "sqlalchemy.sql.roles.UsesInspection", "sqlalchemy.sql.roles.ColumnListRole", "sqlalchemy.sql.roles.StructuralRole", "sqlalchemy.sql.selectable.Selectable", "sqlalchemy.sql.selectable.ReturnsRows", "sqlalchemy.sql.roles.ReturnsRowsRole", "sqlalchemy.sql.roles.SQLRole", "sqlalchemy.sql.elements.DQLDMLClauseElement", "sqlalchemy.sql.elements.ClauseElement", "sqlalchemy.sql.annotation.SupportsWrappingAnnotations", "sqlalchemy.sql.annotation.SupportsAnnotations", "sqlalchemy.sql.cache_key.MemoizedHasCacheKey", "sqlalchemy.sql.cache_key.HasCacheKey", "sqlalchemy.util.langhelpers.HasMemoized", "sqlalchemy.sql.traversals.HasCopyInternals", "sqlalchemy.sql.visitors.ExternallyTraversible", "sqlalchemy.sql.visitors.HasTraverseInternals", "sqlalchemy.sql.elements.CompilerElement", "sqlalchemy.sql.visitors.Visitable", "builtins.object"], "names": {".class": "SymbolTable", "__visit_name__": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "Var", "flags": ["is_initialized_in_class", "is_ready"], "fullname": "sqlalchemy.sql.selectable.CTE.__visit_name__", "name": "__visit_name__", "type": "builtins.str"}}, "_cte_alias": {".class": "SymbolTableNode", "implicit": true, "kind": "Mdef", "node": {".class": "Var", "flags": [], "fullname": "sqlalchemy.sql.selectable.CTE._cte_alias", "name": "_cte_alias", "type": {".class": "UnionType", "items": ["sqlalchemy.sql.selectable.CTE", {".class": "NoneType"}]}}}, "_factory": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "Decorator", "func": {".class": "FuncDef", "arg_kinds": [0, 0, 1, 1], "arg_names": ["cls", "selectable", "name", "recursive"], "flags": ["is_class", "is_decorated"], "fullname": "sqlalchemy.sql.selectable.CTE._factory", "name": "_factory", "type": {".class": "CallableType", "arg_kinds": [0, 0, 1, 1], "arg_names": ["cls", "selectable", "name", "recursive"], "arg_types": [{".class": "TypeType", "item": "sqlalchemy.sql.selectable.CTE"}, "sqlalchemy.sql.selectable.HasCTE", {".class": "UnionType", "items": ["builtins.str", {".class": "NoneType"}]}, "builtins.bool"], "bound_args": [], "def_extras": {"first_arg": "cls"}, "fallback": "builtins.function", "implicit": false, "is_ellipsis_args": false, "name": "_factory of CTE", "ret_type": "sqlalchemy.sql.selectable.CTE", "variables": []}}, "is_overload": false, "var": {".class": "Var", "flags": ["is_initialized_in_class", "is_classmethod", "is_ready"], "fullname": null, "name": "_factory", "type": {".class": "CallableType", "arg_kinds": [0, 0, 1, 1], "arg_names": ["cls", "selectable", "name", "recursive"], "arg_types": [{".class": "TypeType", "item": "sqlalchemy.sql.selectable.CTE"}, "sqlalchemy.sql.selectable.HasCTE", {".class": "UnionType", "items": ["builtins.str", {".class": "NoneType"}]}, "builtins.bool"], "bound_args": [], "def_extras": {"first_arg": "cls"}, "fallback": "builtins.function", "implicit": false, "is_ellipsis_args": false, "name": "_factory of CTE", "ret_type": "sqlalchemy.sql.selectable.CTE", "variables": []}}}}, "_get_reference_cte": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "FuncDef", "arg_kinds": [0], "arg_names": ["self"], "flags": [], "fullname": "sqlalchemy.sql.selectable.CTE._get_reference_cte", "name": "_get_reference_cte", "type": {".class": "CallableType", "arg_kinds": [0], "arg_names": ["self"], "arg_types": ["sqlalchemy.sql.selectable.CTE"], "bound_args": [], "def_extras": {"first_arg": "self"}, "fallback": "builtins.function", "implicit": false, "is_ellipsis_args": false, "name": "_get_reference_cte of CTE", "ret_type": "sqlalchemy.sql.selectable.CTE", "variables": []}}}, "_init": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "FuncDef", "arg_kinds": [0, 0, 5, 5, 5, 5, 5, 5, 5], "arg_names": ["self", "selectable", "name", "recursive", "nesting", "_cte_alias", "_restates", "_prefixes", "_suffixes"], "flags": [], "fullname": "sqlalchemy.sql.selectable.CTE._init", "name": "_init", "type": {".class": "CallableType", "arg_kinds": [0, 0, 5, 5, 5, 5, 5, 5, 5], "arg_names": ["self", "selectable", "name", "recursive", "nesting", "_cte_alias", "_restates", "_prefixes", "_suffixes"], "arg_types": ["sqlalchemy.sql.selectable.CTE", {".class": "Instance", "args": [{".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 2}], "type_ref": "sqlalchemy.sql.selectable.Select"}, {".class": "UnionType", "items": ["builtins.str", {".class": "NoneType"}]}, "builtins.bool", "builtins.bool", {".class": "UnionType", "items": ["sqlalchemy.sql.selectable.CTE", {".class": "NoneType"}]}, {".class": "UnionType", "items": ["sqlalchemy.sql.selectable.CTE", {".class": "NoneType"}]}, {".class": "UnionType", "items": [{".class": "TupleType", "implicit": false, "items": [], "partial_fallback": {".class": "Instance", "args": [{".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 6}], "type_ref": "builtins.tuple"}}, {".class": "NoneType"}]}, {".class": "UnionType", "items": [{".class": "TupleType", "implicit": false, "items": [], "partial_fallback": {".class": "Instance", "args": [{".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 6}], "type_ref": "builtins.tuple"}}, {".class": "NoneType"}]}], "bound_args": [], "def_extras": {"first_arg": "self"}, "fallback": "builtins.function", "implicit": false, "is_ellipsis_args": false, "name": "_init of CTE", "ret_type": {".class": "NoneType"}, "variables": []}}}, "_populate_column_collection": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "FuncDef", "arg_kinds": [0], "arg_names": ["self"], "flags": [], "fullname": "sqlalchemy.sql.selectable.CTE._populate_column_collection", "name": "_populate_column_collection", "type": {".class": "CallableType", "arg_kinds": [0], "arg_names": ["self"], "arg_types": ["sqlalchemy.sql.selectable.CTE"], "bound_args": [], "def_extras": {"first_arg": "self"}, "fallback": "builtins.function", "implicit": false, "is_ellipsis_args": false, "name": "_populate_column_collection of CTE", "ret_type": {".class": "NoneType"}, "variables": []}}}, "_restates": {".class": "SymbolTableNode", "implicit": true, "kind": "Mdef", "node": {".class": "Var", "flags": [], "fullname": "sqlalchemy.sql.selectable.CTE._restates", "name": "_restates", "type": {".class": "UnionType", "items": ["sqlalchemy.sql.selectable.CTE", {".class": "NoneType"}]}}}, "_traverse_internals": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "Var", "flags": ["is_initialized_in_class", "is_ready"], "fullname": "sqlalchemy.sql.selectable.CTE._traverse_internals", "name": "_traverse_internals", "type": {".class": "TypeAliasType", "args": [], "type_ref": "sqlalchemy.sql.visitors._TraverseInternalsType"}}}, "alias": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "FuncDef", "arg_kinds": [0, 1, 1], "arg_names": ["self", "name", "flat"], "flags": [], "fullname": "sqlalchemy.sql.selectable.CTE.alias", "name": "alias", "type": {".class": "CallableType", "arg_kinds": [0, 1, 1], "arg_names": ["self", "name", "flat"], "arg_types": ["sqlalchemy.sql.selectable.CTE", {".class": "UnionType", "items": ["builtins.str", {".class": "NoneType"}]}, "builtins.bool"], "bound_args": [], "def_extras": {"first_arg": "self"}, "fallback": "builtins.function", "implicit": false, "is_ellipsis_args": false, "name": "alias of CTE", "ret_type": "sqlalchemy.sql.selectable.CTE", "variables": []}}}, "element": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "Var", "flags": ["is_initialized_in_class", "is_ready"], "fullname": "sqlalchemy.sql.selectable.CTE.element", "name": "element", "type": "sqlalchemy.sql.selectable.HasCTE"}}, "nesting": {".class": "SymbolTableNode", "implicit": true, "kind": "Mdef", "node": {".class": "Var", "flags": [], "fullname": "sqlalchemy.sql.selectable.CTE.nesting", "name": "nesting", "type": "builtins.bool"}}, "recursive": {".class": "SymbolTableNode", "implicit": true, "kind": "Mdef", "node": {".class": "Var", "flags": [], "fullname": "sqlalchemy.sql.selectable.CTE.recursive", "name": "recursive", "type": "builtins.bool"}}, "union": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "FuncDef", "arg_kinds": [0, 2], "arg_names": ["self", "other"], "flags": [], "fullname": "sqlalchemy.sql.selectable.CTE.union", "name": "union", "type": {".class": "CallableType", "arg_kinds": [0, 2], "arg_names": ["self", "other"], "arg_types": ["sqlalchemy.sql.selectable.CTE", {".class": "TypeAliasType", "args": [], "type_ref": "sqlalchemy.sql._typing._SelectStatementForCompoundArgument"}], "bound_args": [], "def_extras": {"first_arg": "self"}, "fallback": "builtins.function", "implicit": false, "is_ellipsis_args": false, "name": "union of CTE", "ret_type": "sqlalchemy.sql.selectable.CTE", "variables": []}}}, "union_all": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "FuncDef", "arg_kinds": [0, 2], "arg_names": ["self", "other"], "flags": [], "fullname": "sqlalchemy.sql.selectable.CTE.union_all", "name": "union_all", "type": {".class": "CallableType", "arg_kinds": [0, 2], "arg_names": ["self", "other"], "arg_types": ["sqlalchemy.sql.selectable.CTE", {".class": "TypeAliasType", "args": [], "type_ref": "sqlalchemy.sql._typing._SelectStatementForCompoundArgument"}], "bound_args": [], "def_extras": {"first_arg": "self"}, "fallback": "builtins.function", "implicit": false, "is_ellipsis_args": false, "name": "union_all of CTE", "ret_type": "sqlalchemy.sql.selectable.CTE", "variables": []}}}}, "tuple_type": null, "type_vars": [], "typeddict_type": null}}, "CacheableOptions": {".class": "SymbolTableNode", "cross_ref": "sqlalchemy.sql.base.CacheableOptions", "kind": "Gdef"}, "Callable": {".class": "SymbolTableNode", "cross_ref": "typing.Callable", "kind": "Gdef"}, "ClauseElement": {".class": "SymbolTableNode", "cross_ref": "sqlalchemy.sql.elements.ClauseElement", "kind": "Gdef"}, "ClauseList": {".class": "SymbolTableNode", "cross_ref": "sqlalchemy.sql.elements.ClauseList", "kind": "Gdef"}, "ColumnClause": {".class": "SymbolTableNode", "cross_ref": "sqlalchemy.sql.elements.ColumnClause", "kind": "Gdef"}, "ColumnCollection": {".class": "SymbolTableNode", "cross_ref": "sqlalchemy.sql.base.ColumnCollection", "kind": "Gdef"}, "ColumnElement": {".class": "SymbolTableNode", "cross_ref": "sqlalchemy.sql.elements.ColumnElement", "kind": "Gdef"}, "ColumnSet": {".class": "SymbolTableNode", "cross_ref": "sqlalchemy.sql.base.ColumnSet", "kind": "Gdef"}, "CompileState": {".class": "SymbolTableNode", "cross_ref": "sqlalchemy.sql.base.CompileState", "kind": "Gdef"}, "CompoundSelect": {".class": "SymbolTableNode", "kind": "Gdef", "node": {".class": "TypeInfo", "_promote": null, "abstract_attributes": [], "bases": ["sqlalchemy.sql.base.HasCompileState", "sqlalchemy.sql.selectable.GenerativeSelect", "sqlalchemy.sql.selectable.ExecutableReturnsRows"], "declared_metaclass": null, "defn": {".class": "ClassDef", "fullname": "sqlalchemy.sql.selectable.CompoundSelect", "name": "CompoundSelect", "type_vars": []}, "flags": [], "fullname": "sqlalchemy.sql.selectable.CompoundSelect", "metaclass_type": null, "metadata": {}, "module_name": "sqlalchemy.sql.selectable", "mro": ["sqlalchemy.sql.selectable.CompoundSelect", "sqlalchemy.sql.base.HasCompileState", "sqlalchemy.sql.selectable.GenerativeSelect", "sqlalchemy.sql.selectable.SelectBase", "sqlalchemy.sql.roles.SelectStatementRole", "sqlalchemy.sql.selectable.ExecutableReturnsRows", "sqlalchemy.sql.base.Executable", "sqlalchemy.sql.roles.StatementRole", "sqlalchemy.sql.roles.DMLSelectRole", "sqlalchemy.sql.roles.CompoundElementRole", "sqlalchemy.sql.roles.AllowsLambdaRole", "sqlalchemy.sql.roles.InElementRole", "sqlalchemy.sql.selectable.HasCTE", "sqlalchemy.sql.roles.HasCTERole", "sqlalchemy.sql.selectable.SelectsRows", "sqlalchemy.sql.annotation.SupportsCloneAnnotations", "sqlalchemy.sql.selectable.Selectable", "sqlalchemy.sql.selectable.ReturnsRows", "sqlalchemy.sql.roles.ReturnsRowsRole", "sqlalchemy.sql.roles.SQLRole", "sqlalchemy.sql.elements.DQLDMLClauseElement", "sqlalchemy.sql.elements.ClauseElement", "sqlalchemy.sql.annotation.SupportsWrappingAnnotations", "sqlalchemy.sql.annotation.SupportsAnnotations", "sqlalchemy.sql.cache_key.MemoizedHasCacheKey", "sqlalchemy.sql.cache_key.HasCacheKey", "sqlalchemy.sql.base.Generative", "sqlalchemy.util.langhelpers.HasMemoized", "sqlalchemy.sql.traversals.HasCopyInternals", "sqlalchemy.sql.visitors.ExternallyTraversible", "sqlalchemy.sql.visitors.HasTraverseInternals", "sqlalchemy.sql.elements.CompilerElement", "sqlalchemy.sql.visitors.Visitable", "builtins.object"], "names": {".class": "SymbolTable", "__init__": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "FuncDef", "arg_kinds": [0, 0, 2], "arg_names": ["self", "keyword", "selects"], "flags": [], "fullname": "sqlalchemy.sql.selectable.CompoundSelect.__init__", "name": "__init__", "type": {".class": "CallableType", "arg_kinds": [0, 0, 2], "arg_names": ["self", "keyword", "selects"], "arg_types": ["sqlalchemy.sql.selectable.CompoundSelect", "sqlalchemy.sql.selectable._CompoundSelectKeyword", {".class": "TypeAliasType", "args": [], "type_ref": "sqlalchemy.sql._typing._SelectStatementForCompoundArgument"}], "bound_args": [], "def_extras": {"first_arg": "self"}, "fallback": "builtins.function", "implicit": false, "is_ellipsis_args": false, "name": "__init__ of CompoundSelect", "ret_type": {".class": "NoneType"}, "variables": []}}}, "__visit_name__": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "Var", "flags": ["is_initialized_in_class", "is_ready"], "fullname": "sqlalchemy.sql.selectable.CompoundSelect.__visit_name__", "name": "__visit_name__", "type": "builtins.str"}}, "_all_selected_columns": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "Decorator", "func": {".class": "FuncDef", "arg_kinds": [0], "arg_names": ["self"], "flags": ["is_property", "is_decorated"], "fullname": "sqlalchemy.sql.selectable.CompoundSelect._all_selected_columns", "name": "_all_selected_columns", "type": {".class": "CallableType", "arg_kinds": [0], "arg_names": ["self"], "arg_types": ["sqlalchemy.sql.selectable.CompoundSelect"], "bound_args": [], "def_extras": {"first_arg": "self"}, "fallback": "builtins.function", "implicit": false, "is_ellipsis_args": false, "name": "_all_selected_columns of CompoundSelect", "ret_type": {".class": "TypeAliasType", "args": [], "type_ref": "sqlalchemy.sql.selectable._SelectIterable"}, "variables": []}}, "is_overload": false, "var": {".class": "Var", "flags": ["is_initialized_in_class", "is_property", "is_ready"], "fullname": null, "name": "_all_selected_columns", "type": {".class": "CallableType", "arg_kinds": [0], "arg_names": ["self"], "arg_types": ["sqlalchemy.sql.selectable.CompoundSelect"], "bound_args": [], "def_extras": {"first_arg": "self"}, "fallback": "builtins.function", "implicit": false, "is_ellipsis_args": false, "name": "_all_selected_columns of CompoundSelect", "ret_type": {".class": "TypeAliasType", "args": [], "type_ref": "sqlalchemy.sql.selectable._SelectIterable"}, "variables": []}}}}, "_auto_correlate": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "Var", "flags": ["is_initialized_in_class"], "fullname": "sqlalchemy.sql.selectable.CompoundSelect._auto_correlate", "name": "_auto_correlate", "type": "builtins.bool"}}, "_create_except": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "Decorator", "func": {".class": "FuncDef", "arg_kinds": [0, 2], "arg_names": ["cls", "selects"], "flags": ["is_class", "is_decorated"], "fullname": "sqlalchemy.sql.selectable.CompoundSelect._create_except", "name": "_create_except", "type": {".class": "CallableType", "arg_kinds": [0, 2], "arg_names": ["cls", "selects"], "arg_types": [{".class": "TypeType", "item": "sqlalchemy.sql.selectable.CompoundSelect"}, {".class": "TypeAliasType", "args": [], "type_ref": "sqlalchemy.sql._typing._SelectStatementForCompoundArgument"}], "bound_args": [], "def_extras": {"first_arg": "cls"}, "fallback": "builtins.function", "implicit": false, "is_ellipsis_args": false, "name": "_create_except of CompoundSelect", "ret_type": "sqlalchemy.sql.selectable.CompoundSelect", "variables": []}}, "is_overload": false, "var": {".class": "Var", "flags": ["is_initialized_in_class", "is_classmethod", "is_ready"], "fullname": null, "name": "_create_except", "type": {".class": "CallableType", "arg_kinds": [0, 2], "arg_names": ["cls", "selects"], "arg_types": [{".class": "TypeType", "item": "sqlalchemy.sql.selectable.CompoundSelect"}, {".class": "TypeAliasType", "args": [], "type_ref": "sqlalchemy.sql._typing._SelectStatementForCompoundArgument"}], "bound_args": [], "def_extras": {"first_arg": "cls"}, "fallback": "builtins.function", "implicit": false, "is_ellipsis_args": false, "name": "_create_except of CompoundSelect", "ret_type": "sqlalchemy.sql.selectable.CompoundSelect", "variables": []}}}}, "_create_except_all": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "Decorator", "func": {".class": "FuncDef", "arg_kinds": [0, 2], "arg_names": ["cls", "selects"], "flags": ["is_class", "is_decorated"], "fullname": "sqlalchemy.sql.selectable.CompoundSelect._create_except_all", "name": "_create_except_all", "type": {".class": "CallableType", "arg_kinds": [0, 2], "arg_names": ["cls", "selects"], "arg_types": [{".class": "TypeType", "item": "sqlalchemy.sql.selectable.CompoundSelect"}, {".class": "TypeAliasType", "args": [], "type_ref": "sqlalchemy.sql._typing._SelectStatementForCompoundArgument"}], "bound_args": [], "def_extras": {"first_arg": "cls"}, "fallback": "builtins.function", "implicit": false, "is_ellipsis_args": false, "name": "_create_except_all of CompoundSelect", "ret_type": "sqlalchemy.sql.selectable.CompoundSelect", "variables": []}}, "is_overload": false, "var": {".class": "Var", "flags": ["is_initialized_in_class", "is_classmethod", "is_ready"], "fullname": null, "name": "_create_except_all", "type": {".class": "CallableType", "arg_kinds": [0, 2], "arg_names": ["cls", "selects"], "arg_types": [{".class": "TypeType", "item": "sqlalchemy.sql.selectable.CompoundSelect"}, {".class": "TypeAliasType", "args": [], "type_ref": "sqlalchemy.sql._typing._SelectStatementForCompoundArgument"}], "bound_args": [], "def_extras": {"first_arg": "cls"}, "fallback": "builtins.function", "implicit": false, "is_ellipsis_args": false, "name": "_create_except_all of CompoundSelect", "ret_type": "sqlalchemy.sql.selectable.CompoundSelect", "variables": []}}}}, "_create_intersect": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "Decorator", "func": {".class": "FuncDef", "arg_kinds": [0, 2], "arg_names": ["cls", "selects"], "flags": ["is_class", "is_decorated"], "fullname": "sqlalchemy.sql.selectable.CompoundSelect._create_intersect", "name": "_create_intersect", "type": {".class": "CallableType", "arg_kinds": [0, 2], "arg_names": ["cls", "selects"], "arg_types": [{".class": "TypeType", "item": "sqlalchemy.sql.selectable.CompoundSelect"}, {".class": "TypeAliasType", "args": [], "type_ref": "sqlalchemy.sql._typing._SelectStatementForCompoundArgument"}], "bound_args": [], "def_extras": {"first_arg": "cls"}, "fallback": "builtins.function", "implicit": false, "is_ellipsis_args": false, "name": "_create_intersect of CompoundSelect", "ret_type": "sqlalchemy.sql.selectable.CompoundSelect", "variables": []}}, "is_overload": false, "var": {".class": "Var", "flags": ["is_initialized_in_class", "is_classmethod", "is_ready"], "fullname": null, "name": "_create_intersect", "type": {".class": "CallableType", "arg_kinds": [0, 2], "arg_names": ["cls", "selects"], "arg_types": [{".class": "TypeType", "item": "sqlalchemy.sql.selectable.CompoundSelect"}, {".class": "TypeAliasType", "args": [], "type_ref": "sqlalchemy.sql._typing._SelectStatementForCompoundArgument"}], "bound_args": [], "def_extras": {"first_arg": "cls"}, "fallback": "builtins.function", "implicit": false, "is_ellipsis_args": false, "name": "_create_intersect of CompoundSelect", "ret_type": "sqlalchemy.sql.selectable.CompoundSelect", "variables": []}}}}, "_create_intersect_all": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "Decorator", "func": {".class": "FuncDef", "arg_kinds": [0, 2], "arg_names": ["cls", "selects"], "flags": ["is_class", "is_decorated"], "fullname": "sqlalchemy.sql.selectable.CompoundSelect._create_intersect_all", "name": "_create_intersect_all", "type": {".class": "CallableType", "arg_kinds": [0, 2], "arg_names": ["cls", "selects"], "arg_types": [{".class": "TypeType", "item": "sqlalchemy.sql.selectable.CompoundSelect"}, {".class": "TypeAliasType", "args": [], "type_ref": "sqlalchemy.sql._typing._SelectStatementForCompoundArgument"}], "bound_args": [], "def_extras": {"first_arg": "cls"}, "fallback": "builtins.function", "implicit": false, "is_ellipsis_args": false, "name": "_create_intersect_all of CompoundSelect", "ret_type": "sqlalchemy.sql.selectable.CompoundSelect", "variables": []}}, "is_overload": false, "var": {".class": "Var", "flags": ["is_initialized_in_class", "is_classmethod", "is_ready"], "fullname": null, "name": "_create_intersect_all", "type": {".class": "CallableType", "arg_kinds": [0, 2], "arg_names": ["cls", "selects"], "arg_types": [{".class": "TypeType", "item": "sqlalchemy.sql.selectable.CompoundSelect"}, {".class": "TypeAliasType", "args": [], "type_ref": "sqlalchemy.sql._typing._SelectStatementForCompoundArgument"}], "bound_args": [], "def_extras": {"first_arg": "cls"}, "fallback": "builtins.function", "implicit": false, "is_ellipsis_args": false, "name": "_create_intersect_all of CompoundSelect", "ret_type": "sqlalchemy.sql.selectable.CompoundSelect", "variables": []}}}}, "_create_union": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "Decorator", "func": {".class": "FuncDef", "arg_kinds": [0, 2], "arg_names": ["cls", "selects"], "flags": ["is_class", "is_decorated"], "fullname": "sqlalchemy.sql.selectable.CompoundSelect._create_union", "name": "_create_union", "type": {".class": "CallableType", "arg_kinds": [0, 2], "arg_names": ["cls", "selects"], "arg_types": [{".class": "TypeType", "item": "sqlalchemy.sql.selectable.CompoundSelect"}, {".class": "TypeAliasType", "args": [], "type_ref": "sqlalchemy.sql._typing._SelectStatementForCompoundArgument"}], "bound_args": [], "def_extras": {"first_arg": "cls"}, "fallback": "builtins.function", "implicit": false, "is_ellipsis_args": false, "name": "_create_union of CompoundSelect", "ret_type": "sqlalchemy.sql.selectable.CompoundSelect", "variables": []}}, "is_overload": false, "var": {".class": "Var", "flags": ["is_initialized_in_class", "is_classmethod", "is_ready"], "fullname": null, "name": "_create_union", "type": {".class": "CallableType", "arg_kinds": [0, 2], "arg_names": ["cls", "selects"], "arg_types": [{".class": "TypeType", "item": "sqlalchemy.sql.selectable.CompoundSelect"}, {".class": "TypeAliasType", "args": [], "type_ref": "sqlalchemy.sql._typing._SelectStatementForCompoundArgument"}], "bound_args": [], "def_extras": {"first_arg": "cls"}, "fallback": "builtins.function", "implicit": false, "is_ellipsis_args": false, "name": "_create_union of CompoundSelect", "ret_type": "sqlalchemy.sql.selectable.CompoundSelect", "variables": []}}}}, "_create_union_all": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "Decorator", "func": {".class": "FuncDef", "arg_kinds": [0, 2], "arg_names": ["cls", "selects"], "flags": ["is_class", "is_decorated"], "fullname": "sqlalchemy.sql.selectable.CompoundSelect._create_union_all", "name": "_create_union_all", "type": {".class": "CallableType", "arg_kinds": [0, 2], "arg_names": ["cls", "selects"], "arg_types": [{".class": "TypeType", "item": "sqlalchemy.sql.selectable.CompoundSelect"}, {".class": "TypeAliasType", "args": [], "type_ref": "sqlalchemy.sql._typing._SelectStatementForCompoundArgument"}], "bound_args": [], "def_extras": {"first_arg": "cls"}, "fallback": "builtins.function", "implicit": false, "is_ellipsis_args": false, "name": "_create_union_all of CompoundSelect", "ret_type": "sqlalchemy.sql.selectable.CompoundSelect", "variables": []}}, "is_overload": false, "var": {".class": "Var", "flags": ["is_initialized_in_class", "is_classmethod", "is_ready"], "fullname": null, "name": "_create_union_all", "type": {".class": "CallableType", "arg_kinds": [0, 2], "arg_names": ["cls", "selects"], "arg_types": [{".class": "TypeType", "item": "sqlalchemy.sql.selectable.CompoundSelect"}, {".class": "TypeAliasType", "args": [], "type_ref": "sqlalchemy.sql._typing._SelectStatementForCompoundArgument"}], "bound_args": [], "def_extras": {"first_arg": "cls"}, "fallback": "builtins.function", "implicit": false, "is_ellipsis_args": false, "name": "_create_union_all of CompoundSelect", "ret_type": "sqlalchemy.sql.selectable.CompoundSelect", "variables": []}}}}, "_ensure_disambiguated_names": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "FuncDef", "arg_kinds": [0], "arg_names": ["self"], "flags": [], "fullname": "sqlalchemy.sql.selectable.CompoundSelect._ensure_disambiguated_names", "name": "_ensure_disambiguated_names", "type": {".class": "CallableType", "arg_kinds": [0], "arg_names": ["self"], "arg_types": ["sqlalchemy.sql.selectable.CompoundSelect"], "bound_args": [], "def_extras": {"first_arg": "self"}, "fallback": "builtins.function", "implicit": false, "is_ellipsis_args": false, "name": "_ensure_disambiguated_names of CompoundSelect", "ret_type": "sqlalchemy.sql.selectable.CompoundSelect", "variables": []}}}, "_generate_fromclause_column_proxies": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "FuncDef", "arg_kinds": [0, 0, 5], "arg_names": ["self", "subquery", "proxy_compound_columns"], "flags": [], "fullname": "sqlalchemy.sql.selectable.CompoundSelect._generate_fromclause_column_proxies", "name": "_generate_fromclause_column_proxies", "type": {".class": "CallableType", "arg_kinds": [0, 0, 5], "arg_names": ["self", "subquery", "proxy_compound_columns"], "arg_types": ["sqlalchemy.sql.selectable.CompoundSelect", "sqlalchemy.sql.selectable.FromClause", {".class": "UnionType", "items": [{".class": "Instance", "args": [{".class": "Instance", "args": [{".class": "Instance", "args": [{".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 2}], "type_ref": "sqlalchemy.sql.elements.ColumnElement"}], "type_ref": "typing.Sequence"}], "type_ref": "typing.Iterable"}, {".class": "NoneType"}]}], "bound_args": [], "def_extras": {"first_arg": "self"}, "fallback": "builtins.function", "implicit": false, "is_ellipsis_args": false, "name": "_generate_fromclause_column_proxies of CompoundSelect", "ret_type": {".class": "NoneType"}, "variables": []}}}, "_is_from_container": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "Var", "flags": ["is_initialized_in_class"], "fullname": "sqlalchemy.sql.selectable.CompoundSelect._is_from_container", "name": "_is_from_container", "type": "builtins.bool"}}, "_refresh_for_new_column": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "FuncDef", "arg_kinds": [0, 0], "arg_names": ["self", "column"], "flags": [], "fullname": "sqlalchemy.sql.selectable.CompoundSelect._refresh_for_new_column", "name": "_refresh_for_new_column", "type": {".class": "CallableType", "arg_kinds": [0, 0], "arg_names": ["self", "column"], "arg_types": ["sqlalchemy.sql.selectable.CompoundSelect", {".class": "Instance", "args": [{".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 2}], "type_ref": "sqlalchemy.sql.elements.ColumnElement"}], "bound_args": [], "def_extras": {"first_arg": "self"}, "fallback": "builtins.function", "implicit": false, "is_ellipsis_args": false, "name": "_refresh_for_new_column of CompoundSelect", "ret_type": {".class": "NoneType"}, "variables": []}}}, "_scalar_type": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "FuncDef", "arg_kinds": [0], "arg_names": ["self"], "flags": [], "fullname": "sqlalchemy.sql.selectable.CompoundSelect._scalar_type", "name": "_scalar_type", "type": {".class": "CallableType", "arg_kinds": [0], "arg_names": ["self"], "arg_types": ["sqlalchemy.sql.selectable.CompoundSelect"], "bound_args": [], "def_extras": {"first_arg": "self"}, "fallback": "builtins.function", "implicit": false, "is_ellipsis_args": false, "name": "_scalar_type of CompoundSelect", "ret_type": {".class": "Instance", "args": [{".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 2}], "type_ref": "sqlalchemy.sql.type_api.TypeEngine"}, "variables": []}}}, "_traverse_internals": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "Var", "flags": ["is_initialized_in_class", "is_ready"], "fullname": "sqlalchemy.sql.selectable.CompoundSelect._traverse_internals", "name": "_traverse_internals", "type": {".class": "TypeAliasType", "args": [], "type_ref": "sqlalchemy.sql.visitors._TraverseInternalsType"}}}, "is_derived_from": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "FuncDef", "arg_kinds": [0, 0], "arg_names": ["self", "fromclause"], "flags": [], "fullname": "sqlalchemy.sql.selectable.CompoundSelect.is_derived_from", "name": "is_derived_from", "type": {".class": "CallableType", "arg_kinds": [0, 0], "arg_names": ["self", "fromclause"], "arg_types": ["sqlalchemy.sql.selectable.CompoundSelect", {".class": "UnionType", "items": ["sqlalchemy.sql.selectable.FromClause", {".class": "NoneType"}]}], "bound_args": [], "def_extras": {"first_arg": "self"}, "fallback": "builtins.function", "implicit": false, "is_ellipsis_args": false, "name": "is_derived_from of CompoundSelect", "ret_type": "builtins.bool", "variables": []}}}, "keyword": {".class": "SymbolTableNode", "implicit": true, "kind": "Mdef", "node": {".class": "Var", "flags": [], "fullname": "sqlalchemy.sql.selectable.CompoundSelect.keyword", "name": "keyword", "type": "sqlalchemy.sql.selectable._CompoundSelectKeyword"}}, "selected_columns": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "Decorator", "func": {".class": "FuncDef", "arg_kinds": [0], "arg_names": ["self"], "flags": ["is_property", "is_decorated"], "fullname": "sqlalchemy.sql.selectable.CompoundSelect.selected_columns", "name": "selected_columns", "type": {".class": "CallableType", "arg_kinds": [0], "arg_names": ["self"], "arg_types": ["sqlalchemy.sql.selectable.CompoundSelect"], "bound_args": [], "def_extras": {"first_arg": "self"}, "fallback": "builtins.function", "implicit": false, "is_ellipsis_args": false, "name": "selected_columns of CompoundSelect", "ret_type": {".class": "Instance", "args": ["builtins.str", {".class": "Instance", "args": [{".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 2}], "type_ref": "sqlalchemy.sql.elements.ColumnElement"}], "type_ref": "sqlalchemy.sql.base.ColumnCollection"}, "variables": []}}, "is_overload": false, "var": {".class": "Var", "flags": ["is_initialized_in_class", "is_property", "is_ready"], "fullname": null, "name": "selected_columns", "type": {".class": "CallableType", "arg_kinds": [0], "arg_names": ["self"], "arg_types": ["sqlalchemy.sql.selectable.CompoundSelect"], "bound_args": [], "def_extras": {"first_arg": "self"}, "fallback": "builtins.function", "implicit": false, "is_ellipsis_args": false, "name": "selected_columns of CompoundSelect", "ret_type": {".class": "Instance", "args": ["builtins.str", {".class": "Instance", "args": [{".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 2}], "type_ref": "sqlalchemy.sql.elements.ColumnElement"}], "type_ref": "sqlalchemy.sql.base.ColumnCollection"}, "variables": []}}}}, "selects": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "Var", "flags": ["is_initialized_in_class", "is_ready"], "fullname": "sqlalchemy.sql.selectable.CompoundSelect.selects", "name": "selects", "type": {".class": "Instance", "args": ["sqlalchemy.sql.selectable.SelectBase"], "type_ref": "builtins.list"}}}, "self_group": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "FuncDef", "arg_kinds": [0, 1], "arg_names": ["self", "against"], "flags": [], "fullname": "sqlalchemy.sql.selectable.CompoundSelect.self_group", "name": "self_group", "type": {".class": "CallableType", "arg_kinds": [0, 1], "arg_names": ["self", "against"], "arg_types": ["sqlalchemy.sql.selectable.CompoundSelect", {".class": "UnionType", "items": ["sqlalchemy.sql.operators.OperatorType", {".class": "NoneType"}]}], "bound_args": [], "def_extras": {"first_arg": "self"}, "fallback": "builtins.function", "implicit": false, "is_ellipsis_args": false, "name": "self_group of CompoundSelect", "ret_type": "sqlalchemy.sql.elements.GroupedElement", "variables": []}}}, "set_label_style": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "FuncDef", "arg_kinds": [0, 0], "arg_names": ["self", "style"], "flags": [], "fullname": "sqlalchemy.sql.selectable.CompoundSelect.set_label_style", "name": "set_label_style", "type": {".class": "CallableType", "arg_kinds": [0, 0], "arg_names": ["self", "style"], "arg_types": ["sqlalchemy.sql.selectable.CompoundSelect", "sqlalchemy.sql.selectable.SelectLabelStyle"], "bound_args": [], "def_extras": {"first_arg": "self"}, "fallback": "builtins.function", "implicit": false, "is_ellipsis_args": false, "name": "set_label_style of CompoundSelect", "ret_type": "sqlalchemy.sql.selectable.CompoundSelect", "variables": []}}}}, "tuple_type": null, "type_vars": [], "typeddict_type": null}}, "CompoundSelectState": {".class": "SymbolTableNode", "kind": "Gdef", "node": {".class": "TypeInfo", "_promote": null, "abstract_attributes": [], "bases": ["sqlalchemy.sql.base.CompileState"], "declared_metaclass": null, "defn": {".class": "ClassDef", "fullname": "sqlalchemy.sql.selectable.CompoundSelectState", "name": "CompoundSelectState", "type_vars": []}, "flags": [], "fullname": "sqlalchemy.sql.selectable.CompoundSelectState", "metaclass_type": null, "metadata": {}, "module_name": "sqlalchemy.sql.selectable", "mro": ["sqlalchemy.sql.selectable.CompoundSelectState", "sqlalchemy.sql.base.CompileState", "builtins.object"], "names": {".class": "SymbolTable", "_label_resolve_dict": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "Decorator", "func": {".class": "FuncDef", "arg_kinds": [0], "arg_names": ["self"], "flags": ["is_decorated"], "fullname": "sqlalchemy.sql.selectable.CompoundSelectState._label_resolve_dict", "name": "_label_resolve_dict", "type": {".class": "CallableType", "arg_kinds": [0], "arg_names": ["self"], "arg_types": ["sqlalchemy.sql.selectable.CompoundSelectState"], "bound_args": [], "def_extras": {"first_arg": "self"}, "fallback": "builtins.function", "implicit": false, "is_ellipsis_args": false, "name": "_label_resolve_dict of CompoundSelectState", "ret_type": {".class": "TupleType", "implicit": false, "items": [{".class": "Instance", "args": ["builtins.str", {".class": "Instance", "args": [{".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 2}], "type_ref": "sqlalchemy.sql.elements.ColumnElement"}], "type_ref": "builtins.dict"}, {".class": "Instance", "args": ["builtins.str", {".class": "Instance", "args": [{".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 2}], "type_ref": "sqlalchemy.sql.elements.ColumnElement"}], "type_ref": "builtins.dict"}, {".class": "Instance", "args": ["builtins.str", {".class": "Instance", "args": [{".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 2}], "type_ref": "sqlalchemy.sql.elements.ColumnElement"}], "type_ref": "builtins.dict"}], "partial_fallback": {".class": "Instance", "args": [{".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 6}], "type_ref": "builtins.tuple"}}, "variables": []}}, "is_overload": false, "var": {".class": "Var", "flags": ["is_initialized_in_class", "is_ready"], "fullname": null, "name": "_label_resolve_dict", "type": {".class": "Instance", "args": [{".class": "TupleType", "implicit": false, "items": [{".class": "Instance", "args": ["builtins.str", {".class": "Instance", "args": [{".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 2}], "type_ref": "sqlalchemy.sql.elements.ColumnElement"}], "type_ref": "builtins.dict"}, {".class": "Instance", "args": ["builtins.str", {".class": "Instance", "args": [{".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 2}], "type_ref": "sqlalchemy.sql.elements.ColumnElement"}], "type_ref": "builtins.dict"}, {".class": "Instance", "args": ["builtins.str", {".class": "Instance", "args": [{".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 2}], "type_ref": "sqlalchemy.sql.elements.ColumnElement"}], "type_ref": "builtins.dict"}], "partial_fallback": {".class": "Instance", "args": [{".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 6}], "type_ref": "builtins.tuple"}}], "type_ref": "sqlalchemy.util.langhelpers.generic_fn_descriptor"}}}}}, "tuple_type": null, "type_vars": [], "typeddict_type": null}}, "DQLDMLClauseElement": {".class": "SymbolTableNode", "cross_ref": "sqlalchemy.sql.elements.DQLDMLClauseElement", "kind": "Gdef"}, "DedupeColumnCollection": {".class": "SymbolTableNode", "cross_ref": "sqlalchemy.sql.base.DedupeColumnCollection", "kind": "Gdef"}, "Delete": {".class": "SymbolTableNode", "cross_ref": "sqlalchemy.sql.dml.Delete", "kind": "Gdef"}, "Dict": {".class": "SymbolTableNode", "cross_ref": "typing.Dict", "kind": "Gdef"}, "Enum": {".class": "SymbolTableNode", "cross_ref": "enum.Enum", "kind": "Gdef"}, "Executable": {".class": "SymbolTableNode", "cross_ref": "sqlalchemy.sql.base.Executable", "kind": "Gdef"}, "ExecutableOption": {".class": "SymbolTableNode", "cross_ref": "sqlalchemy.sql.base.ExecutableOption", "kind": "Gdef"}, "ExecutableReturnsRows": {".class": "SymbolTableNode", "kind": "Gdef", "node": {".class": "TypeInfo", "_promote": null, "abstract_attributes": [], "bases": ["sqlalchemy.sql.base.Executable", "sqlalchemy.sql.selectable.ReturnsRows"], "declared_metaclass": null, "defn": {".class": "ClassDef", "fullname": "sqlalchemy.sql.selectable.ExecutableReturnsRows", "name": "ExecutableReturnsRows", "type_vars": []}, "flags": [], "fullname": "sqlalchemy.sql.selectable.ExecutableReturnsRows", "metaclass_type": null, "metadata": {}, "module_name": "sqlalchemy.sql.selectable", "mro": ["sqlalchemy.sql.selectable.ExecutableReturnsRows", "sqlalchemy.sql.base.Executable", "sqlalchemy.sql.roles.StatementRole", "sqlalchemy.sql.selectable.ReturnsRows", "sqlalchemy.sql.roles.ReturnsRowsRole", "sqlalchemy.sql.roles.SQLRole", "sqlalchemy.sql.elements.DQLDMLClauseElement", "sqlalchemy.sql.elements.ClauseElement", "sqlalchemy.sql.annotation.SupportsWrappingAnnotations", "sqlalchemy.sql.annotation.SupportsAnnotations", "sqlalchemy.sql.cache_key.MemoizedHasCacheKey", "sqlalchemy.sql.cache_key.HasCacheKey", "sqlalchemy.util.langhelpers.HasMemoized", "sqlalchemy.sql.traversals.HasCopyInternals", "sqlalchemy.sql.visitors.ExternallyTraversible", "sqlalchemy.sql.visitors.HasTraverseInternals", "sqlalchemy.sql.elements.CompilerElement", "sqlalchemy.sql.visitors.Visitable", "builtins.object"], "names": {".class": "SymbolTable"}, "tuple_type": null, "type_vars": [], "typeddict_type": null}}, "Exists": {".class": "SymbolTableNode", "kind": "Gdef", "node": {".class": "TypeInfo", "_promote": null, "abstract_attributes": [], "bases": [{".class": "Instance", "args": ["builtins.bool"], "type_ref": "sqlalchemy.sql.elements.UnaryExpression"}], "declared_metaclass": null, "defn": {".class": "ClassDef", "fullname": "sqlalchemy.sql.selectable.Exists", "name": "Exists", "type_vars": []}, "flags": [], "fullname": "sqlalchemy.sql.selectable.Exists", "metaclass_type": null, "metadata": {}, "module_name": "sqlalchemy.sql.selectable", "mro": ["sqlalchemy.sql.selectable.Exists", "sqlalchemy.sql.elements.UnaryExpression", "sqlalchemy.sql.elements.ColumnElement", "sqlalchemy.sql.roles.ColumnArgumentOrKeyRole", "sqlalchemy.sql.roles.ColumnArgumentRole", "sqlalchemy.sql.roles.StatementOptionRole", "sqlalchemy.sql.roles.WhereHavingRole", "sqlalchemy.sql.roles.OnClauseRole", "sqlalchemy.sql.roles.BinaryElementRole", "sqlalchemy.sql.roles.OrderByRole", "sqlalchemy.sql.roles.ColumnsClauseRole", "sqlalchemy.sql.roles.AllowsLambdaRole", "sqlalchemy.sql.roles.ByOfRole", "sqlalchemy.sql.roles.UsesInspection", "sqlalchemy.sql.roles.ColumnListRole", "sqlalchemy.sql.roles.LimitOffsetRole", "sqlalchemy.sql.roles.DMLColumnRole", "sqlalchemy.sql.roles.DDLConstraintColumnRole", "sqlalchemy.sql.roles.DDLExpressionRole", "sqlalchemy.sql.roles.StructuralRole", "sqlalchemy.sql.elements.SQLColumnExpression", "sqlalchemy.sql.elements.SQLCoreOperations", "sqlalchemy.sql.operators.ColumnOperators", "sqlalchemy.sql.operators.Operators", "sqlalchemy.sql.roles.ExpressionElementRole", "sqlalchemy.util.langhelpers.TypingOnly", "sqlalchemy.sql.roles.TypedColumnsClauseRole", "sqlalchemy.sql.roles.SQLRole", "sqlalchemy.sql.elements.DQLDMLClauseElement", "sqlalchemy.sql.elements.ClauseElement", "sqlalchemy.sql.annotation.SupportsWrappingAnnotations", "sqlalchemy.sql.annotation.SupportsAnnotations", "sqlalchemy.sql.cache_key.MemoizedHasCacheKey", "sqlalchemy.sql.cache_key.HasCacheKey", "sqlalchemy.util.langhelpers.HasMemoized", "sqlalchemy.sql.traversals.HasCopyInternals", "sqlalchemy.sql.visitors.ExternallyTraversible", "sqlalchemy.sql.visitors.HasTraverseInternals", "sqlalchemy.sql.elements.CompilerElement", "sqlalchemy.sql.visitors.Visitable", "builtins.object"], "names": {".class": "SymbolTable", "__init__": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "FuncDef", "arg_kinds": [0, 1], "arg_names": ["self", "__argument"], "flags": [], "fullname": "sqlalchemy.sql.selectable.Exists.__init__", "name": "__init__", "type": {".class": "CallableType", "arg_kinds": [0, 1], "arg_names": ["self", null], "arg_types": ["sqlalchemy.sql.selectable.Exists", {".class": "UnionType", "items": [{".class": "Instance", "args": [{".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 2}], "type_ref": "sqlalchemy.sql.roles.TypedColumnsClauseRole"}, "sqlalchemy.sql.roles.ColumnsClauseRole", {".class": "Instance", "args": [{".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 2}], "type_ref": "sqlalchemy.sql.elements.SQLCoreOperations"}, {".class": "LiteralType", "fallback": "builtins.str", "value": "*"}, {".class": "LiteralType", "fallback": "builtins.int", "value": 1}, {".class": "TypeType", "item": {".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 2}}, {".class": "Instance", "args": ["sqlalchemy.sql._typing._HasClauseElement"], "type_ref": "sqlalchemy.inspection.Inspectable"}, "sqlalchemy.sql._typing._HasClauseElement", "sqlalchemy.sql.selectable.SelectBase", {".class": "Instance", "args": [{".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 2}], "type_ref": "sqlalchemy.sql.selectable.ScalarSelect"}, {".class": "NoneType"}]}], "bound_args": [], "def_extras": {"first_arg": "self"}, "fallback": "builtins.function", "implicit": false, "is_ellipsis_args": false, "name": "__init__ of Exists", "ret_type": {".class": "NoneType"}, "variables": []}}}, "_from_objects": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "Decorator", "func": {".class": "FuncDef", "arg_kinds": [0], "arg_names": ["self"], "flags": ["is_property", "is_decorated"], "fullname": "sqlalchemy.sql.selectable.Exists._from_objects", "name": "_from_objects", "type": {".class": "CallableType", "arg_kinds": [0], "arg_names": ["self"], "arg_types": ["sqlalchemy.sql.selectable.Exists"], "bound_args": [], "def_extras": {"first_arg": "self"}, "fallback": "builtins.function", "implicit": false, "is_ellipsis_args": false, "name": "_from_objects of Exists", "ret_type": {".class": "Instance", "args": ["sqlalchemy.sql.selectable.FromClause"], "type_ref": "builtins.list"}, "variables": []}}, "is_overload": false, "var": {".class": "Var", "flags": ["is_initialized_in_class", "is_property", "is_ready"], "fullname": null, "name": "_from_objects", "type": {".class": "CallableType", "arg_kinds": [0], "arg_names": ["self"], "arg_types": ["sqlalchemy.sql.selectable.Exists"], "bound_args": [], "def_extras": {"first_arg": "self"}, "fallback": "builtins.function", "implicit": false, "is_ellipsis_args": false, "name": "_from_objects of Exists", "ret_type": {".class": "Instance", "args": ["sqlalchemy.sql.selectable.FromClause"], "type_ref": "builtins.list"}, "variables": []}}}}, "_regroup": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "FuncDef", "arg_kinds": [0, 0], "arg_names": ["self", "fn"], "flags": [], "fullname": "sqlalchemy.sql.selectable.Exists._regroup", "name": "_regroup", "type": {".class": "CallableType", "arg_kinds": [0, 0], "arg_names": ["self", "fn"], "arg_types": ["sqlalchemy.sql.selectable.Exists", {".class": "CallableType", "arg_kinds": [0], "arg_names": [null], "arg_types": [{".class": "Instance", "args": [{".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 2}], "type_ref": "sqlalchemy.sql.selectable.Select"}], "bound_args": [], "def_extras": {}, "fallback": "builtins.function", "implicit": false, "is_ellipsis_args": false, "name": null, "ret_type": {".class": "Instance", "args": [{".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 2}], "type_ref": "sqlalchemy.sql.selectable.Select"}, "variables": []}], "bound_args": [], "def_extras": {"first_arg": "self"}, "fallback": "builtins.function", "implicit": false, "is_ellipsis_args": false, "name": "_regroup of Exists", "ret_type": {".class": "Instance", "args": [{".class": "Instance", "args": [{".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 2}], "type_ref": "sqlalchemy.sql.selectable.Select"}], "type_ref": "sqlalchemy.sql.selectable.SelectStatementGrouping"}, "variables": []}}}, "correlate": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "FuncDef", "arg_kinds": [0, 2], "arg_names": ["self", "fromclauses"], "flags": [], "fullname": "sqlalchemy.sql.selectable.Exists.correlate", "name": "correlate", "type": {".class": "CallableType", "arg_kinds": [0, 2], "arg_names": ["self", "fromclauses"], "arg_types": ["sqlalchemy.sql.selectable.Exists", {".class": "UnionType", "items": [{".class": "NoneType"}, {".class": "LiteralType", "fallback": "builtins.bool", "value": false}, {".class": "TypeAliasType", "args": [], "type_ref": "sqlalchemy.sql._typing._FromClauseArgument"}]}], "bound_args": [], "def_extras": {"first_arg": "self"}, "fallback": "builtins.function", "implicit": false, "is_ellipsis_args": false, "name": "correlate of Exists", "ret_type": {".class": "AnyType", "missing_import_name": "sqlalchemy.util.typing.Self", "source_any": null, "type_of_any": 3}, "variables": []}}}, "correlate_except": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "FuncDef", "arg_kinds": [0, 2], "arg_names": ["self", "fromclauses"], "flags": [], "fullname": "sqlalchemy.sql.selectable.Exists.correlate_except", "name": "correlate_except", "type": {".class": "CallableType", "arg_kinds": [0, 2], "arg_names": ["self", "fromclauses"], "arg_types": ["sqlalchemy.sql.selectable.Exists", {".class": "UnionType", "items": [{".class": "NoneType"}, {".class": "LiteralType", "fallback": "builtins.bool", "value": false}, {".class": "TypeAliasType", "args": [], "type_ref": "sqlalchemy.sql._typing._FromClauseArgument"}]}], "bound_args": [], "def_extras": {"first_arg": "self"}, "fallback": "builtins.function", "implicit": false, "is_ellipsis_args": false, "name": "correlate_except of Exists", "ret_type": {".class": "AnyType", "missing_import_name": "sqlalchemy.util.typing.Self", "source_any": null, "type_of_any": 3}, "variables": []}}}, "element": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "Var", "flags": ["is_initialized_in_class", "is_ready"], "fullname": "sqlalchemy.sql.selectable.Exists.element", "name": "element", "type": {".class": "UnionType", "items": [{".class": "Instance", "args": [{".class": "Instance", "args": [{".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 2}], "type_ref": "sqlalchemy.sql.selectable.Select"}], "type_ref": "sqlalchemy.sql.selectable.SelectStatementGrouping"}, {".class": "Instance", "args": [{".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 2}], "type_ref": "sqlalchemy.sql.selectable.ScalarSelect"}]}}}, "inherit_cache": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "Var", "flags": ["is_initialized_in_class"], "fullname": "sqlalchemy.sql.selectable.Exists.inherit_cache", "name": "inherit_cache", "type": "builtins.bool"}}, "select": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "FuncDef", "arg_kinds": [0], "arg_names": ["self"], "flags": [], "fullname": "sqlalchemy.sql.selectable.Exists.select", "name": "select", "type": {".class": "CallableType", "arg_kinds": [0], "arg_names": ["self"], "arg_types": ["sqlalchemy.sql.selectable.Exists"], "bound_args": [], "def_extras": {"first_arg": "self"}, "fallback": "builtins.function", "implicit": false, "is_ellipsis_args": false, "name": "select of Exists", "ret_type": {".class": "Instance", "args": [{".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 2}], "type_ref": "sqlalchemy.sql.selectable.Select"}, "variables": []}}}, "select_from": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "FuncDef", "arg_kinds": [0, 2], "arg_names": ["self", "froms"], "flags": [], "fullname": "sqlalchemy.sql.selectable.Exists.select_from", "name": "select_from", "type": {".class": "CallableType", "arg_kinds": [0, 2], "arg_names": ["self", "froms"], "arg_types": ["sqlalchemy.sql.selectable.Exists", "sqlalchemy.sql.selectable.FromClause"], "bound_args": [], "def_extras": {"first_arg": "self"}, "fallback": "builtins.function", "implicit": false, "is_ellipsis_args": false, "name": "select_from of Exists", "ret_type": {".class": "AnyType", "missing_import_name": "sqlalchemy.util.typing.Self", "source_any": null, "type_of_any": 3}, "variables": []}}}, "where": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "FuncDef", "arg_kinds": [0, 2], "arg_names": ["self", "clause"], "flags": [], "fullname": "sqlalchemy.sql.selectable.Exists.where", "name": "where", "type": {".class": "CallableType", "arg_kinds": [0, 2], "arg_names": ["self", "clause"], "arg_types": ["sqlalchemy.sql.selectable.Exists", {".class": "TypeAliasType", "args": ["builtins.bool"], "type_ref": "sqlalchemy.sql._typing._ColumnExpressionArgument"}], "bound_args": [], "def_extras": {"first_arg": "self"}, "fallback": "builtins.function", "implicit": false, "is_ellipsis_args": false, "name": "where of Exists", "ret_type": {".class": "AnyType", "missing_import_name": "sqlalchemy.util.typing.Self", "source_any": null, "type_of_any": 3}, "variables": []}}}}, "tuple_type": null, "type_vars": [], "typeddict_type": null}}, "ForUpdateArg": {".class": "SymbolTableNode", "kind": "Gdef", "node": {".class": "TypeInfo", "_promote": null, "abstract_attributes": [], "bases": ["sqlalchemy.sql.elements.ClauseElement"], "declared_metaclass": null, "defn": {".class": "ClassDef", "fullname": "sqlalchemy.sql.selectable.ForUpdateArg", "name": "ForUpdateArg", "type_vars": []}, "flags": [], "fullname": "sqlalchemy.sql.selectable.ForUpdateArg", "metaclass_type": null, "metadata": {}, "module_name": "sqlalchemy.sql.selectable", "mro": ["sqlalchemy.sql.selectable.ForUpdateArg", "sqlalchemy.sql.elements.ClauseElement", "sqlalchemy.sql.annotation.SupportsWrappingAnnotations", "sqlalchemy.sql.annotation.SupportsAnnotations", "sqlalchemy.sql.cache_key.MemoizedHasCacheKey", "sqlalchemy.sql.cache_key.HasCacheKey", "sqlalchemy.util.langhelpers.HasMemoized", "sqlalchemy.sql.traversals.HasCopyInternals", "sqlalchemy.sql.visitors.ExternallyTraversible", "sqlalchemy.sql.visitors.HasTraverseInternals", "sqlalchemy.sql.elements.CompilerElement", "sqlalchemy.sql.visitors.Visitable", "builtins.object"], "names": {".class": "SymbolTable", "__eq__": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "FuncDef", "arg_kinds": [0, 0], "arg_names": ["self", "other"], "flags": [], "fullname": "sqlalchemy.sql.selectable.ForUpdateArg.__eq__", "name": "__eq__", "type": {".class": "CallableType", "arg_kinds": [0, 0], "arg_names": [null, null], "arg_types": ["sqlalchemy.sql.selectable.ForUpdateArg", {".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 2}], "bound_args": [], "def_extras": {"first_arg": "self"}, "fallback": "builtins.function", "implicit": false, "is_ellipsis_args": false, "name": "__eq__ of ForUpdateArg", "ret_type": "builtins.bool", "variables": []}}}, "__hash__": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "FuncDef", "arg_kinds": [0], "arg_names": ["self"], "flags": [], "fullname": "sqlalchemy.sql.selectable.ForUpdateArg.__hash__", "name": "__hash__", "type": {".class": "CallableType", "arg_kinds": [0], "arg_names": ["self"], "arg_types": ["sqlalchemy.sql.selectable.ForUpdateArg"], "bound_args": [], "def_extras": {"first_arg": "self"}, "fallback": "builtins.function", "implicit": false, "is_ellipsis_args": false, "name": "__hash__ of ForUpdateArg", "ret_type": "builtins.int", "variables": []}}}, "__init__": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "FuncDef", "arg_kinds": [0, 5, 5, 5, 5, 5], "arg_names": ["self", "nowait", "read", "of", "skip_locked", "key_share"], "flags": [], "fullname": "sqlalchemy.sql.selectable.ForUpdateArg.__init__", "name": "__init__", "type": {".class": "CallableType", "arg_kinds": [0, 5, 5, 5, 5, 5], "arg_names": ["self", "nowait", "read", "of", "skip_locked", "key_share"], "arg_types": ["sqlalchemy.sql.selectable.ForUpdateArg", "builtins.bool", "builtins.bool", {".class": "UnionType", "items": [{".class": "Instance", "args": [{".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 6}], "type_ref": "sqlalchemy.sql.elements.ColumnElement"}, "sqlalchemy.sql._typing._HasClauseElement", {".class": "Instance", "args": [{".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 6}], "type_ref": "sqlalchemy.sql.elements.SQLCoreOperations"}, {".class": "Instance", "args": [{".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 6}], "type_ref": "sqlalchemy.sql.roles.ExpressionElementRole"}, {".class": "CallableType", "arg_kinds": [], "arg_names": [], "arg_types": [], "bound_args": [], "def_extras": {}, "fallback": "builtins.function", "implicit": false, "is_ellipsis_args": false, "name": null, "ret_type": {".class": "Instance", "args": [{".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 6}], "type_ref": "sqlalchemy.sql.elements.ColumnElement"}, "variables": []}, "sqlalchemy.sql.lambdas.LambdaElement", "sqlalchemy.sql.roles.FromClauseRole", {".class": "TypeType", "item": {".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 6}}, {".class": "Instance", "args": ["sqlalchemy.sql._typing._HasClauseElement"], "type_ref": "sqlalchemy.inspection.Inspectable"}, "sqlalchemy.sql._typing._HasClauseElement", {".class": "Instance", "args": [{".class": "TypeAliasType", "args": [{".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 6}], "type_ref": "sqlalchemy.sql._typing._ColumnExpressionArgument"}], "type_ref": "typing.Sequence"}, {".class": "NoneType"}]}, "builtins.bool", "builtins.bool"], "bound_args": [], "def_extras": {"first_arg": "self"}, "fallback": "builtins.function", "implicit": false, "is_ellipsis_args": false, "name": "__init__ of ForUpdateArg", "ret_type": {".class": "NoneType"}, "variables": []}}}, "__ne__": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "FuncDef", "arg_kinds": [0, 0], "arg_names": ["self", "other"], "flags": [], "fullname": "sqlalchemy.sql.selectable.ForUpdateArg.__ne__", "name": "__ne__", "type": {".class": "CallableType", "arg_kinds": [0, 0], "arg_names": [null, null], "arg_types": ["sqlalchemy.sql.selectable.ForUpdateArg", {".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 2}], "bound_args": [], "def_extras": {"first_arg": "self"}, "fallback": "builtins.function", "implicit": false, "is_ellipsis_args": false, "name": "__ne__ of ForUpdateArg", "ret_type": "builtins.bool", "variables": []}}}, "_from_argument": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "Decorator", "func": {".class": "FuncDef", "arg_kinds": [0, 0], "arg_names": ["cls", "with_for_update"], "flags": ["is_class", "is_decorated"], "fullname": "sqlalchemy.sql.selectable.ForUpdateArg._from_argument", "name": "_from_argument", "type": {".class": "CallableType", "arg_kinds": [0, 0], "arg_names": ["cls", "with_for_update"], "arg_types": [{".class": "TypeType", "item": "sqlalchemy.sql.selectable.ForUpdateArg"}, {".class": "UnionType", "items": ["sqlalchemy.sql.selectable.ForUpdateArg", {".class": "NoneType"}, "builtins.bool", {".class": "Instance", "args": ["builtins.str", {".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 2}], "type_ref": "builtins.dict"}]}], "bound_args": [], "def_extras": {"first_arg": "cls"}, "fallback": "builtins.function", "implicit": false, "is_ellipsis_args": false, "name": "_from_argument of ForUpdateArg", "ret_type": {".class": "UnionType", "items": ["sqlalchemy.sql.selectable.ForUpdateArg", {".class": "NoneType"}]}, "variables": []}}, "is_overload": false, "var": {".class": "Var", "flags": ["is_initialized_in_class", "is_classmethod", "is_ready"], "fullname": null, "name": "_from_argument", "type": {".class": "CallableType", "arg_kinds": [0, 0], "arg_names": ["cls", "with_for_update"], "arg_types": [{".class": "TypeType", "item": "sqlalchemy.sql.selectable.ForUpdateArg"}, {".class": "UnionType", "items": ["sqlalchemy.sql.selectable.ForUpdateArg", {".class": "NoneType"}, "builtins.bool", {".class": "Instance", "args": ["builtins.str", {".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 2}], "type_ref": "builtins.dict"}]}], "bound_args": [], "def_extras": {"first_arg": "cls"}, "fallback": "builtins.function", "implicit": false, "is_ellipsis_args": false, "name": "_from_argument of ForUpdateArg", "ret_type": {".class": "UnionType", "items": ["sqlalchemy.sql.selectable.ForUpdateArg", {".class": "NoneType"}]}, "variables": []}}}}, "_traverse_internals": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "Var", "flags": ["is_initialized_in_class", "is_ready"], "fullname": "sqlalchemy.sql.selectable.ForUpdateArg._traverse_internals", "name": "_traverse_internals", "type": {".class": "TypeAliasType", "args": [], "type_ref": "sqlalchemy.sql.visitors._TraverseInternalsType"}}}, "key_share": {".class": "SymbolTableNode", "implicit": true, "kind": "Mdef", "node": {".class": "Var", "flags": [], "fullname": "sqlalchemy.sql.selectable.ForUpdateArg.key_share", "name": "key_share", "type": "builtins.bool"}}, "nowait": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "Var", "flags": ["is_initialized_in_class", "is_ready"], "fullname": "sqlalchemy.sql.selectable.ForUpdateArg.nowait", "name": "nowait", "type": "builtins.bool"}}, "of": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "Var", "flags": ["is_initialized_in_class", "is_ready"], "fullname": "sqlalchemy.sql.selectable.ForUpdateArg.of", "name": "of", "type": {".class": "UnionType", "items": [{".class": "Instance", "args": ["sqlalchemy.sql.elements.ClauseElement"], "type_ref": "typing.Sequence"}, {".class": "NoneType"}]}}}, "read": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "Var", "flags": ["is_initialized_in_class", "is_ready"], "fullname": "sqlalchemy.sql.selectable.ForUpdateArg.read", "name": "read", "type": "builtins.bool"}}, "skip_locked": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "Var", "flags": ["is_initialized_in_class", "is_ready"], "fullname": "sqlalchemy.sql.selectable.ForUpdateArg.skip_locked", "name": "skip_locked", "type": "builtins.bool"}}}, "tuple_type": null, "type_vars": [], "typeddict_type": null}}, "ForeignKey": {".class": "SymbolTableNode", "cross_ref": "sqlalchemy.sql.schema.ForeignKey", "kind": "Gdef"}, "ForeignKeyConstraint": {".class": "SymbolTableNode", "cross_ref": "sqlalchemy.sql.schema.ForeignKeyConstraint", "kind": "Gdef"}, "FromClause": {".class": "SymbolTableNode", "kind": "Gdef", "node": {".class": "TypeInfo", "_promote": null, "abstract_attributes": [], "bases": ["sqlalchemy.sql.roles.AnonymizedFromClauseRole", "sqlalchemy.sql.selectable.Selectable"], "declared_metaclass": null, "defn": {".class": "ClassDef", "fullname": "sqlalchemy.sql.selectable.FromClause", "name": "FromClause", "type_vars": []}, "flags": [], "fullname": "sqlalchemy.sql.selectable.FromClause", "metaclass_type": null, "metadata": {}, "module_name": "sqlalchemy.sql.selectable", "mro": ["sqlalchemy.sql.selectable.FromClause", "sqlalchemy.sql.roles.AnonymizedFromClauseRole", "sqlalchemy.sql.roles.StrictFromClauseRole", "sqlalchemy.sql.roles.FromClauseRole", "sqlalchemy.sql.roles.ColumnsClauseRole", "sqlalchemy.sql.roles.JoinTargetRole", "sqlalchemy.sql.roles.AllowsLambdaRole", "sqlalchemy.sql.roles.UsesInspection", "sqlalchemy.sql.roles.ColumnListRole", "sqlalchemy.sql.roles.StructuralRole", "sqlalchemy.sql.selectable.Selectable", "sqlalchemy.sql.selectable.ReturnsRows", "sqlalchemy.sql.roles.ReturnsRowsRole", "sqlalchemy.sql.roles.SQLRole", "sqlalchemy.sql.elements.DQLDMLClauseElement", "sqlalchemy.sql.elements.ClauseElement", "sqlalchemy.sql.annotation.SupportsWrappingAnnotations", "sqlalchemy.sql.annotation.SupportsAnnotations", "sqlalchemy.sql.cache_key.MemoizedHasCacheKey", "sqlalchemy.sql.cache_key.HasCacheKey", "sqlalchemy.util.langhelpers.HasMemoized", "sqlalchemy.sql.traversals.HasCopyInternals", "sqlalchemy.sql.visitors.ExternallyTraversible", "sqlalchemy.sql.visitors.HasTraverseInternals", "sqlalchemy.sql.elements.CompilerElement", "sqlalchemy.sql.visitors.Visitable", "builtins.object"], "names": {".class": "SymbolTable", "__visit_name__": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "Var", "flags": ["is_initialized_in_class", "is_ready"], "fullname": "sqlalchemy.sql.selectable.FromClause.__visit_name__", "name": "__visit_name__", "type": "builtins.str"}}, "_anonymous_fromclause": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "FuncDef", "arg_kinds": [0, 5, 5], "arg_names": ["self", "name", "flat"], "flags": [], "fullname": "sqlalchemy.sql.selectable.FromClause._anonymous_fromclause", "name": "_anonymous_fromclause", "type": {".class": "CallableType", "arg_kinds": [0, 5, 5], "arg_names": ["self", "name", "flat"], "arg_types": ["sqlalchemy.sql.selectable.FromClause", {".class": "UnionType", "items": ["builtins.str", {".class": "NoneType"}]}, "builtins.bool"], "bound_args": [], "def_extras": {"first_arg": "self"}, "fallback": "builtins.function", "implicit": false, "is_ellipsis_args": false, "name": "_anonymous_fromclause of FromClause", "ret_type": "sqlalchemy.sql.selectable.FromClause", "variables": []}}}, "_cols_populated": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "Decorator", "func": {".class": "FuncDef", "arg_kinds": [0], "arg_names": ["self"], "flags": ["is_property", "is_decorated"], "fullname": "sqlalchemy.sql.selectable.FromClause._cols_populated", "name": "_cols_populated", "type": {".class": "CallableType", "arg_kinds": [0], "arg_names": ["self"], "arg_types": ["sqlalchemy.sql.selectable.FromClause"], "bound_args": [], "def_extras": {"first_arg": "self"}, "fallback": "builtins.function", "implicit": false, "is_ellipsis_args": false, "name": "_cols_populated of FromClause", "ret_type": "builtins.bool", "variables": []}}, "is_overload": false, "var": {".class": "Var", "flags": ["is_initialized_in_class", "is_property", "is_ready"], "fullname": null, "name": "_cols_populated", "type": {".class": "CallableType", "arg_kinds": [0], "arg_names": ["self"], "arg_types": ["sqlalchemy.sql.selectable.FromClause"], "bound_args": [], "def_extras": {"first_arg": "self"}, "fallback": "builtins.function", "implicit": false, "is_ellipsis_args": false, "name": "_cols_populated of FromClause", "ret_type": "builtins.bool", "variables": []}}}}, "_columns": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "Var", "flags": ["is_initialized_in_class", "is_ready"], "fullname": "sqlalchemy.sql.selectable.FromClause._columns", "name": "_columns", "type": {".class": "Instance", "args": [{".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 2}, {".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 2}], "type_ref": "sqlalchemy.sql.base.ColumnCollection"}}}, "_generate_fromclause_column_proxies": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "FuncDef", "arg_kinds": [0, 0], "arg_names": ["self", "fromclause"], "flags": [], "fullname": "sqlalchemy.sql.selectable.FromClause._generate_fromclause_column_proxies", "name": "_generate_fromclause_column_proxies", "type": {".class": "CallableType", "arg_kinds": [0, 0], "arg_names": ["self", "fromclause"], "arg_types": ["sqlalchemy.sql.selectable.FromClause", "sqlalchemy.sql.selectable.FromClause"], "bound_args": [], "def_extras": {"first_arg": "self"}, "fallback": "builtins.function", "implicit": false, "is_ellipsis_args": false, "name": "_generate_fromclause_column_proxies of FromClause", "ret_type": {".class": "NoneType"}, "variables": []}}}, "_hide_froms": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "Decorator", "func": {".class": "FuncDef", "arg_kinds": [0], "arg_names": ["self"], "flags": ["is_property", "is_decorated"], "fullname": "sqlalchemy.sql.selectable.FromClause._hide_froms", "name": "_hide_froms", "type": {".class": "CallableType", "arg_kinds": [0], "arg_names": ["self"], "arg_types": ["sqlalchemy.sql.selectable.FromClause"], "bound_args": [], "def_extras": {"first_arg": "self"}, "fallback": "builtins.function", "implicit": false, "is_ellipsis_args": false, "name": "_hide_froms of FromClause", "ret_type": {".class": "Instance", "args": ["sqlalchemy.sql.selectable.FromClause"], "type_ref": "typing.Iterable"}, "variables": []}}, "is_overload": false, "var": {".class": "Var", "flags": ["is_initialized_in_class", "is_property", "is_ready"], "fullname": null, "name": "_hide_froms", "type": {".class": "CallableType", "arg_kinds": [0], "arg_names": ["self"], "arg_types": ["sqlalchemy.sql.selectable.FromClause"], "bound_args": [], "def_extras": {"first_arg": "self"}, "fallback": "builtins.function", "implicit": false, "is_ellipsis_args": false, "name": "_hide_froms of FromClause", "ret_type": {".class": "Instance", "args": ["sqlalchemy.sql.selectable.FromClause"], "type_ref": "typing.Iterable"}, "variables": []}}}}, "_init_collections": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "FuncDef", "arg_kinds": [0], "arg_names": ["self"], "flags": [], "fullname": "sqlalchemy.sql.selectable.FromClause._init_collections", "name": "_init_collections", "type": {".class": "CallableType", "arg_kinds": [0], "arg_names": ["self"], "arg_types": ["sqlalchemy.sql.selectable.FromClause"], "bound_args": [], "def_extras": {"first_arg": "self"}, "fallback": "builtins.function", "implicit": false, "is_ellipsis_args": false, "name": "_init_collections of FromClause", "ret_type": {".class": "NoneType"}, "variables": []}}}, "_is_clone_of": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "Var", "flags": ["is_initialized_in_class", "is_ready"], "fullname": "sqlalchemy.sql.selectable.FromClause._is_clone_of", "name": "_is_clone_of", "type": {".class": "UnionType", "items": ["sqlalchemy.sql.selectable.FromClause", {".class": "NoneType"}]}}}, "_is_from_clause": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "Var", "flags": ["is_initialized_in_class"], "fullname": "sqlalchemy.sql.selectable.FromClause._is_from_clause", "name": "_is_from_clause", "type": "builtins.bool"}}, "_is_join": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "Var", "flags": ["is_initialized_in_class"], "fullname": "sqlalchemy.sql.selectable.FromClause._is_join", "name": "_is_join", "type": "builtins.bool"}}, "_is_lexical_equivalent": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "FuncDef", "arg_kinds": [0, 0], "arg_names": ["self", "other"], "flags": [], "fullname": "sqlalchemy.sql.selectable.FromClause._is_lexical_equivalent", "name": "_is_lexical_equivalent", "type": {".class": "CallableType", "arg_kinds": [0, 0], "arg_names": ["self", "other"], "arg_types": ["sqlalchemy.sql.selectable.FromClause", "sqlalchemy.sql.selectable.FromClause"], "bound_args": [], "def_extras": {"first_arg": "self"}, "fallback": "builtins.function", "implicit": false, "is_ellipsis_args": false, "name": "_is_lexical_equivalent of FromClause", "ret_type": "builtins.bool", "variables": []}}}, "_populate_column_collection": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "FuncDef", "arg_kinds": [0], "arg_names": ["self"], "flags": [], "fullname": "sqlalchemy.sql.selectable.FromClause._populate_column_collection", "name": "_populate_column_collection", "type": {".class": "CallableType", "arg_kinds": [0], "arg_names": ["self"], "arg_types": ["sqlalchemy.sql.selectable.FromClause"], "bound_args": [], "def_extras": {"first_arg": "self"}, "fallback": "builtins.function", "implicit": false, "is_ellipsis_args": false, "name": "_populate_column_collection of FromClause", "ret_type": {".class": "NoneType"}, "variables": []}}}, "_refresh_for_new_column": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "FuncDef", "arg_kinds": [0, 0], "arg_names": ["self", "column"], "flags": [], "fullname": "sqlalchemy.sql.selectable.FromClause._refresh_for_new_column", "name": "_refresh_for_new_column", "type": {".class": "CallableType", "arg_kinds": [0, 0], "arg_names": ["self", "column"], "arg_types": ["sqlalchemy.sql.selectable.FromClause", {".class": "Instance", "args": [{".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 2}], "type_ref": "sqlalchemy.sql.elements.ColumnElement"}], "bound_args": [], "def_extras": {"first_arg": "self"}, "fallback": "builtins.function", "implicit": false, "is_ellipsis_args": false, "name": "_refresh_for_new_column of FromClause", "ret_type": {".class": "NoneType"}, "variables": []}}}, "_reset_column_collection": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "FuncDef", "arg_kinds": [0], "arg_names": ["self"], "flags": [], "fullname": "sqlalchemy.sql.selectable.FromClause._reset_column_collection", "name": "_reset_column_collection", "type": {".class": "CallableType", "arg_kinds": [0], "arg_names": ["self"], "arg_types": ["sqlalchemy.sql.selectable.FromClause"], "bound_args": [], "def_extras": {"first_arg": "self"}, "fallback": "builtins.function", "implicit": false, "is_ellipsis_args": false, "name": "_reset_column_collection of FromClause", "ret_type": {".class": "NoneType"}, "variables": []}}}, "_select_iterable": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "Decorator", "func": {".class": "FuncDef", "arg_kinds": [0], "arg_names": ["self"], "flags": ["is_property", "is_decorated"], "fullname": "sqlalchemy.sql.selectable.FromClause._select_iterable", "name": "_select_iterable", "type": {".class": "CallableType", "arg_kinds": [0], "arg_names": ["self"], "arg_types": ["sqlalchemy.sql.selectable.FromClause"], "bound_args": [], "def_extras": {"first_arg": "self"}, "fallback": "builtins.function", "implicit": false, "is_ellipsis_args": false, "name": "_select_iterable of FromClause", "ret_type": {".class": "TypeAliasType", "args": [], "type_ref": "sqlalchemy.sql.selectable._SelectIterable"}, "variables": []}}, "is_overload": false, "var": {".class": "Var", "flags": ["is_initialized_in_class", "is_property", "is_ready"], "fullname": null, "name": "_select_iterable", "type": {".class": "CallableType", "arg_kinds": [0], "arg_names": ["self"], "arg_types": ["sqlalchemy.sql.selectable.FromClause"], "bound_args": [], "def_extras": {"first_arg": "self"}, "fallback": "builtins.function", "implicit": false, "is_ellipsis_args": false, "name": "_select_iterable of FromClause", "ret_type": {".class": "TypeAliasType", "args": [], "type_ref": "sqlalchemy.sql.selectable._SelectIterable"}, "variables": []}}}}, "_use_schema_map": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "Var", "flags": ["is_initialized_in_class"], "fullname": "sqlalchemy.sql.selectable.FromClause._use_schema_map", "name": "_use_schema_map", "type": "builtins.bool"}}, "alias": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "FuncDef", "arg_kinds": [0, 1, 1], "arg_names": ["self", "name", "flat"], "flags": [], "fullname": "sqlalchemy.sql.selectable.FromClause.alias", "name": "alias", "type": {".class": "CallableType", "arg_kinds": [0, 1, 1], "arg_names": ["self", "name", "flat"], "arg_types": ["sqlalchemy.sql.selectable.FromClause", {".class": "UnionType", "items": ["builtins.str", {".class": "NoneType"}]}, "builtins.bool"], "bound_args": [], "def_extras": {"first_arg": "self"}, "fallback": "builtins.function", "implicit": false, "is_ellipsis_args": false, "name": "alias of FromClause", "ret_type": "sqlalchemy.sql.selectable.NamedFromClause", "variables": []}}}, "c": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "Decorator", "func": {".class": "FuncDef", "arg_kinds": [0], "arg_names": ["self"], "flags": ["is_property", "is_decorated"], "fullname": "sqlalchemy.sql.selectable.FromClause.c", "name": "c", "type": {".class": "CallableType", "arg_kinds": [0], "arg_names": ["self"], "arg_types": ["sqlalchemy.sql.selectable.FromClause"], "bound_args": [], "def_extras": {"first_arg": "self"}, "fallback": "builtins.function", "implicit": false, "is_ellipsis_args": false, "name": "c of FromClause", "ret_type": {".class": "Instance", "args": ["builtins.str", {".class": "Instance", "args": [{".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 2}], "type_ref": "sqlalchemy.sql.elements.KeyedColumnElement"}], "type_ref": "sqlalchemy.sql.base.ReadOnlyColumnCollection"}, "variables": []}}, "is_overload": false, "var": {".class": "Var", "flags": ["is_initialized_in_class", "is_property", "is_ready"], "fullname": null, "name": "c", "type": {".class": "CallableType", "arg_kinds": [0], "arg_names": ["self"], "arg_types": ["sqlalchemy.sql.selectable.FromClause"], "bound_args": [], "def_extras": {"first_arg": "self"}, "fallback": "builtins.function", "implicit": false, "is_ellipsis_args": false, "name": "c of FromClause", "ret_type": {".class": "Instance", "args": ["builtins.str", {".class": "Instance", "args": [{".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 2}], "type_ref": "sqlalchemy.sql.elements.KeyedColumnElement"}], "type_ref": "sqlalchemy.sql.base.ReadOnlyColumnCollection"}, "variables": []}}}}, "columns": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "Decorator", "func": {".class": "FuncDef", "arg_kinds": [0], "arg_names": ["self"], "flags": ["is_property", "is_decorated"], "fullname": "sqlalchemy.sql.selectable.FromClause.columns", "name": "columns", "type": {".class": "CallableType", "arg_kinds": [0], "arg_names": ["self"], "arg_types": ["sqlalchemy.sql.selectable.FromClause"], "bound_args": [], "def_extras": {"first_arg": "self"}, "fallback": "builtins.function", "implicit": false, "is_ellipsis_args": false, "name": "columns of FromClause", "ret_type": {".class": "Instance", "args": ["builtins.str", {".class": "Instance", "args": [{".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 2}], "type_ref": "sqlalchemy.sql.elements.KeyedColumnElement"}], "type_ref": "sqlalchemy.sql.base.ReadOnlyColumnCollection"}, "variables": []}}, "is_overload": false, "var": {".class": "Var", "flags": ["is_initialized_in_class", "is_property", "is_ready"], "fullname": null, "name": "columns", "type": {".class": "CallableType", "arg_kinds": [0], "arg_names": ["self"], "arg_types": ["sqlalchemy.sql.selectable.FromClause"], "bound_args": [], "def_extras": {"first_arg": "self"}, "fallback": "builtins.function", "implicit": false, "is_ellipsis_args": false, "name": "columns of FromClause", "ret_type": {".class": "Instance", "args": ["builtins.str", {".class": "Instance", "args": [{".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 2}], "type_ref": "sqlalchemy.sql.elements.KeyedColumnElement"}], "type_ref": "sqlalchemy.sql.base.ReadOnlyColumnCollection"}, "variables": []}}}}, "description": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "Decorator", "func": {".class": "FuncDef", "arg_kinds": [0], "arg_names": ["self"], "flags": ["is_property", "is_decorated"], "fullname": "sqlalchemy.sql.selectable.FromClause.description", "name": "description", "type": {".class": "CallableType", "arg_kinds": [0], "arg_names": ["self"], "arg_types": ["sqlalchemy.sql.selectable.FromClause"], "bound_args": [], "def_extras": {"first_arg": "self"}, "fallback": "builtins.function", "implicit": false, "is_ellipsis_args": false, "name": "description of FromClause", "ret_type": "builtins.str", "variables": []}}, "is_overload": false, "var": {".class": "Var", "flags": ["is_initialized_in_class", "is_property", "is_ready"], "fullname": null, "name": "description", "type": {".class": "CallableType", "arg_kinds": [0], "arg_names": ["self"], "arg_types": ["sqlalchemy.sql.selectable.FromClause"], "bound_args": [], "def_extras": {"first_arg": "self"}, "fallback": "builtins.function", "implicit": false, "is_ellipsis_args": false, "name": "description of FromClause", "ret_type": "builtins.str", "variables": []}}}}, "entity_namespace": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "Decorator", "func": {".class": "FuncDef", "arg_kinds": [0], "arg_names": ["self"], "flags": ["is_property", "is_decorated"], "fullname": "sqlalchemy.sql.selectable.FromClause.entity_namespace", "name": "entity_namespace", "type": {".class": "CallableType", "arg_kinds": [0], "arg_names": ["self"], "arg_types": ["sqlalchemy.sql.selectable.FromClause"], "bound_args": [], "def_extras": {"first_arg": "self"}, "fallback": "builtins.function", "implicit": false, "is_ellipsis_args": false, "name": "entity_namespace of FromClause", "ret_type": "sqlalchemy.sql.base._EntityNamespace", "variables": []}}, "is_overload": false, "var": {".class": "Var", "flags": ["is_initialized_in_class", "is_property", "is_ready"], "fullname": null, "name": "entity_namespace", "type": {".class": "CallableType", "arg_kinds": [0], "arg_names": ["self"], "arg_types": ["sqlalchemy.sql.selectable.FromClause"], "bound_args": [], "def_extras": {"first_arg": "self"}, "fallback": "builtins.function", "implicit": false, "is_ellipsis_args": false, "name": "entity_namespace of FromClause", "ret_type": "sqlalchemy.sql.base._EntityNamespace", "variables": []}}}}, "exported_columns": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "Decorator", "func": {".class": "FuncDef", "arg_kinds": [0], "arg_names": ["self"], "flags": ["is_property", "is_decorated"], "fullname": "sqlalchemy.sql.selectable.FromClause.exported_columns", "name": "exported_columns", "type": {".class": "CallableType", "arg_kinds": [0], "arg_names": ["self"], "arg_types": ["sqlalchemy.sql.selectable.FromClause"], "bound_args": [], "def_extras": {"first_arg": "self"}, "fallback": "builtins.function", "implicit": false, "is_ellipsis_args": false, "name": "exported_columns of FromClause", "ret_type": {".class": "Instance", "args": ["builtins.str", {".class": "Instance", "args": [{".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 2}], "type_ref": "sqlalchemy.sql.elements.KeyedColumnElement"}], "type_ref": "sqlalchemy.sql.base.ReadOnlyColumnCollection"}, "variables": []}}, "is_overload": false, "var": {".class": "Var", "flags": ["is_initialized_in_class", "is_property", "is_ready"], "fullname": null, "name": "exported_columns", "type": {".class": "CallableType", "arg_kinds": [0], "arg_names": ["self"], "arg_types": ["sqlalchemy.sql.selectable.FromClause"], "bound_args": [], "def_extras": {"first_arg": "self"}, "fallback": "builtins.function", "implicit": false, "is_ellipsis_args": false, "name": "exported_columns of FromClause", "ret_type": {".class": "Instance", "args": ["builtins.str", {".class": "Instance", "args": [{".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 2}], "type_ref": "sqlalchemy.sql.elements.KeyedColumnElement"}], "type_ref": "sqlalchemy.sql.base.ReadOnlyColumnCollection"}, "variables": []}}}}, "foreign_keys": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "Decorator", "func": {".class": "FuncDef", "arg_kinds": [0], "arg_names": ["self"], "flags": ["is_property", "is_decorated"], "fullname": "sqlalchemy.sql.selectable.FromClause.foreign_keys", "name": "foreign_keys", "type": {".class": "CallableType", "arg_kinds": [0], "arg_names": ["self"], "arg_types": ["sqlalchemy.sql.selectable.FromClause"], "bound_args": [], "def_extras": {"first_arg": "self"}, "fallback": "builtins.function", "implicit": false, "is_ellipsis_args": false, "name": "foreign_keys of FromClause", "ret_type": {".class": "Instance", "args": ["sqlalchemy.sql.schema.ForeignKey"], "type_ref": "typing.Iterable"}, "variables": []}}, "is_overload": false, "var": {".class": "Var", "flags": ["is_initialized_in_class", "is_property", "is_ready"], "fullname": null, "name": "foreign_keys", "type": {".class": "CallableType", "arg_kinds": [0], "arg_names": ["self"], "arg_types": ["sqlalchemy.sql.selectable.FromClause"], "bound_args": [], "def_extras": {"first_arg": "self"}, "fallback": "builtins.function", "implicit": false, "is_ellipsis_args": false, "name": "foreign_keys of FromClause", "ret_type": {".class": "Instance", "args": ["sqlalchemy.sql.schema.ForeignKey"], "type_ref": "typing.Iterable"}, "variables": []}}}}, "is_derived_from": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "FuncDef", "arg_kinds": [0, 0], "arg_names": ["self", "fromclause"], "flags": [], "fullname": "sqlalchemy.sql.selectable.FromClause.is_derived_from", "name": "is_derived_from", "type": {".class": "CallableType", "arg_kinds": [0, 0], "arg_names": ["self", "fromclause"], "arg_types": ["sqlalchemy.sql.selectable.FromClause", {".class": "UnionType", "items": ["sqlalchemy.sql.selectable.FromClause", {".class": "NoneType"}]}], "bound_args": [], "def_extras": {"first_arg": "self"}, "fallback": "builtins.function", "implicit": false, "is_ellipsis_args": false, "name": "is_derived_from of FromClause", "ret_type": "builtins.bool", "variables": []}}}, "is_selectable": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "Var", "flags": ["is_initialized_in_class"], "fullname": "sqlalchemy.sql.selectable.FromClause.is_selectable", "name": "is_selectable", "type": "builtins.bool"}}, "join": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "FuncDef", "arg_kinds": [0, 0, 1, 1, 1], "arg_names": ["self", "right", "onclause", "isouter", "full"], "flags": [], "fullname": "sqlalchemy.sql.selectable.FromClause.join", "name": "join", "type": {".class": "CallableType", "arg_kinds": [0, 0, 1, 1, 1], "arg_names": ["self", "right", "onclause", "isouter", "full"], "arg_types": ["sqlalchemy.sql.selectable.FromClause", {".class": "TypeAliasType", "args": [], "type_ref": "sqlalchemy.sql._typing._FromClauseArgument"}, {".class": "UnionType", "items": [{".class": "Instance", "args": ["builtins.bool"], "type_ref": "sqlalchemy.sql.elements.ColumnElement"}, "sqlalchemy.sql._typing._HasClauseElement", {".class": "Instance", "args": ["builtins.bool"], "type_ref": "sqlalchemy.sql.elements.SQLCoreOperations"}, {".class": "Instance", "args": ["builtins.bool"], "type_ref": "sqlalchemy.sql.roles.ExpressionElementRole"}, {".class": "CallableType", "arg_kinds": [], "arg_names": [], "arg_types": [], "bound_args": [], "def_extras": {}, "fallback": "builtins.function", "implicit": false, "is_ellipsis_args": false, "name": null, "ret_type": {".class": "Instance", "args": ["builtins.bool"], "type_ref": "sqlalchemy.sql.elements.ColumnElement"}, "variables": []}, "sqlalchemy.sql.lambdas.LambdaElement", {".class": "NoneType"}]}, "builtins.bool", "builtins.bool"], "bound_args": [], "def_extras": {"first_arg": "self"}, "fallback": "builtins.function", "implicit": false, "is_ellipsis_args": false, "name": "join of FromClause", "ret_type": "sqlalchemy.sql.selectable.Join", "variables": []}}}, "named_with_column": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "Var", "flags": ["is_initialized_in_class"], "fullname": "sqlalchemy.sql.selectable.FromClause.named_with_column", "name": "named_with_column", "type": "builtins.bool"}}, "outerjoin": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "FuncDef", "arg_kinds": [0, 0, 1, 1], "arg_names": ["self", "right", "onclause", "full"], "flags": [], "fullname": "sqlalchemy.sql.selectable.FromClause.outerjoin", "name": "outerjoin", "type": {".class": "CallableType", "arg_kinds": [0, 0, 1, 1], "arg_names": ["self", "right", "onclause", "full"], "arg_types": ["sqlalchemy.sql.selectable.FromClause", {".class": "TypeAliasType", "args": [], "type_ref": "sqlalchemy.sql._typing._FromClauseArgument"}, {".class": "UnionType", "items": [{".class": "Instance", "args": ["builtins.bool"], "type_ref": "sqlalchemy.sql.elements.ColumnElement"}, "sqlalchemy.sql._typing._HasClauseElement", {".class": "Instance", "args": ["builtins.bool"], "type_ref": "sqlalchemy.sql.elements.SQLCoreOperations"}, {".class": "Instance", "args": ["builtins.bool"], "type_ref": "sqlalchemy.sql.roles.ExpressionElementRole"}, {".class": "CallableType", "arg_kinds": [], "arg_names": [], "arg_types": [], "bound_args": [], "def_extras": {}, "fallback": "builtins.function", "implicit": false, "is_ellipsis_args": false, "name": null, "ret_type": {".class": "Instance", "args": ["builtins.bool"], "type_ref": "sqlalchemy.sql.elements.ColumnElement"}, "variables": []}, "sqlalchemy.sql.lambdas.LambdaElement", {".class": "NoneType"}]}, "builtins.bool"], "bound_args": [], "def_extras": {"first_arg": "self"}, "fallback": "builtins.function", "implicit": false, "is_ellipsis_args": false, "name": "outerjoin of FromClause", "ret_type": "sqlalchemy.sql.selectable.Join", "variables": []}}}, "primary_key": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "Decorator", "func": {".class": "FuncDef", "arg_kinds": [0], "arg_names": ["self"], "flags": ["is_property", "is_decorated"], "fullname": "sqlalchemy.sql.selectable.FromClause.primary_key", "name": "primary_key", "type": {".class": "CallableType", "arg_kinds": [0], "arg_names": ["self"], "arg_types": ["sqlalchemy.sql.selectable.FromClause"], "bound_args": [], "def_extras": {"first_arg": "self"}, "fallback": "builtins.function", "implicit": false, "is_ellipsis_args": false, "name": "primary_key of FromClause", "ret_type": {".class": "Instance", "args": [{".class": "Instance", "args": [{".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 2}], "type_ref": "sqlalchemy.sql.elements.NamedColumn"}], "type_ref": "typing.Iterable"}, "variables": []}}, "is_overload": false, "var": {".class": "Var", "flags": ["is_initialized_in_class", "is_property", "is_ready"], "fullname": null, "name": "primary_key", "type": {".class": "CallableType", "arg_kinds": [0], "arg_names": ["self"], "arg_types": ["sqlalchemy.sql.selectable.FromClause"], "bound_args": [], "def_extras": {"first_arg": "self"}, "fallback": "builtins.function", "implicit": false, "is_ellipsis_args": false, "name": "primary_key of FromClause", "ret_type": {".class": "Instance", "args": [{".class": "Instance", "args": [{".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 2}], "type_ref": "sqlalchemy.sql.elements.NamedColumn"}], "type_ref": "typing.Iterable"}, "variables": []}}}}, "schema": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "Var", "flags": ["is_initialized_in_class", "is_ready"], "fullname": "sqlalchemy.sql.selectable.FromClause.schema", "name": "schema", "type": {".class": "UnionType", "items": ["builtins.str", {".class": "NoneType"}]}}}, "select": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "FuncDef", "arg_kinds": [0], "arg_names": ["self"], "flags": [], "fullname": "sqlalchemy.sql.selectable.FromClause.select", "name": "select", "type": {".class": "CallableType", "arg_kinds": [0], "arg_names": ["self"], "arg_types": ["sqlalchemy.sql.selectable.FromClause"], "bound_args": [], "def_extras": {"first_arg": "self"}, "fallback": "builtins.function", "implicit": false, "is_ellipsis_args": false, "name": "select of FromClause", "ret_type": {".class": "Instance", "args": [{".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 2}], "type_ref": "sqlalchemy.sql.selectable.Select"}, "variables": []}}}, "self_group": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "FuncDef", "arg_kinds": [0, 1], "arg_names": ["self", "against"], "flags": [], "fullname": "sqlalchemy.sql.selectable.FromClause.self_group", "name": "self_group", "type": {".class": "CallableType", "arg_kinds": [0, 1], "arg_names": ["self", "against"], "arg_types": ["sqlalchemy.sql.selectable.FromClause", {".class": "UnionType", "items": ["sqlalchemy.sql.operators.OperatorType", {".class": "NoneType"}]}], "bound_args": [], "def_extras": {"first_arg": "self"}, "fallback": "builtins.function", "implicit": false, "is_ellipsis_args": false, "name": "self_group of FromClause", "ret_type": {".class": "UnionType", "items": ["sqlalchemy.sql.selectable.FromGrouping", {".class": "AnyType", "missing_import_name": "sqlalchemy.util.typing.Self", "source_any": null, "type_of_any": 3}]}, "variables": []}}}, "tablesample": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "FuncDef", "arg_kinds": [0, 0, 1, 1], "arg_names": ["self", "sampling", "name", "seed"], "flags": [], "fullname": "sqlalchemy.sql.selectable.FromClause.tablesample", "name": "tablesample", "type": {".class": "CallableType", "arg_kinds": [0, 0, 1, 1], "arg_names": ["self", "sampling", "name", "seed"], "arg_types": ["sqlalchemy.sql.selectable.FromClause", {".class": "UnionType", "items": ["builtins.float", {".class": "Instance", "args": [{".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 2}], "type_ref": "sqlalchemy.sql.functions.Function"}]}, {".class": "UnionType", "items": ["builtins.str", {".class": "NoneType"}]}, {".class": "UnionType", "items": [{".class": "Instance", "args": [{".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 2}], "type_ref": "sqlalchemy.sql.roles.ExpressionElementRole"}, {".class": "NoneType"}]}], "bound_args": [], "def_extras": {"first_arg": "self"}, "fallback": "builtins.function", "implicit": false, "is_ellipsis_args": false, "name": "tablesample of FromClause", "ret_type": "sqlalchemy.sql.selectable.TableSample", "variables": []}}}}, "tuple_type": null, "type_vars": [], "typeddict_type": null}}, "FromClauseAlias": {".class": "SymbolTableNode", "kind": "Gdef", "node": {".class": "TypeInfo", "_promote": null, "abstract_attributes": [], "bases": ["sqlalchemy.sql.selectable.AliasedReturnsRows"], "declared_metaclass": null, "defn": {".class": "ClassDef", "fullname": "sqlalchemy.sql.selectable.FromClauseAlias", "name": "FromClauseAlias", "type_vars": []}, "flags": [], "fullname": "sqlalchemy.sql.selectable.FromClauseAlias", "metaclass_type": null, "metadata": {}, "module_name": "sqlalchemy.sql.selectable", "mro": ["sqlalchemy.sql.selectable.FromClauseAlias", "sqlalchemy.sql.selectable.AliasedReturnsRows", "sqlalchemy.sql.selectable.NoInit", "sqlalchemy.sql.selectable.NamedFromClause", "sqlalchemy.sql.selectable.FromClause", "sqlalchemy.sql.roles.AnonymizedFromClauseRole", "sqlalchemy.sql.roles.StrictFromClauseRole", "sqlalchemy.sql.roles.FromClauseRole", "sqlalchemy.sql.roles.ColumnsClauseRole", "sqlalchemy.sql.roles.JoinTargetRole", "sqlalchemy.sql.roles.AllowsLambdaRole", "sqlalchemy.sql.roles.UsesInspection", "sqlalchemy.sql.roles.ColumnListRole", "sqlalchemy.sql.roles.StructuralRole", "sqlalchemy.sql.selectable.Selectable", "sqlalchemy.sql.selectable.ReturnsRows", "sqlalchemy.sql.roles.ReturnsRowsRole", "sqlalchemy.sql.roles.SQLRole", "sqlalchemy.sql.elements.DQLDMLClauseElement", "sqlalchemy.sql.elements.ClauseElement", "sqlalchemy.sql.annotation.SupportsWrappingAnnotations", "sqlalchemy.sql.annotation.SupportsAnnotations", "sqlalchemy.sql.cache_key.MemoizedHasCacheKey", "sqlalchemy.sql.cache_key.HasCacheKey", "sqlalchemy.util.langhelpers.HasMemoized", "sqlalchemy.sql.traversals.HasCopyInternals", "sqlalchemy.sql.visitors.ExternallyTraversible", "sqlalchemy.sql.visitors.HasTraverseInternals", "sqlalchemy.sql.elements.CompilerElement", "sqlalchemy.sql.visitors.Visitable", "builtins.object"], "names": {".class": "SymbolTable", "element": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "Var", "flags": ["is_initialized_in_class", "is_ready"], "fullname": "sqlalchemy.sql.selectable.FromClauseAlias.element", "name": "element", "type": "sqlalchemy.sql.selectable.FromClause"}}}, "tuple_type": null, "type_vars": [], "typeddict_type": null}}, "FromGrouping": {".class": "SymbolTableNode", "kind": "Gdef", "node": {".class": "TypeInfo", "_promote": null, "abstract_attributes": [], "bases": ["sqlalchemy.sql.elements.GroupedElement", "sqlalchemy.sql.selectable.FromClause"], "declared_metaclass": null, "defn": {".class": "ClassDef", "fullname": "sqlalchemy.sql.selectable.FromGrouping", "name": "FromGrouping", "type_vars": []}, "flags": [], "fullname": "sqlalchemy.sql.selectable.FromGrouping", "metaclass_type": null, "metadata": {}, "module_name": "sqlalchemy.sql.selectable", "mro": ["sqlalchemy.sql.selectable.FromGrouping", "sqlalchemy.sql.elements.GroupedElement", "sqlalchemy.sql.selectable.FromClause", "sqlalchemy.sql.roles.AnonymizedFromClauseRole", "sqlalchemy.sql.roles.StrictFromClauseRole", "sqlalchemy.sql.roles.FromClauseRole", "sqlalchemy.sql.roles.ColumnsClauseRole", "sqlalchemy.sql.roles.JoinTargetRole", "sqlalchemy.sql.roles.AllowsLambdaRole", "sqlalchemy.sql.roles.UsesInspection", "sqlalchemy.sql.roles.ColumnListRole", "sqlalchemy.sql.roles.StructuralRole", "sqlalchemy.sql.selectable.Selectable", "sqlalchemy.sql.selectable.ReturnsRows", "sqlalchemy.sql.roles.ReturnsRowsRole", "sqlalchemy.sql.roles.SQLRole", "sqlalchemy.sql.elements.DQLDMLClauseElement", "sqlalchemy.sql.elements.ClauseElement", "sqlalchemy.sql.annotation.SupportsWrappingAnnotations", "sqlalchemy.sql.annotation.SupportsAnnotations", "sqlalchemy.sql.cache_key.MemoizedHasCacheKey", "sqlalchemy.sql.cache_key.HasCacheKey", "sqlalchemy.util.langhelpers.HasMemoized", "sqlalchemy.sql.traversals.HasCopyInternals", "sqlalchemy.sql.visitors.ExternallyTraversible", "sqlalchemy.sql.visitors.HasTraverseInternals", "sqlalchemy.sql.elements.CompilerElement", "sqlalchemy.sql.visitors.Visitable", "builtins.object"], "names": {".class": "SymbolTable", "__getstate__": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "FuncDef", "arg_kinds": [0], "arg_names": ["self"], "flags": [], "fullname": "sqlalchemy.sql.selectable.FromGrouping.__getstate__", "name": "__getstate__", "type": {".class": "CallableType", "arg_kinds": [0], "arg_names": ["self"], "arg_types": ["sqlalchemy.sql.selectable.FromGrouping"], "bound_args": [], "def_extras": {"first_arg": "self"}, "fallback": "builtins.function", "implicit": false, "is_ellipsis_args": false, "name": "__getstate__ of FromGrouping", "ret_type": {".class": "Instance", "args": ["builtins.str", "sqlalchemy.sql.selectable.FromClause"], "type_ref": "builtins.dict"}, "variables": []}}}, "__init__": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "FuncDef", "arg_kinds": [0, 0], "arg_names": ["self", "element"], "flags": [], "fullname": "sqlalchemy.sql.selectable.FromGrouping.__init__", "name": "__init__", "type": {".class": "CallableType", "arg_kinds": [0, 0], "arg_names": ["self", "element"], "arg_types": ["sqlalchemy.sql.selectable.FromGrouping", "sqlalchemy.sql.selectable.FromClause"], "bound_args": [], "def_extras": {"first_arg": "self"}, "fallback": "builtins.function", "implicit": false, "is_ellipsis_args": false, "name": "__init__ of FromGrouping", "ret_type": {".class": "NoneType"}, "variables": []}}}, "__setstate__": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "FuncDef", "arg_kinds": [0, 0], "arg_names": ["self", "state"], "flags": [], "fullname": "sqlalchemy.sql.selectable.FromGrouping.__setstate__", "name": "__setstate__", "type": {".class": "CallableType", "arg_kinds": [0, 0], "arg_names": ["self", "state"], "arg_types": ["sqlalchemy.sql.selectable.FromGrouping", {".class": "Instance", "args": ["builtins.str", "sqlalchemy.sql.selectable.FromClause"], "type_ref": "builtins.dict"}], "bound_args": [], "def_extras": {"first_arg": "self"}, "fallback": "builtins.function", "implicit": false, "is_ellipsis_args": false, "name": "__setstate__ of FromGrouping", "ret_type": {".class": "NoneType"}, "variables": []}}}, "_anonymous_fromclause": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "FuncDef", "arg_kinds": [0, 4], "arg_names": ["self", "kw"], "flags": [], "fullname": "sqlalchemy.sql.selectable.FromGrouping._anonymous_fromclause", "name": "_anonymous_fromclause", "type": {".class": "CallableType", "arg_kinds": [0, 4], "arg_names": ["self", "kw"], "arg_types": ["sqlalchemy.sql.selectable.FromGrouping", {".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 2}], "bound_args": [], "def_extras": {"first_arg": "self"}, "fallback": "builtins.function", "implicit": false, "is_ellipsis_args": false, "name": "_anonymous_fromclause of FromGrouping", "ret_type": "sqlalchemy.sql.selectable.FromGrouping", "variables": []}}}, "_from_objects": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "Decorator", "func": {".class": "FuncDef", "arg_kinds": [0], "arg_names": ["self"], "flags": ["is_property", "is_decorated"], "fullname": "sqlalchemy.sql.selectable.FromGrouping._from_objects", "name": "_from_objects", "type": {".class": "CallableType", "arg_kinds": [0], "arg_names": ["self"], "arg_types": ["sqlalchemy.sql.selectable.FromGrouping"], "bound_args": [], "def_extras": {"first_arg": "self"}, "fallback": "builtins.function", "implicit": false, "is_ellipsis_args": false, "name": "_from_objects of FromGrouping", "ret_type": {".class": "Instance", "args": ["sqlalchemy.sql.selectable.FromClause"], "type_ref": "builtins.list"}, "variables": []}}, "is_overload": false, "var": {".class": "Var", "flags": ["is_initialized_in_class", "is_property", "is_ready"], "fullname": null, "name": "_from_objects", "type": {".class": "CallableType", "arg_kinds": [0], "arg_names": ["self"], "arg_types": ["sqlalchemy.sql.selectable.FromGrouping"], "bound_args": [], "def_extras": {"first_arg": "self"}, "fallback": "builtins.function", "implicit": false, "is_ellipsis_args": false, "name": "_from_objects of FromGrouping", "ret_type": {".class": "Instance", "args": ["sqlalchemy.sql.selectable.FromClause"], "type_ref": "builtins.list"}, "variables": []}}}}, "_hide_froms": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "Decorator", "func": {".class": "FuncDef", "arg_kinds": [0], "arg_names": ["self"], "flags": ["is_property", "is_decorated"], "fullname": "sqlalchemy.sql.selectable.FromGrouping._hide_froms", "name": "_hide_froms", "type": {".class": "CallableType", "arg_kinds": [0], "arg_names": ["self"], "arg_types": ["sqlalchemy.sql.selectable.FromGrouping"], "bound_args": [], "def_extras": {"first_arg": "self"}, "fallback": "builtins.function", "implicit": false, "is_ellipsis_args": false, "name": "_hide_froms of FromGrouping", "ret_type": {".class": "Instance", "args": ["sqlalchemy.sql.selectable.FromClause"], "type_ref": "typing.Iterable"}, "variables": []}}, "is_overload": false, "var": {".class": "Var", "flags": ["is_initialized_in_class", "is_property", "is_ready"], "fullname": null, "name": "_hide_froms", "type": {".class": "CallableType", "arg_kinds": [0], "arg_names": ["self"], "arg_types": ["sqlalchemy.sql.selectable.FromGrouping"], "bound_args": [], "def_extras": {"first_arg": "self"}, "fallback": "builtins.function", "implicit": false, "is_ellipsis_args": false, "name": "_hide_froms of FromGrouping", "ret_type": {".class": "Instance", "args": ["sqlalchemy.sql.selectable.FromClause"], "type_ref": "typing.Iterable"}, "variables": []}}}}, "_init_collections": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "FuncDef", "arg_kinds": [0], "arg_names": ["self"], "flags": [], "fullname": "sqlalchemy.sql.selectable.FromGrouping._init_collections", "name": "_init_collections", "type": {".class": "CallableType", "arg_kinds": [0], "arg_names": ["self"], "arg_types": ["sqlalchemy.sql.selectable.FromGrouping"], "bound_args": [], "def_extras": {"first_arg": "self"}, "fallback": "builtins.function", "implicit": false, "is_ellipsis_args": false, "name": "_init_collections of FromGrouping", "ret_type": {".class": "NoneType"}, "variables": []}}}, "_traverse_internals": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "Var", "flags": ["is_initialized_in_class", "is_ready"], "fullname": "sqlalchemy.sql.selectable.FromGrouping._traverse_internals", "name": "_traverse_internals", "type": {".class": "TypeAliasType", "args": [], "type_ref": "sqlalchemy.sql.visitors._TraverseInternalsType"}}}, "alias": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "FuncDef", "arg_kinds": [0, 1, 1], "arg_names": ["self", "name", "flat"], "flags": [], "fullname": "sqlalchemy.sql.selectable.FromGrouping.alias", "name": "alias", "type": {".class": "CallableType", "arg_kinds": [0, 1, 1], "arg_names": ["self", "name", "flat"], "arg_types": ["sqlalchemy.sql.selectable.FromGrouping", {".class": "UnionType", "items": ["builtins.str", {".class": "NoneType"}]}, "builtins.bool"], "bound_args": [], "def_extras": {"first_arg": "self"}, "fallback": "builtins.function", "implicit": false, "is_ellipsis_args": false, "name": "alias of FromGrouping", "ret_type": "sqlalchemy.sql.selectable.NamedFromGrouping", "variables": []}}}, "c": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "Decorator", "func": {".class": "FuncDef", "arg_kinds": [0], "arg_names": ["self"], "flags": ["is_property", "is_decorated"], "fullname": "sqlalchemy.sql.selectable.FromGrouping.c", "name": "c", "type": {".class": "CallableType", "arg_kinds": [0], "arg_names": ["self"], "arg_types": ["sqlalchemy.sql.selectable.FromGrouping"], "bound_args": [], "def_extras": {"first_arg": "self"}, "fallback": "builtins.function", "implicit": false, "is_ellipsis_args": false, "name": "c of FromGrouping", "ret_type": {".class": "Instance", "args": ["builtins.str", {".class": "Instance", "args": [{".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 2}], "type_ref": "sqlalchemy.sql.elements.KeyedColumnElement"}], "type_ref": "sqlalchemy.sql.base.ReadOnlyColumnCollection"}, "variables": []}}, "is_overload": false, "var": {".class": "Var", "flags": ["is_initialized_in_class", "is_property", "is_ready"], "fullname": null, "name": "c", "type": {".class": "CallableType", "arg_kinds": [0], "arg_names": ["self"], "arg_types": ["sqlalchemy.sql.selectable.FromGrouping"], "bound_args": [], "def_extras": {"first_arg": "self"}, "fallback": "builtins.function", "implicit": false, "is_ellipsis_args": false, "name": "c of FromGrouping", "ret_type": {".class": "Instance", "args": ["builtins.str", {".class": "Instance", "args": [{".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 2}], "type_ref": "sqlalchemy.sql.elements.KeyedColumnElement"}], "type_ref": "sqlalchemy.sql.base.ReadOnlyColumnCollection"}, "variables": []}}}}, "columns": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "Decorator", "func": {".class": "FuncDef", "arg_kinds": [0], "arg_names": ["self"], "flags": ["is_property", "is_decorated"], "fullname": "sqlalchemy.sql.selectable.FromGrouping.columns", "name": "columns", "type": {".class": "CallableType", "arg_kinds": [0], "arg_names": ["self"], "arg_types": ["sqlalchemy.sql.selectable.FromGrouping"], "bound_args": [], "def_extras": {"first_arg": "self"}, "fallback": "builtins.function", "implicit": false, "is_ellipsis_args": false, "name": "columns of FromGrouping", "ret_type": {".class": "Instance", "args": ["builtins.str", {".class": "Instance", "args": [{".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 2}], "type_ref": "sqlalchemy.sql.elements.KeyedColumnElement"}], "type_ref": "sqlalchemy.sql.base.ReadOnlyColumnCollection"}, "variables": []}}, "is_overload": false, "var": {".class": "Var", "flags": ["is_initialized_in_class", "is_property", "is_ready"], "fullname": null, "name": "columns", "type": {".class": "CallableType", "arg_kinds": [0], "arg_names": ["self"], "arg_types": ["sqlalchemy.sql.selectable.FromGrouping"], "bound_args": [], "def_extras": {"first_arg": "self"}, "fallback": "builtins.function", "implicit": false, "is_ellipsis_args": false, "name": "columns of FromGrouping", "ret_type": {".class": "Instance", "args": ["builtins.str", {".class": "Instance", "args": [{".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 2}], "type_ref": "sqlalchemy.sql.elements.KeyedColumnElement"}], "type_ref": "sqlalchemy.sql.base.ReadOnlyColumnCollection"}, "variables": []}}}}, "element": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "Var", "flags": ["is_initialized_in_class", "is_ready"], "fullname": "sqlalchemy.sql.selectable.FromGrouping.element", "name": "element", "type": "sqlalchemy.sql.selectable.FromClause"}}, "foreign_keys": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "Decorator", "func": {".class": "FuncDef", "arg_kinds": [0], "arg_names": ["self"], "flags": ["is_property", "is_decorated"], "fullname": "sqlalchemy.sql.selectable.FromGrouping.foreign_keys", "name": "foreign_keys", "type": {".class": "CallableType", "arg_kinds": [0], "arg_names": ["self"], "arg_types": ["sqlalchemy.sql.selectable.FromGrouping"], "bound_args": [], "def_extras": {"first_arg": "self"}, "fallback": "builtins.function", "implicit": false, "is_ellipsis_args": false, "name": "foreign_keys of FromGrouping", "ret_type": {".class": "Instance", "args": ["sqlalchemy.sql.schema.ForeignKey"], "type_ref": "typing.Iterable"}, "variables": []}}, "is_overload": false, "var": {".class": "Var", "flags": ["is_initialized_in_class", "is_property", "is_ready"], "fullname": null, "name": "foreign_keys", "type": {".class": "CallableType", "arg_kinds": [0], "arg_names": ["self"], "arg_types": ["sqlalchemy.sql.selectable.FromGrouping"], "bound_args": [], "def_extras": {"first_arg": "self"}, "fallback": "builtins.function", "implicit": false, "is_ellipsis_args": false, "name": "foreign_keys of FromGrouping", "ret_type": {".class": "Instance", "args": ["sqlalchemy.sql.schema.ForeignKey"], "type_ref": "typing.Iterable"}, "variables": []}}}}, "is_derived_from": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "FuncDef", "arg_kinds": [0, 0], "arg_names": ["self", "fromclause"], "flags": [], "fullname": "sqlalchemy.sql.selectable.FromGrouping.is_derived_from", "name": "is_derived_from", "type": {".class": "CallableType", "arg_kinds": [0, 0], "arg_names": ["self", "fromclause"], "arg_types": ["sqlalchemy.sql.selectable.FromGrouping", {".class": "UnionType", "items": ["sqlalchemy.sql.selectable.FromClause", {".class": "NoneType"}]}], "bound_args": [], "def_extras": {"first_arg": "self"}, "fallback": "builtins.function", "implicit": false, "is_ellipsis_args": false, "name": "is_derived_from of FromGrouping", "ret_type": "builtins.bool", "variables": []}}}, "primary_key": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "Decorator", "func": {".class": "FuncDef", "arg_kinds": [0], "arg_names": ["self"], "flags": ["is_property", "is_decorated"], "fullname": "sqlalchemy.sql.selectable.FromGrouping.primary_key", "name": "primary_key", "type": {".class": "CallableType", "arg_kinds": [0], "arg_names": ["self"], "arg_types": ["sqlalchemy.sql.selectable.FromGrouping"], "bound_args": [], "def_extras": {"first_arg": "self"}, "fallback": "builtins.function", "implicit": false, "is_ellipsis_args": false, "name": "primary_key of FromGrouping", "ret_type": {".class": "Instance", "args": [{".class": "Instance", "args": [{".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 2}], "type_ref": "sqlalchemy.sql.elements.NamedColumn"}], "type_ref": "typing.Iterable"}, "variables": []}}, "is_overload": false, "var": {".class": "Var", "flags": ["is_initialized_in_class", "is_property", "is_ready"], "fullname": null, "name": "primary_key", "type": {".class": "CallableType", "arg_kinds": [0], "arg_names": ["self"], "arg_types": ["sqlalchemy.sql.selectable.FromGrouping"], "bound_args": [], "def_extras": {"first_arg": "self"}, "fallback": "builtins.function", "implicit": false, "is_ellipsis_args": false, "name": "primary_key of FromGrouping", "ret_type": {".class": "Instance", "args": [{".class": "Instance", "args": [{".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 2}], "type_ref": "sqlalchemy.sql.elements.NamedColumn"}], "type_ref": "typing.Iterable"}, "variables": []}}}}}, "tuple_type": null, "type_vars": [], "typeddict_type": null}}, "Function": {".class": "SymbolTableNode", "cross_ref": "sqlalchemy.sql.functions.Function", "kind": "Gdef"}, "Generative": {".class": "SymbolTableNode", "cross_ref": "sqlalchemy.sql.base.Generative", "kind": "Gdef"}, "GenerativeSelect": {".class": "SymbolTableNode", "kind": "Gdef", "node": {".class": "TypeInfo", "_promote": null, "abstract_attributes": [], "bases": ["sqlalchemy.sql.selectable.SelectBase", "sqlalchemy.sql.base.Generative"], "declared_metaclass": null, "defn": {".class": "ClassDef", "fullname": "sqlalchemy.sql.selectable.GenerativeSelect", "name": "GenerativeSelect", "type_vars": []}, "flags": [], "fullname": "sqlalchemy.sql.selectable.GenerativeSelect", "metaclass_type": null, "metadata": {}, "module_name": "sqlalchemy.sql.selectable", "mro": ["sqlalchemy.sql.selectable.GenerativeSelect", "sqlalchemy.sql.selectable.SelectBase", "sqlalchemy.sql.roles.SelectStatementRole", "sqlalchemy.sql.roles.StatementRole", "sqlalchemy.sql.roles.DMLSelectRole", "sqlalchemy.sql.roles.CompoundElementRole", "sqlalchemy.sql.roles.AllowsLambdaRole", "sqlalchemy.sql.roles.InElementRole", "sqlalchemy.sql.selectable.HasCTE", "sqlalchemy.sql.roles.HasCTERole", "sqlalchemy.sql.selectable.SelectsRows", "sqlalchemy.sql.annotation.SupportsCloneAnnotations", "sqlalchemy.sql.selectable.Selectable", "sqlalchemy.sql.selectable.ReturnsRows", "sqlalchemy.sql.roles.ReturnsRowsRole", "sqlalchemy.sql.roles.SQLRole", "sqlalchemy.sql.elements.DQLDMLClauseElement", "sqlalchemy.sql.elements.ClauseElement", "sqlalchemy.sql.annotation.SupportsWrappingAnnotations", "sqlalchemy.sql.annotation.SupportsAnnotations", "sqlalchemy.sql.cache_key.MemoizedHasCacheKey", "sqlalchemy.sql.cache_key.HasCacheKey", "sqlalchemy.sql.base.Generative", "sqlalchemy.util.langhelpers.HasMemoized", "sqlalchemy.sql.traversals.HasCopyInternals", "sqlalchemy.sql.visitors.ExternallyTraversible", "sqlalchemy.sql.visitors.HasTraverseInternals", "sqlalchemy.sql.elements.CompilerElement", "sqlalchemy.sql.visitors.Visitable", "builtins.object"], "names": {".class": "SymbolTable", "__init__": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "FuncDef", "arg_kinds": [0, 1], "arg_names": ["self", "_label_style"], "flags": [], "fullname": "sqlalchemy.sql.selectable.GenerativeSelect.__init__", "name": "__init__", "type": {".class": "CallableType", "arg_kinds": [0, 1], "arg_names": ["self", "_label_style"], "arg_types": ["sqlalchemy.sql.selectable.GenerativeSelect", "sqlalchemy.sql.selectable.SelectLabelStyle"], "bound_args": [], "def_extras": {"first_arg": "self"}, "fallback": "builtins.function", "implicit": false, "is_ellipsis_args": false, "name": "__init__ of GenerativeSelect", "ret_type": {".class": "NoneType"}, "variables": []}}}, "_fetch_clause": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "Var", "flags": ["is_initialized_in_class", "is_ready"], "fullname": "sqlalchemy.sql.selectable.GenerativeSelect._fetch_clause", "name": "_fetch_clause", "type": {".class": "UnionType", "items": [{".class": "Instance", "args": [{".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 2}], "type_ref": "sqlalchemy.sql.elements.ColumnElement"}, {".class": "NoneType"}]}}}, "_fetch_clause_options": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "Var", "flags": ["is_initialized_in_class", "is_ready"], "fullname": "sqlalchemy.sql.selectable.GenerativeSelect._fetch_clause_options", "name": "_fetch_clause_options", "type": {".class": "UnionType", "items": [{".class": "Instance", "args": ["builtins.str", "builtins.bool"], "type_ref": "builtins.dict"}, {".class": "NoneType"}]}}}, "_for_update_arg": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "Var", "flags": ["is_initialized_in_class", "is_ready"], "fullname": "sqlalchemy.sql.selectable.GenerativeSelect._for_update_arg", "name": "_for_update_arg", "type": {".class": "UnionType", "items": ["sqlalchemy.sql.selectable.ForUpdateArg", {".class": "NoneType"}]}}}, "_group_by_clause": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "Decorator", "func": {".class": "FuncDef", "arg_kinds": [0], "arg_names": ["self"], "flags": ["is_property", "is_decorated"], "fullname": "sqlalchemy.sql.selectable.GenerativeSelect._group_by_clause", "name": "_group_by_clause", "type": {".class": "CallableType", "arg_kinds": [0], "arg_names": ["self"], "arg_types": ["sqlalchemy.sql.selectable.GenerativeSelect"], "bound_args": [], "def_extras": {"first_arg": "self"}, "fallback": "builtins.function", "implicit": false, "is_ellipsis_args": false, "name": "_group_by_clause of GenerativeSelect", "ret_type": "sqlalchemy.sql.elements.ClauseList", "variables": []}}, "is_overload": false, "var": {".class": "Var", "flags": ["is_initialized_in_class", "is_property", "is_ready"], "fullname": null, "name": "_group_by_clause", "type": {".class": "CallableType", "arg_kinds": [0], "arg_names": ["self"], "arg_types": ["sqlalchemy.sql.selectable.GenerativeSelect"], "bound_args": [], "def_extras": {"first_arg": "self"}, "fallback": "builtins.function", "implicit": false, "is_ellipsis_args": false, "name": "_group_by_clause of GenerativeSelect", "ret_type": "sqlalchemy.sql.elements.ClauseList", "variables": []}}}}, "_group_by_clauses": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "Var", "flags": ["is_initialized_in_class", "is_ready"], "fullname": "sqlalchemy.sql.selectable.GenerativeSelect._group_by_clauses", "name": "_group_by_clauses", "type": {".class": "Instance", "args": [{".class": "Instance", "args": [{".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 2}], "type_ref": "sqlalchemy.sql.elements.ColumnElement"}], "type_ref": "builtins.tuple"}}}, "_has_row_limiting_clause": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "Decorator", "func": {".class": "FuncDef", "arg_kinds": [0], "arg_names": ["self"], "flags": ["is_property", "is_decorated"], "fullname": "sqlalchemy.sql.selectable.GenerativeSelect._has_row_limiting_clause", "name": "_has_row_limiting_clause", "type": {".class": "CallableType", "arg_kinds": [0], "arg_names": ["self"], "arg_types": ["sqlalchemy.sql.selectable.GenerativeSelect"], "bound_args": [], "def_extras": {"first_arg": "self"}, "fallback": "builtins.function", "implicit": false, "is_ellipsis_args": false, "name": "_has_row_limiting_clause of GenerativeSelect", "ret_type": "builtins.bool", "variables": []}}, "is_overload": false, "var": {".class": "Var", "flags": ["is_initialized_in_class", "is_property", "is_ready"], "fullname": null, "name": "_has_row_limiting_clause", "type": {".class": "CallableType", "arg_kinds": [0], "arg_names": ["self"], "arg_types": ["sqlalchemy.sql.selectable.GenerativeSelect"], "bound_args": [], "def_extras": {"first_arg": "self"}, "fallback": "builtins.function", "implicit": false, "is_ellipsis_args": false, "name": "_has_row_limiting_clause of GenerativeSelect", "ret_type": "builtins.bool", "variables": []}}}}, "_limit": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "Decorator", "func": {".class": "FuncDef", "arg_kinds": [0], "arg_names": ["self"], "flags": ["is_property", "is_decorated"], "fullname": "sqlalchemy.sql.selectable.GenerativeSelect._limit", "name": "_limit", "type": {".class": "CallableType", "arg_kinds": [0], "arg_names": ["self"], "arg_types": ["sqlalchemy.sql.selectable.GenerativeSelect"], "bound_args": [], "def_extras": {"first_arg": "self"}, "fallback": "builtins.function", "implicit": false, "is_ellipsis_args": false, "name": "_limit of GenerativeSelect", "ret_type": {".class": "UnionType", "items": ["builtins.int", {".class": "NoneType"}]}, "variables": []}}, "is_overload": false, "var": {".class": "Var", "flags": ["is_initialized_in_class", "is_property", "is_ready"], "fullname": null, "name": "_limit", "type": {".class": "CallableType", "arg_kinds": [0], "arg_names": ["self"], "arg_types": ["sqlalchemy.sql.selectable.GenerativeSelect"], "bound_args": [], "def_extras": {"first_arg": "self"}, "fallback": "builtins.function", "implicit": false, "is_ellipsis_args": false, "name": "_limit of GenerativeSelect", "ret_type": {".class": "UnionType", "items": ["builtins.int", {".class": "NoneType"}]}, "variables": []}}}}, "_limit_clause": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "Var", "flags": ["is_initialized_in_class", "is_ready"], "fullname": "sqlalchemy.sql.selectable.GenerativeSelect._limit_clause", "name": "_limit_clause", "type": {".class": "UnionType", "items": [{".class": "Instance", "args": [{".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 2}], "type_ref": "sqlalchemy.sql.elements.ColumnElement"}, {".class": "NoneType"}]}}}, "_offset": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "Decorator", "func": {".class": "FuncDef", "arg_kinds": [0], "arg_names": ["self"], "flags": ["is_property", "is_decorated"], "fullname": "sqlalchemy.sql.selectable.GenerativeSelect._offset", "name": "_offset", "type": {".class": "CallableType", "arg_kinds": [0], "arg_names": ["self"], "arg_types": ["sqlalchemy.sql.selectable.GenerativeSelect"], "bound_args": [], "def_extras": {"first_arg": "self"}, "fallback": "builtins.function", "implicit": false, "is_ellipsis_args": false, "name": "_offset of GenerativeSelect", "ret_type": {".class": "UnionType", "items": ["builtins.int", {".class": "NoneType"}]}, "variables": []}}, "is_overload": false, "var": {".class": "Var", "flags": ["is_initialized_in_class", "is_property", "is_ready"], "fullname": null, "name": "_offset", "type": {".class": "CallableType", "arg_kinds": [0], "arg_names": ["self"], "arg_types": ["sqlalchemy.sql.selectable.GenerativeSelect"], "bound_args": [], "def_extras": {"first_arg": "self"}, "fallback": "builtins.function", "implicit": false, "is_ellipsis_args": false, "name": "_offset of GenerativeSelect", "ret_type": {".class": "UnionType", "items": ["builtins.int", {".class": "NoneType"}]}, "variables": []}}}}, "_offset_clause": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "Var", "flags": ["is_initialized_in_class", "is_ready"], "fullname": "sqlalchemy.sql.selectable.GenerativeSelect._offset_clause", "name": "_offset_clause", "type": {".class": "UnionType", "items": [{".class": "Instance", "args": [{".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 2}], "type_ref": "sqlalchemy.sql.elements.ColumnElement"}, {".class": "NoneType"}]}}}, "_offset_or_limit_clause": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "FuncDef", "arg_kinds": [0, 0, 1, 1], "arg_names": ["self", "element", "name", "type_"], "flags": [], "fullname": "sqlalchemy.sql.selectable.GenerativeSelect._offset_or_limit_clause", "name": "_offset_or_limit_clause", "type": {".class": "CallableType", "arg_kinds": [0, 0, 1, 1], "arg_names": ["self", "element", "name", "type_"], "arg_types": ["sqlalchemy.sql.selectable.GenerativeSelect", {".class": "TypeAliasType", "args": [], "type_ref": "sqlalchemy.sql._typing._LimitOffsetType"}, {".class": "UnionType", "items": ["builtins.str", {".class": "NoneType"}]}, {".class": "UnionType", "items": [{".class": "TypeType", "item": {".class": "Instance", "args": ["builtins.int"], "type_ref": "sqlalchemy.sql.type_api.TypeEngine"}}, {".class": "Instance", "args": ["builtins.int"], "type_ref": "sqlalchemy.sql.type_api.TypeEngine"}, {".class": "NoneType"}]}], "bound_args": [], "def_extras": {"first_arg": "self"}, "fallback": "builtins.function", "implicit": false, "is_ellipsis_args": false, "name": "_offset_or_limit_clause of GenerativeSelect", "ret_type": {".class": "Instance", "args": [{".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 2}], "type_ref": "sqlalchemy.sql.elements.ColumnElement"}, "variables": []}}}, "_offset_or_limit_clause_asint": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "OverloadedFuncDef", "flags": [], "fullname": "sqlalchemy.sql.selectable.GenerativeSelect._offset_or_limit_clause_asint", "impl": {".class": "FuncDef", "arg_kinds": [0, 0, 0], "arg_names": ["self", "clause", "attrname"], "flags": ["is_overload"], "fullname": "sqlalchemy.sql.selectable.GenerativeSelect._offset_or_limit_clause_asint", "name": "_offset_or_limit_clause_asint", "type": {".class": "CallableType", "arg_kinds": [0, 0, 0], "arg_names": ["self", "clause", "attrname"], "arg_types": ["sqlalchemy.sql.selectable.GenerativeSelect", {".class": "UnionType", "items": [{".class": "Instance", "args": [{".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 2}], "type_ref": "sqlalchemy.sql.elements.ColumnElement"}, {".class": "NoneType"}]}, "builtins.str"], "bound_args": [], "def_extras": {"first_arg": "self"}, "fallback": "builtins.function", "implicit": false, "is_ellipsis_args": false, "name": "_offset_or_limit_clause_asint of GenerativeSelect", "ret_type": {".class": "UnionType", "items": [{".class": "UninhabitedType", "is_noreturn": true}, "builtins.int", {".class": "NoneType"}]}, "variables": []}}, "items": [{".class": "Decorator", "func": {".class": "FuncDef", "arg_kinds": [0, 0, 0], "arg_names": ["self", "clause", "attrname"], "flags": ["is_overload", "is_decorated"], "fullname": "sqlalchemy.sql.selectable.GenerativeSelect._offset_or_limit_clause_asint", "name": "_offset_or_limit_clause_asint", "type": {".class": "CallableType", "arg_kinds": [0, 0, 0], "arg_names": ["self", "clause", "attrname"], "arg_types": ["sqlalchemy.sql.selectable.GenerativeSelect", {".class": "Instance", "args": [{".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 2}], "type_ref": "sqlalchemy.sql.elements.ColumnElement"}, "builtins.str"], "bound_args": [], "def_extras": {"first_arg": "self"}, "fallback": "builtins.function", "implicit": false, "is_ellipsis_args": false, "name": "_offset_or_limit_clause_asint of GenerativeSelect", "ret_type": {".class": "UninhabitedType", "is_noreturn": true}, "variables": []}}, "is_overload": true, "var": {".class": "Var", "flags": [], "fullname": null, "name": "_offset_or_limit_clause_asint", "type": null}}, {".class": "Decorator", "func": {".class": "FuncDef", "arg_kinds": [0, 0, 0], "arg_names": ["self", "clause", "attrname"], "flags": ["is_overload", "is_decorated"], "fullname": "sqlalchemy.sql.selectable.GenerativeSelect._offset_or_limit_clause_asint", "name": "_offset_or_limit_clause_asint", "type": {".class": "CallableType", "arg_kinds": [0, 0, 0], "arg_names": ["self", "clause", "attrname"], "arg_types": ["sqlalchemy.sql.selectable.GenerativeSelect", {".class": "UnionType", "items": ["sqlalchemy.sql.selectable._OffsetLimitParam", {".class": "NoneType"}]}, "builtins.str"], "bound_args": [], "def_extras": {"first_arg": "self"}, "fallback": "builtins.function", "implicit": false, "is_ellipsis_args": false, "name": "_offset_or_limit_clause_asint of GenerativeSelect", "ret_type": {".class": "UnionType", "items": ["builtins.int", {".class": "NoneType"}]}, "variables": []}}, "is_overload": true, "var": {".class": "Var", "flags": [], "fullname": null, "name": "_offset_or_limit_clause_asint", "type": null}}], "type": {".class": "Overloaded", "items": [{".class": "CallableType", "arg_kinds": [0, 0, 0], "arg_names": ["self", "clause", "attrname"], "arg_types": ["sqlalchemy.sql.selectable.GenerativeSelect", {".class": "Instance", "args": [{".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 2}], "type_ref": "sqlalchemy.sql.elements.ColumnElement"}, "builtins.str"], "bound_args": [], "def_extras": {"first_arg": "self"}, "fallback": "builtins.function", "implicit": false, "is_ellipsis_args": false, "name": "_offset_or_limit_clause_asint of GenerativeSelect", "ret_type": {".class": "UninhabitedType", "is_noreturn": true}, "variables": []}, {".class": "CallableType", "arg_kinds": [0, 0, 0], "arg_names": ["self", "clause", "attrname"], "arg_types": ["sqlalchemy.sql.selectable.GenerativeSelect", {".class": "UnionType", "items": ["sqlalchemy.sql.selectable._OffsetLimitParam", {".class": "NoneType"}]}, "builtins.str"], "bound_args": [], "def_extras": {"first_arg": "self"}, "fallback": "builtins.function", "implicit": false, "is_ellipsis_args": false, "name": "_offset_or_limit_clause_asint of GenerativeSelect", "ret_type": {".class": "UnionType", "items": ["builtins.int", {".class": "NoneType"}]}, "variables": []}]}}}, "_order_by_clause": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "Decorator", "func": {".class": "FuncDef", "arg_kinds": [0], "arg_names": ["self"], "flags": ["is_property", "is_decorated"], "fullname": "sqlalchemy.sql.selectable.GenerativeSelect._order_by_clause", "name": "_order_by_clause", "type": {".class": "CallableType", "arg_kinds": [0], "arg_names": ["self"], "arg_types": ["sqlalchemy.sql.selectable.GenerativeSelect"], "bound_args": [], "def_extras": {"first_arg": "self"}, "fallback": "builtins.function", "implicit": false, "is_ellipsis_args": false, "name": "_order_by_clause of GenerativeSelect", "ret_type": "sqlalchemy.sql.elements.ClauseList", "variables": []}}, "is_overload": false, "var": {".class": "Var", "flags": ["is_initialized_in_class", "is_property", "is_ready"], "fullname": null, "name": "_order_by_clause", "type": {".class": "CallableType", "arg_kinds": [0], "arg_names": ["self"], "arg_types": ["sqlalchemy.sql.selectable.GenerativeSelect"], "bound_args": [], "def_extras": {"first_arg": "self"}, "fallback": "builtins.function", "implicit": false, "is_ellipsis_args": false, "name": "_order_by_clause of GenerativeSelect", "ret_type": "sqlalchemy.sql.elements.ClauseList", "variables": []}}}}, "_order_by_clauses": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "Var", "flags": ["is_initialized_in_class", "is_ready"], "fullname": "sqlalchemy.sql.selectable.GenerativeSelect._order_by_clauses", "name": "_order_by_clauses", "type": {".class": "Instance", "args": [{".class": "Instance", "args": [{".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 2}], "type_ref": "sqlalchemy.sql.elements.ColumnElement"}], "type_ref": "builtins.tuple"}}}, "_simple_int_clause": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "FuncDef", "arg_kinds": [0, 0], "arg_names": ["self", "clause"], "flags": [], "fullname": "sqlalchemy.sql.selectable.GenerativeSelect._simple_int_clause", "name": "_simple_int_clause", "type": {".class": "CallableType", "arg_kinds": [0, 0], "arg_names": ["self", "clause"], "arg_types": ["sqlalchemy.sql.selectable.GenerativeSelect", "sqlalchemy.sql.elements.ClauseElement"], "bound_args": [], "def_extras": {"first_arg": "self"}, "fallback": "builtins.function", "implicit": false, "is_ellipsis_args": false, "name": "_simple_int_clause of GenerativeSelect", "ret_type": "builtins.bool", "variables": []}}}, "fetch": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "Decorator", "func": {".class": "FuncDef", "arg_kinds": [0, 0, 1, 1], "arg_names": ["self", "count", "with_ties", "percent"], "flags": ["is_decorated"], "fullname": "sqlalchemy.sql.selectable.GenerativeSelect.fetch", "name": "fetch", "type": {".class": "CallableType", "arg_kinds": [0, 0, 1, 1], "arg_names": ["self", "count", "with_ties", "percent"], "arg_types": ["sqlalchemy.sql.selectable.GenerativeSelect", {".class": "TypeAliasType", "args": [], "type_ref": "sqlalchemy.sql._typing._LimitOffsetType"}, "builtins.bool", "builtins.bool"], "bound_args": [], "def_extras": {"first_arg": "self"}, "fallback": "builtins.function", "implicit": false, "is_ellipsis_args": false, "name": "fetch of GenerativeSelect", "ret_type": {".class": "AnyType", "missing_import_name": "sqlalchemy.util.typing.Self", "source_any": null, "type_of_any": 3}, "variables": []}}, "is_overload": false, "var": {".class": "Var", "flags": ["is_initialized_in_class", "is_ready"], "fullname": null, "name": "fetch", "type": {".class": "CallableType", "arg_kinds": [0, 0, 1, 1], "arg_names": ["self", "count", "with_ties", "percent"], "arg_types": ["sqlalchemy.sql.selectable.GenerativeSelect", {".class": "TypeAliasType", "args": [], "type_ref": "sqlalchemy.sql._typing._LimitOffsetType"}, "builtins.bool", "builtins.bool"], "bound_args": [], "def_extras": {"first_arg": "self"}, "fallback": "builtins.function", "implicit": false, "is_ellipsis_args": false, "name": "fetch of GenerativeSelect", "ret_type": {".class": "AnyType", "missing_import_name": "sqlalchemy.util.typing.Self", "source_any": null, "type_of_any": 3}, "variables": []}}}}, "get_label_style": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "FuncDef", "arg_kinds": [0], "arg_names": ["self"], "flags": [], "fullname": "sqlalchemy.sql.selectable.GenerativeSelect.get_label_style", "name": "get_label_style", "type": {".class": "CallableType", "arg_kinds": [0], "arg_names": ["self"], "arg_types": ["sqlalchemy.sql.selectable.GenerativeSelect"], "bound_args": [], "def_extras": {"first_arg": "self"}, "fallback": "builtins.function", "implicit": false, "is_ellipsis_args": false, "name": "get_label_style of GenerativeSelect", "ret_type": "sqlalchemy.sql.selectable.SelectLabelStyle", "variables": []}}}, "group_by": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "Decorator", "func": {".class": "FuncDef", "arg_kinds": [0, 1, 2], "arg_names": ["self", "__first", "clauses"], "flags": ["is_decorated"], "fullname": "sqlalchemy.sql.selectable.GenerativeSelect.group_by", "name": "group_by", "type": {".class": "CallableType", "arg_kinds": [0, 1, 2], "arg_names": ["self", null, "clauses"], "arg_types": ["sqlalchemy.sql.selectable.GenerativeSelect", {".class": "UnionType", "items": [{".class": "NoneType"}, {".class": "LiteralType", "fallback": "sqlalchemy.sql.base._NoArg", "value": "NO_ARG"}, {".class": "TypeAliasType", "args": [{".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 2}], "type_ref": "sqlalchemy.sql._typing._ColumnExpressionOrStrLabelArgument"}]}, {".class": "TypeAliasType", "args": [{".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 2}], "type_ref": "sqlalchemy.sql._typing._ColumnExpressionOrStrLabelArgument"}], "bound_args": [], "def_extras": {"first_arg": "self"}, "fallback": "builtins.function", "implicit": false, "is_ellipsis_args": false, "name": "group_by of GenerativeSelect", "ret_type": {".class": "AnyType", "missing_import_name": "sqlalchemy.util.typing.Self", "source_any": null, "type_of_any": 3}, "variables": []}}, "is_overload": false, "var": {".class": "Var", "flags": ["is_initialized_in_class", "is_ready"], "fullname": null, "name": "group_by", "type": {".class": "CallableType", "arg_kinds": [0, 1, 2], "arg_names": ["self", null, "clauses"], "arg_types": ["sqlalchemy.sql.selectable.GenerativeSelect", {".class": "UnionType", "items": [{".class": "NoneType"}, {".class": "LiteralType", "fallback": "sqlalchemy.sql.base._NoArg", "value": "NO_ARG"}, {".class": "TypeAliasType", "args": [{".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 2}], "type_ref": "sqlalchemy.sql._typing._ColumnExpressionOrStrLabelArgument"}]}, {".class": "TypeAliasType", "args": [{".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 2}], "type_ref": "sqlalchemy.sql._typing._ColumnExpressionOrStrLabelArgument"}], "bound_args": [], "def_extras": {"first_arg": "self"}, "fallback": "builtins.function", "implicit": false, "is_ellipsis_args": false, "name": "group_by of GenerativeSelect", "ret_type": {".class": "AnyType", "missing_import_name": "sqlalchemy.util.typing.Self", "source_any": null, "type_of_any": 3}, "variables": []}}}}, "limit": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "Decorator", "func": {".class": "FuncDef", "arg_kinds": [0, 0], "arg_names": ["self", "limit"], "flags": ["is_decorated"], "fullname": "sqlalchemy.sql.selectable.GenerativeSelect.limit", "name": "limit", "type": {".class": "CallableType", "arg_kinds": [0, 0], "arg_names": ["self", "limit"], "arg_types": ["sqlalchemy.sql.selectable.GenerativeSelect", {".class": "TypeAliasType", "args": [], "type_ref": "sqlalchemy.sql._typing._LimitOffsetType"}], "bound_args": [], "def_extras": {"first_arg": "self"}, "fallback": "builtins.function", "implicit": false, "is_ellipsis_args": false, "name": "limit of GenerativeSelect", "ret_type": {".class": "AnyType", "missing_import_name": "sqlalchemy.util.typing.Self", "source_any": null, "type_of_any": 3}, "variables": []}}, "is_overload": false, "var": {".class": "Var", "flags": ["is_initialized_in_class", "is_ready"], "fullname": null, "name": "limit", "type": {".class": "CallableType", "arg_kinds": [0, 0], "arg_names": ["self", "limit"], "arg_types": ["sqlalchemy.sql.selectable.GenerativeSelect", {".class": "TypeAliasType", "args": [], "type_ref": "sqlalchemy.sql._typing._LimitOffsetType"}], "bound_args": [], "def_extras": {"first_arg": "self"}, "fallback": "builtins.function", "implicit": false, "is_ellipsis_args": false, "name": "limit of GenerativeSelect", "ret_type": {".class": "AnyType", "missing_import_name": "sqlalchemy.util.typing.Self", "source_any": null, "type_of_any": 3}, "variables": []}}}}, "offset": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "Decorator", "func": {".class": "FuncDef", "arg_kinds": [0, 0], "arg_names": ["self", "offset"], "flags": ["is_decorated"], "fullname": "sqlalchemy.sql.selectable.GenerativeSelect.offset", "name": "offset", "type": {".class": "CallableType", "arg_kinds": [0, 0], "arg_names": ["self", "offset"], "arg_types": ["sqlalchemy.sql.selectable.GenerativeSelect", {".class": "TypeAliasType", "args": [], "type_ref": "sqlalchemy.sql._typing._LimitOffsetType"}], "bound_args": [], "def_extras": {"first_arg": "self"}, "fallback": "builtins.function", "implicit": false, "is_ellipsis_args": false, "name": "offset of GenerativeSelect", "ret_type": {".class": "AnyType", "missing_import_name": "sqlalchemy.util.typing.Self", "source_any": null, "type_of_any": 3}, "variables": []}}, "is_overload": false, "var": {".class": "Var", "flags": ["is_initialized_in_class", "is_ready"], "fullname": null, "name": "offset", "type": {".class": "CallableType", "arg_kinds": [0, 0], "arg_names": ["self", "offset"], "arg_types": ["sqlalchemy.sql.selectable.GenerativeSelect", {".class": "TypeAliasType", "args": [], "type_ref": "sqlalchemy.sql._typing._LimitOffsetType"}], "bound_args": [], "def_extras": {"first_arg": "self"}, "fallback": "builtins.function", "implicit": false, "is_ellipsis_args": false, "name": "offset of GenerativeSelect", "ret_type": {".class": "AnyType", "missing_import_name": "sqlalchemy.util.typing.Self", "source_any": null, "type_of_any": 3}, "variables": []}}}}, "order_by": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "Decorator", "func": {".class": "FuncDef", "arg_kinds": [0, 1, 2], "arg_names": ["self", "__first", "clauses"], "flags": ["is_decorated"], "fullname": "sqlalchemy.sql.selectable.GenerativeSelect.order_by", "name": "order_by", "type": {".class": "CallableType", "arg_kinds": [0, 1, 2], "arg_names": ["self", null, "clauses"], "arg_types": ["sqlalchemy.sql.selectable.GenerativeSelect", {".class": "UnionType", "items": [{".class": "NoneType"}, {".class": "LiteralType", "fallback": "sqlalchemy.sql.base._NoArg", "value": "NO_ARG"}, {".class": "TypeAliasType", "args": [{".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 2}], "type_ref": "sqlalchemy.sql._typing._ColumnExpressionOrStrLabelArgument"}]}, {".class": "TypeAliasType", "args": [{".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 2}], "type_ref": "sqlalchemy.sql._typing._ColumnExpressionOrStrLabelArgument"}], "bound_args": [], "def_extras": {"first_arg": "self"}, "fallback": "builtins.function", "implicit": false, "is_ellipsis_args": false, "name": "order_by of GenerativeSelect", "ret_type": {".class": "AnyType", "missing_import_name": "sqlalchemy.util.typing.Self", "source_any": null, "type_of_any": 3}, "variables": []}}, "is_overload": false, "var": {".class": "Var", "flags": ["is_initialized_in_class", "is_ready"], "fullname": null, "name": "order_by", "type": {".class": "CallableType", "arg_kinds": [0, 1, 2], "arg_names": ["self", null, "clauses"], "arg_types": ["sqlalchemy.sql.selectable.GenerativeSelect", {".class": "UnionType", "items": [{".class": "NoneType"}, {".class": "LiteralType", "fallback": "sqlalchemy.sql.base._NoArg", "value": "NO_ARG"}, {".class": "TypeAliasType", "args": [{".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 2}], "type_ref": "sqlalchemy.sql._typing._ColumnExpressionOrStrLabelArgument"}]}, {".class": "TypeAliasType", "args": [{".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 2}], "type_ref": "sqlalchemy.sql._typing._ColumnExpressionOrStrLabelArgument"}], "bound_args": [], "def_extras": {"first_arg": "self"}, "fallback": "builtins.function", "implicit": false, "is_ellipsis_args": false, "name": "order_by of GenerativeSelect", "ret_type": {".class": "AnyType", "missing_import_name": "sqlalchemy.util.typing.Self", "source_any": null, "type_of_any": 3}, "variables": []}}}}, "set_label_style": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "FuncDef", "arg_kinds": [0, 0], "arg_names": ["self", "style"], "flags": [], "fullname": "sqlalchemy.sql.selectable.GenerativeSelect.set_label_style", "name": "set_label_style", "type": {".class": "CallableType", "arg_kinds": [0, 0], "arg_names": ["self", "style"], "arg_types": ["sqlalchemy.sql.selectable.GenerativeSelect", "sqlalchemy.sql.selectable.SelectLabelStyle"], "bound_args": [], "def_extras": {"first_arg": "self"}, "fallback": "builtins.function", "implicit": false, "is_ellipsis_args": false, "name": "set_label_style of GenerativeSelect", "ret_type": {".class": "AnyType", "missing_import_name": "sqlalchemy.util.typing.Self", "source_any": null, "type_of_any": 3}, "variables": []}}}, "slice": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "Decorator", "func": {".class": "FuncDef", "arg_kinds": [0, 0, 0], "arg_names": ["self", "start", "stop"], "flags": ["is_decorated"], "fullname": "sqlalchemy.sql.selectable.GenerativeSelect.slice", "name": "slice", "type": {".class": "CallableType", "arg_kinds": [0, 0, 0], "arg_names": ["self", "start", "stop"], "arg_types": ["sqlalchemy.sql.selectable.GenerativeSelect", "builtins.int", "builtins.int"], "bound_args": [], "def_extras": {"first_arg": "self"}, "fallback": "builtins.function", "implicit": false, "is_ellipsis_args": false, "name": "slice of GenerativeSelect", "ret_type": {".class": "AnyType", "missing_import_name": "sqlalchemy.util.typing.Self", "source_any": null, "type_of_any": 3}, "variables": []}}, "is_overload": false, "var": {".class": "Var", "flags": ["is_initialized_in_class", "is_ready"], "fullname": null, "name": "slice", "type": {".class": "CallableType", "arg_kinds": [0, 0, 0], "arg_names": ["self", "start", "stop"], "arg_types": ["sqlalchemy.sql.selectable.GenerativeSelect", "builtins.int", "builtins.int"], "bound_args": [], "def_extras": {"first_arg": "self"}, "fallback": "builtins.function", "implicit": false, "is_ellipsis_args": false, "name": "slice of GenerativeSelect", "ret_type": {".class": "AnyType", "missing_import_name": "sqlalchemy.util.typing.Self", "source_any": null, "type_of_any": 3}, "variables": []}}}}, "with_for_update": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "Decorator", "func": {".class": "FuncDef", "arg_kinds": [0, 5, 5, 5, 5, 5], "arg_names": ["self", "nowait", "read", "of", "skip_locked", "key_share"], "flags": ["is_decorated"], "fullname": "sqlalchemy.sql.selectable.GenerativeSelect.with_for_update", "name": "with_for_update", "type": {".class": "CallableType", "arg_kinds": [0, 5, 5, 5, 5, 5], "arg_names": ["self", "nowait", "read", "of", "skip_locked", "key_share"], "arg_types": ["sqlalchemy.sql.selectable.GenerativeSelect", "builtins.bool", "builtins.bool", {".class": "UnionType", "items": [{".class": "Instance", "args": [{".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 6}], "type_ref": "sqlalchemy.sql.elements.ColumnElement"}, "sqlalchemy.sql._typing._HasClauseElement", {".class": "Instance", "args": [{".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 6}], "type_ref": "sqlalchemy.sql.elements.SQLCoreOperations"}, {".class": "Instance", "args": [{".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 6}], "type_ref": "sqlalchemy.sql.roles.ExpressionElementRole"}, {".class": "CallableType", "arg_kinds": [], "arg_names": [], "arg_types": [], "bound_args": [], "def_extras": {}, "fallback": "builtins.function", "implicit": false, "is_ellipsis_args": false, "name": null, "ret_type": {".class": "Instance", "args": [{".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 6}], "type_ref": "sqlalchemy.sql.elements.ColumnElement"}, "variables": []}, "sqlalchemy.sql.lambdas.LambdaElement", "sqlalchemy.sql.roles.FromClauseRole", {".class": "TypeType", "item": {".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 6}}, {".class": "Instance", "args": ["sqlalchemy.sql._typing._HasClauseElement"], "type_ref": "sqlalchemy.inspection.Inspectable"}, "sqlalchemy.sql._typing._HasClauseElement", {".class": "Instance", "args": [{".class": "TypeAliasType", "args": [{".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 6}], "type_ref": "sqlalchemy.sql._typing._ColumnExpressionArgument"}], "type_ref": "typing.Sequence"}, {".class": "NoneType"}]}, "builtins.bool", "builtins.bool"], "bound_args": [], "def_extras": {"first_arg": "self"}, "fallback": "builtins.function", "implicit": false, "is_ellipsis_args": false, "name": "with_for_update of GenerativeSelect", "ret_type": {".class": "AnyType", "missing_import_name": "sqlalchemy.util.typing.Self", "source_any": null, "type_of_any": 3}, "variables": []}}, "is_overload": false, "var": {".class": "Var", "flags": ["is_initialized_in_class", "is_ready"], "fullname": null, "name": "with_for_update", "type": {".class": "CallableType", "arg_kinds": [0, 5, 5, 5, 5, 5], "arg_names": ["self", "nowait", "read", "of", "skip_locked", "key_share"], "arg_types": ["sqlalchemy.sql.selectable.GenerativeSelect", "builtins.bool", "builtins.bool", {".class": "UnionType", "items": [{".class": "Instance", "args": [{".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 6}], "type_ref": "sqlalchemy.sql.elements.ColumnElement"}, "sqlalchemy.sql._typing._HasClauseElement", {".class": "Instance", "args": [{".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 6}], "type_ref": "sqlalchemy.sql.elements.SQLCoreOperations"}, {".class": "Instance", "args": [{".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 6}], "type_ref": "sqlalchemy.sql.roles.ExpressionElementRole"}, {".class": "CallableType", "arg_kinds": [], "arg_names": [], "arg_types": [], "bound_args": [], "def_extras": {}, "fallback": "builtins.function", "implicit": false, "is_ellipsis_args": false, "name": null, "ret_type": {".class": "Instance", "args": [{".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 6}], "type_ref": "sqlalchemy.sql.elements.ColumnElement"}, "variables": []}, "sqlalchemy.sql.lambdas.LambdaElement", "sqlalchemy.sql.roles.FromClauseRole", {".class": "TypeType", "item": {".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 6}}, {".class": "Instance", "args": ["sqlalchemy.sql._typing._HasClauseElement"], "type_ref": "sqlalchemy.inspection.Inspectable"}, "sqlalchemy.sql._typing._HasClauseElement", {".class": "Instance", "args": [{".class": "TypeAliasType", "args": [{".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 6}], "type_ref": "sqlalchemy.sql._typing._ColumnExpressionArgument"}], "type_ref": "typing.Sequence"}, {".class": "NoneType"}]}, "builtins.bool", "builtins.bool"], "bound_args": [], "def_extras": {"first_arg": "self"}, "fallback": "builtins.function", "implicit": false, "is_ellipsis_args": false, "name": "with_for_update of GenerativeSelect", "ret_type": {".class": "AnyType", "missing_import_name": "sqlalchemy.util.typing.Self", "source_any": null, "type_of_any": 3}, "variables": []}}}}}, "tuple_type": null, "type_vars": [], "typeddict_type": null}}, "Generic": {".class": "SymbolTableNode", "cross_ref": "typing.Generic", "kind": "Gdef"}, "GroupedElement": {".class": "SymbolTableNode", "cross_ref": "sqlalchemy.sql.elements.GroupedElement", "kind": "Gdef"}, "HasCTE": {".class": "SymbolTableNode", "kind": "Gdef", "node": {".class": "TypeInfo", "_promote": null, "abstract_attributes": [], "bases": ["sqlalchemy.sql.roles.HasCTERole", "sqlalchemy.sql.selectable.SelectsRows"], "declared_metaclass": null, "defn": {".class": "ClassDef", "fullname": "sqlalchemy.sql.selectable.HasCTE", "name": "HasCTE", "type_vars": []}, "flags": [], "fullname": "sqlalchemy.sql.selectable.HasCTE", "metaclass_type": null, "metadata": {}, "module_name": "sqlalchemy.sql.selectable", "mro": ["sqlalchemy.sql.selectable.HasCTE", "sqlalchemy.sql.roles.HasCTERole", "sqlalchemy.sql.selectable.SelectsRows", "sqlalchemy.sql.selectable.ReturnsRows", "sqlalchemy.sql.roles.ReturnsRowsRole", "sqlalchemy.sql.roles.SQLRole", "sqlalchemy.sql.elements.DQLDMLClauseElement", "sqlalchemy.sql.elements.ClauseElement", "sqlalchemy.sql.annotation.SupportsWrappingAnnotations", "sqlalchemy.sql.annotation.SupportsAnnotations", "sqlalchemy.sql.cache_key.MemoizedHasCacheKey", "sqlalchemy.sql.cache_key.HasCacheKey", "sqlalchemy.util.langhelpers.HasMemoized", "sqlalchemy.sql.traversals.HasCopyInternals", "sqlalchemy.sql.visitors.ExternallyTraversible", "sqlalchemy.sql.visitors.HasTraverseInternals", "sqlalchemy.sql.elements.CompilerElement", "sqlalchemy.sql.visitors.Visitable", "builtins.object"], "names": {".class": "SymbolTable", "_has_ctes_traverse_internals": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "Var", "flags": ["is_initialized_in_class", "is_ready"], "fullname": "sqlalchemy.sql.selectable.HasCTE._has_ctes_traverse_internals", "name": "_has_ctes_traverse_internals", "type": {".class": "TypeAliasType", "args": [], "type_ref": "sqlalchemy.sql.visitors._TraverseInternalsType"}}}, "_independent_ctes": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "Var", "flags": ["is_initialized_in_class", "is_ready"], "fullname": "sqlalchemy.sql.selectable.HasCTE._independent_ctes", "name": "_independent_ctes", "type": {".class": "Instance", "args": ["sqlalchemy.sql.selectable.CTE"], "type_ref": "builtins.tuple"}}}, "_independent_ctes_opts": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "Var", "flags": ["is_initialized_in_class", "is_ready"], "fullname": "sqlalchemy.sql.selectable.HasCTE._independent_ctes_opts", "name": "_independent_ctes_opts", "type": {".class": "Instance", "args": [{".class": "TupleType", "implicit": false, "items": ["builtins.bool"], "partial_fallback": "sqlalchemy.sql.selectable._CTEOpts"}], "type_ref": "builtins.tuple"}}}, "add_cte": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "Decorator", "func": {".class": "FuncDef", "arg_kinds": [0, 2, 5], "arg_names": ["self", "ctes", "nest_here"], "flags": ["is_decorated"], "fullname": "sqlalchemy.sql.selectable.HasCTE.add_cte", "name": "add_cte", "type": {".class": "CallableType", "arg_kinds": [0, 2, 5], "arg_names": ["self", "ctes", "nest_here"], "arg_types": ["sqlalchemy.sql.selectable.HasCTE", "sqlalchemy.sql.selectable.CTE", "builtins.bool"], "bound_args": [], "def_extras": {"first_arg": "self"}, "fallback": "builtins.function", "implicit": false, "is_ellipsis_args": false, "name": "add_cte of HasCTE", "ret_type": {".class": "AnyType", "missing_import_name": "sqlalchemy.util.typing.Self", "source_any": null, "type_of_any": 3}, "variables": []}}, "is_overload": false, "var": {".class": "Var", "flags": ["is_initialized_in_class", "is_ready"], "fullname": null, "name": "add_cte", "type": {".class": "CallableType", "arg_kinds": [0, 2, 5], "arg_names": ["self", "ctes", "nest_here"], "arg_types": ["sqlalchemy.sql.selectable.HasCTE", "sqlalchemy.sql.selectable.CTE", "builtins.bool"], "bound_args": [], "def_extras": {"first_arg": "self"}, "fallback": "builtins.function", "implicit": false, "is_ellipsis_args": false, "name": "add_cte of HasCTE", "ret_type": {".class": "AnyType", "missing_import_name": "sqlalchemy.util.typing.Self", "source_any": null, "type_of_any": 3}, "variables": []}}}}, "cte": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "FuncDef", "arg_kinds": [0, 1, 1, 1], "arg_names": ["self", "name", "recursive", "nesting"], "flags": [], "fullname": "sqlalchemy.sql.selectable.HasCTE.cte", "name": "cte", "type": {".class": "CallableType", "arg_kinds": [0, 1, 1, 1], "arg_names": ["self", "name", "recursive", "nesting"], "arg_types": ["sqlalchemy.sql.selectable.HasCTE", {".class": "UnionType", "items": ["builtins.str", {".class": "NoneType"}]}, "builtins.bool", "builtins.bool"], "bound_args": [], "def_extras": {"first_arg": "self"}, "fallback": "builtins.function", "implicit": false, "is_ellipsis_args": false, "name": "cte of HasCTE", "ret_type": "sqlalchemy.sql.selectable.CTE", "variables": []}}}}, "tuple_type": null, "type_vars": [], "typeddict_type": null}}, "HasCompileState": {".class": "SymbolTableNode", "cross_ref": "sqlalchemy.sql.base.HasCompileState", "kind": "Gdef"}, "HasHints": {".class": "SymbolTableNode", "kind": "Gdef", "node": {".class": "TypeInfo", "_promote": null, "abstract_attributes": [], "bases": ["builtins.object"], "declared_metaclass": null, "defn": {".class": "ClassDef", "fullname": "sqlalchemy.sql.selectable.HasHints", "name": "HasHints", "type_vars": []}, "flags": [], "fullname": "sqlalchemy.sql.selectable.HasHints", "metaclass_type": null, "metadata": {}, "module_name": "sqlalchemy.sql.selectable", "mro": ["sqlalchemy.sql.selectable.HasHints", "builtins.object"], "names": {".class": "SymbolTable", "_has_hints_traverse_internals": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "Var", "flags": ["is_initialized_in_class", "is_ready"], "fullname": "sqlalchemy.sql.selectable.HasHints._has_hints_traverse_internals", "name": "_has_hints_traverse_internals", "type": {".class": "TypeAliasType", "args": [], "type_ref": "sqlalchemy.sql.visitors._TraverseInternalsType"}}}, "_hints": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "Var", "flags": ["is_initialized_in_class", "is_ready"], "fullname": "sqlalchemy.sql.selectable.HasHints._hints", "name": "_hints", "type": {".class": "Instance", "args": [{".class": "TupleType", "implicit": false, "items": ["sqlalchemy.sql.selectable.FromClause", "builtins.str"], "partial_fallback": {".class": "Instance", "args": [{".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 6}], "type_ref": "builtins.tuple"}}, "builtins.str"], "type_ref": "sqlalchemy.util._py_collections.immutabledict"}}}, "_statement_hints": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "Var", "flags": ["is_initialized_in_class", "is_ready"], "fullname": "sqlalchemy.sql.selectable.HasHints._statement_hints", "name": "_statement_hints", "type": {".class": "Instance", "args": [{".class": "TupleType", "implicit": false, "items": ["builtins.str", "builtins.str"], "partial_fallback": {".class": "Instance", "args": [{".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 6}], "type_ref": "builtins.tuple"}}], "type_ref": "builtins.tuple"}}}, "_with_hint": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "FuncDef", "arg_kinds": [0, 0, 0, 0], "arg_names": ["self", "selectable", "text", "dialect_name"], "flags": [], "fullname": "sqlalchemy.sql.selectable.HasHints._with_hint", "name": "_with_hint", "type": {".class": "CallableType", "arg_kinds": [0, 0, 0, 0], "arg_names": ["self", "selectable", "text", "dialect_name"], "arg_types": ["sqlalchemy.sql.selectable.HasHints", {".class": "UnionType", "items": ["sqlalchemy.sql.roles.FromClauseRole", {".class": "TypeType", "item": {".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 6}}, {".class": "Instance", "args": ["sqlalchemy.sql._typing._HasClauseElement"], "type_ref": "sqlalchemy.inspection.Inspectable"}, "sqlalchemy.sql._typing._HasClauseElement", {".class": "NoneType"}]}, "builtins.str", "builtins.str"], "bound_args": [], "def_extras": {"first_arg": "self"}, "fallback": "builtins.function", "implicit": false, "is_ellipsis_args": false, "name": "_with_hint of HasHints", "ret_type": {".class": "AnyType", "missing_import_name": "sqlalchemy.util.typing.Self", "source_any": null, "type_of_any": 3}, "variables": []}}}, "with_hint": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "Decorator", "func": {".class": "FuncDef", "arg_kinds": [0, 0, 0, 1], "arg_names": ["self", "selectable", "text", "dialect_name"], "flags": ["is_decorated"], "fullname": "sqlalchemy.sql.selectable.HasHints.with_hint", "name": "with_hint", "type": {".class": "CallableType", "arg_kinds": [0, 0, 0, 1], "arg_names": ["self", "selectable", "text", "dialect_name"], "arg_types": ["sqlalchemy.sql.selectable.HasHints", {".class": "TypeAliasType", "args": [], "type_ref": "sqlalchemy.sql._typing._FromClauseArgument"}, "builtins.str", "builtins.str"], "bound_args": [], "def_extras": {"first_arg": "self"}, "fallback": "builtins.function", "implicit": false, "is_ellipsis_args": false, "name": "with_hint of HasHints", "ret_type": {".class": "AnyType", "missing_import_name": "sqlalchemy.util.typing.Self", "source_any": null, "type_of_any": 3}, "variables": []}}, "is_overload": false, "var": {".class": "Var", "flags": ["is_initialized_in_class", "is_ready"], "fullname": null, "name": "with_hint", "type": {".class": "CallableType", "arg_kinds": [0, 0, 0, 1], "arg_names": ["self", "selectable", "text", "dialect_name"], "arg_types": ["sqlalchemy.sql.selectable.HasHints", {".class": "TypeAliasType", "args": [], "type_ref": "sqlalchemy.sql._typing._FromClauseArgument"}, "builtins.str", "builtins.str"], "bound_args": [], "def_extras": {"first_arg": "self"}, "fallback": "builtins.function", "implicit": false, "is_ellipsis_args": false, "name": "with_hint of HasHints", "ret_type": {".class": "AnyType", "missing_import_name": "sqlalchemy.util.typing.Self", "source_any": null, "type_of_any": 3}, "variables": []}}}}, "with_statement_hint": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "FuncDef", "arg_kinds": [0, 0, 1], "arg_names": ["self", "text", "dialect_name"], "flags": [], "fullname": "sqlalchemy.sql.selectable.HasHints.with_statement_hint", "name": "with_statement_hint", "type": {".class": "CallableType", "arg_kinds": [0, 0, 1], "arg_names": ["self", "text", "dialect_name"], "arg_types": ["sqlalchemy.sql.selectable.HasHints", "builtins.str", "builtins.str"], "bound_args": [], "def_extras": {"first_arg": "self"}, "fallback": "builtins.function", "implicit": false, "is_ellipsis_args": false, "name": "with_statement_hint of HasHints", "ret_type": {".class": "AnyType", "missing_import_name": "sqlalchemy.util.typing.Self", "source_any": null, "type_of_any": 3}, "variables": []}}}}, "tuple_type": null, "type_vars": [], "typeddict_type": null}}, "HasMemoized": {".class": "SymbolTableNode", "cross_ref": "sqlalchemy.util.langhelpers.HasMemoized", "kind": "Gdef"}, "HasMemoized_ro_memoized_attribute": {".class": "SymbolTableNode", "cross_ref": "sqlalchemy.util.langhelpers.HasMemoized_ro_memoized_attribute", "kind": "Gdef"}, "HasPrefixes": {".class": "SymbolTableNode", "kind": "Gdef", "node": {".class": "TypeInfo", "_promote": null, "abstract_attributes": [], "bases": ["builtins.object"], "declared_metaclass": null, "defn": {".class": "ClassDef", "fullname": "sqlalchemy.sql.selectable.HasPrefixes", "name": "HasPrefixes", "type_vars": []}, "flags": [], "fullname": "sqlalchemy.sql.selectable.HasPrefixes", "metaclass_type": null, "metadata": {}, "module_name": "sqlalchemy.sql.selectable", "mro": ["sqlalchemy.sql.selectable.HasPrefixes", "builtins.object"], "names": {".class": "SymbolTable", "_has_prefixes_traverse_internals": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "Var", "flags": ["is_initialized_in_class", "is_ready"], "fullname": "sqlalchemy.sql.selectable.HasPrefixes._has_prefixes_traverse_internals", "name": "_has_prefixes_traverse_internals", "type": {".class": "TypeAliasType", "args": [], "type_ref": "sqlalchemy.sql.visitors._TraverseInternalsType"}}}, "_prefixes": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "Var", "flags": ["is_initialized_in_class", "is_ready"], "fullname": "sqlalchemy.sql.selectable.HasPrefixes._prefixes", "name": "_prefixes", "type": {".class": "Instance", "args": [{".class": "TupleType", "implicit": false, "items": ["sqlalchemy.sql.elements.DQLDMLClauseElement", "builtins.str"], "partial_fallback": {".class": "Instance", "args": [{".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 6}], "type_ref": "builtins.tuple"}}], "type_ref": "builtins.tuple"}}}, "prefix_with": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "Decorator", "func": {".class": "FuncDef", "arg_kinds": [0, 2, 5], "arg_names": ["self", "prefixes", "dialect"], "flags": ["is_decorated"], "fullname": "sqlalchemy.sql.selectable.HasPrefixes.prefix_with", "name": "prefix_with", "type": {".class": "CallableType", "arg_kinds": [0, 2, 5], "arg_names": ["self", "prefixes", "dialect"], "arg_types": ["sqlalchemy.sql.selectable.HasPrefixes", {".class": "TypeAliasType", "args": [{".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 2}], "type_ref": "sqlalchemy.sql._typing._TextCoercedExpressionArgument"}, "builtins.str"], "bound_args": [], "def_extras": {"first_arg": "self"}, "fallback": "builtins.function", "implicit": false, "is_ellipsis_args": false, "name": "prefix_with of HasPrefixes", "ret_type": {".class": "AnyType", "missing_import_name": "sqlalchemy.util.typing.Self", "source_any": null, "type_of_any": 3}, "variables": []}}, "is_overload": false, "var": {".class": "Var", "flags": ["is_initialized_in_class", "is_ready"], "fullname": null, "name": "prefix_with", "type": {".class": "CallableType", "arg_kinds": [0, 2, 5], "arg_names": ["self", "prefixes", "dialect"], "arg_types": ["sqlalchemy.sql.selectable.HasPrefixes", {".class": "TypeAliasType", "args": [{".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 2}], "type_ref": "sqlalchemy.sql._typing._TextCoercedExpressionArgument"}, "builtins.str"], "bound_args": [], "def_extras": {"first_arg": "self"}, "fallback": "builtins.function", "implicit": false, "is_ellipsis_args": false, "name": "prefix_with of HasPrefixes", "ret_type": {".class": "AnyType", "missing_import_name": "sqlalchemy.util.typing.Self", "source_any": null, "type_of_any": 3}, "variables": []}}}}}, "tuple_type": null, "type_vars": [], "typeddict_type": null}}, "HasSuffixes": {".class": "SymbolTableNode", "kind": "Gdef", "node": {".class": "TypeInfo", "_promote": null, "abstract_attributes": [], "bases": ["builtins.object"], "declared_metaclass": null, "defn": {".class": "ClassDef", "fullname": "sqlalchemy.sql.selectable.HasSuffixes", "name": "HasSuffixes", "type_vars": []}, "flags": [], "fullname": "sqlalchemy.sql.selectable.HasSuffixes", "metaclass_type": null, "metadata": {}, "module_name": "sqlalchemy.sql.selectable", "mro": ["sqlalchemy.sql.selectable.HasSuffixes", "builtins.object"], "names": {".class": "SymbolTable", "_has_suffixes_traverse_internals": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "Var", "flags": ["is_initialized_in_class", "is_ready"], "fullname": "sqlalchemy.sql.selectable.HasSuffixes._has_suffixes_traverse_internals", "name": "_has_suffixes_traverse_internals", "type": {".class": "TypeAliasType", "args": [], "type_ref": "sqlalchemy.sql.visitors._TraverseInternalsType"}}}, "_suffixes": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "Var", "flags": ["is_initialized_in_class", "is_ready"], "fullname": "sqlalchemy.sql.selectable.HasSuffixes._suffixes", "name": "_suffixes", "type": {".class": "Instance", "args": [{".class": "TupleType", "implicit": false, "items": ["sqlalchemy.sql.elements.DQLDMLClauseElement", "builtins.str"], "partial_fallback": {".class": "Instance", "args": [{".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 6}], "type_ref": "builtins.tuple"}}], "type_ref": "builtins.tuple"}}}, "suffix_with": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "Decorator", "func": {".class": "FuncDef", "arg_kinds": [0, 2, 5], "arg_names": ["self", "suffixes", "dialect"], "flags": ["is_decorated"], "fullname": "sqlalchemy.sql.selectable.HasSuffixes.suffix_with", "name": "suffix_with", "type": {".class": "CallableType", "arg_kinds": [0, 2, 5], "arg_names": ["self", "suffixes", "dialect"], "arg_types": ["sqlalchemy.sql.selectable.HasSuffixes", {".class": "TypeAliasType", "args": [{".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 2}], "type_ref": "sqlalchemy.sql._typing._TextCoercedExpressionArgument"}, "builtins.str"], "bound_args": [], "def_extras": {"first_arg": "self"}, "fallback": "builtins.function", "implicit": false, "is_ellipsis_args": false, "name": "suffix_with of HasSuffixes", "ret_type": {".class": "AnyType", "missing_import_name": "sqlalchemy.util.typing.Self", "source_any": null, "type_of_any": 3}, "variables": []}}, "is_overload": false, "var": {".class": "Var", "flags": ["is_initialized_in_class", "is_ready"], "fullname": null, "name": "suffix_with", "type": {".class": "CallableType", "arg_kinds": [0, 2, 5], "arg_names": ["self", "suffixes", "dialect"], "arg_types": ["sqlalchemy.sql.selectable.HasSuffixes", {".class": "TypeAliasType", "args": [{".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 2}], "type_ref": "sqlalchemy.sql._typing._TextCoercedExpressionArgument"}, "builtins.str"], "bound_args": [], "def_extras": {"first_arg": "self"}, "fallback": "builtins.function", "implicit": false, "is_ellipsis_args": false, "name": "suffix_with of HasSuffixes", "ret_type": {".class": "AnyType", "missing_import_name": "sqlalchemy.util.typing.Self", "source_any": null, "type_of_any": 3}, "variables": []}}}}}, "tuple_type": null, "type_vars": [], "typeddict_type": null}}, "Immutable": {".class": "SymbolTableNode", "cross_ref": "sqlalchemy.sql.base.Immutable", "kind": "Gdef"}, "InternalTraversal": {".class": "SymbolTableNode", "cross_ref": "sqlalchemy.sql.visitors.InternalTraversal", "kind": "Gdef"}, "Iterable": {".class": "SymbolTableNode", "cross_ref": "typing.Iterable", "kind": "Gdef"}, "Iterator": {".class": "SymbolTableNode", "cross_ref": "typing.Iterator", "kind": "Gdef"}, "Join": {".class": "SymbolTableNode", "kind": "Gdef", "node": {".class": "TypeInfo", "_promote": null, "abstract_attributes": [], "bases": ["sqlalchemy.sql.roles.DMLTableRole", "sqlalchemy.sql.selectable.FromClause"], "declared_metaclass": null, "defn": {".class": "ClassDef", "fullname": "sqlalchemy.sql.selectable.Join", "name": "Join", "type_vars": []}, "flags": [], "fullname": "sqlalchemy.sql.selectable.Join", "metaclass_type": null, "metadata": {}, "module_name": "sqlalchemy.sql.selectable", "mro": ["sqlalchemy.sql.selectable.Join", "sqlalchemy.sql.roles.DMLTableRole", "sqlalchemy.sql.selectable.FromClause", "sqlalchemy.sql.roles.AnonymizedFromClauseRole", "sqlalchemy.sql.roles.StrictFromClauseRole", "sqlalchemy.sql.roles.FromClauseRole", "sqlalchemy.sql.roles.ColumnsClauseRole", "sqlalchemy.sql.roles.JoinTargetRole", "sqlalchemy.sql.roles.AllowsLambdaRole", "sqlalchemy.sql.roles.UsesInspection", "sqlalchemy.sql.roles.ColumnListRole", "sqlalchemy.sql.roles.StructuralRole", "sqlalchemy.sql.selectable.Selectable", "sqlalchemy.sql.selectable.ReturnsRows", "sqlalchemy.sql.roles.ReturnsRowsRole", "sqlalchemy.sql.roles.SQLRole", "sqlalchemy.sql.elements.DQLDMLClauseElement", "sqlalchemy.sql.elements.ClauseElement", "sqlalchemy.sql.annotation.SupportsWrappingAnnotations", "sqlalchemy.sql.annotation.SupportsAnnotations", "sqlalchemy.sql.cache_key.MemoizedHasCacheKey", "sqlalchemy.sql.cache_key.HasCacheKey", "sqlalchemy.util.langhelpers.HasMemoized", "sqlalchemy.sql.traversals.HasCopyInternals", "sqlalchemy.sql.visitors.ExternallyTraversible", "sqlalchemy.sql.visitors.HasTraverseInternals", "sqlalchemy.sql.elements.CompilerElement", "sqlalchemy.sql.visitors.Visitable", "builtins.object"], "names": {".class": "SymbolTable", "__init__": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "FuncDef", "arg_kinds": [0, 0, 0, 1, 1, 1], "arg_names": ["self", "left", "right", "onclause", "isouter", "full"], "flags": [], "fullname": "sqlalchemy.sql.selectable.Join.__init__", "name": "__init__", "type": {".class": "CallableType", "arg_kinds": [0, 0, 0, 1, 1, 1], "arg_names": ["self", "left", "right", "onclause", "isouter", "full"], "arg_types": ["sqlalchemy.sql.selectable.Join", {".class": "TypeAliasType", "args": [], "type_ref": "sqlalchemy.sql._typing._FromClauseArgument"}, {".class": "TypeAliasType", "args": [], "type_ref": "sqlalchemy.sql._typing._FromClauseArgument"}, {".class": "UnionType", "items": [{".class": "Instance", "args": [{".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 6}], "type_ref": "sqlalchemy.sql.elements.ColumnElement"}, "sqlalchemy.sql._typing._HasClauseElement", {".class": "Instance", "args": [{".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 6}], "type_ref": "sqlalchemy.sql.elements.SQLCoreOperations"}, {".class": "Instance", "args": [{".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 6}], "type_ref": "sqlalchemy.sql.roles.ExpressionElementRole"}, {".class": "CallableType", "arg_kinds": [], "arg_names": [], "arg_types": [], "bound_args": [], "def_extras": {}, "fallback": "builtins.function", "implicit": false, "is_ellipsis_args": false, "name": null, "ret_type": {".class": "Instance", "args": [{".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 6}], "type_ref": "sqlalchemy.sql.elements.ColumnElement"}, "variables": []}, "sqlalchemy.sql.lambdas.LambdaElement", "sqlalchemy.sql.roles.OnClauseRole", {".class": "NoneType"}]}, "builtins.bool", "builtins.bool"], "bound_args": [], "def_extras": {"first_arg": "self"}, "fallback": "builtins.function", "implicit": false, "is_ellipsis_args": false, "name": "__init__ of Join", "ret_type": {".class": "NoneType"}, "variables": []}}}, "__visit_name__": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "Var", "flags": ["is_initialized_in_class", "is_ready"], "fullname": "sqlalchemy.sql.selectable.Join.__visit_name__", "name": "__visit_name__", "type": "builtins.str"}}, "_anonymous_fromclause": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "Decorator", "func": {".class": "FuncDef", "arg_kinds": [0, 1, 1], "arg_names": ["self", "name", "flat"], "flags": ["is_decorated"], "fullname": "sqlalchemy.sql.selectable.Join._anonymous_fromclause", "name": "_anonymous_fromclause", "type": {".class": "CallableType", "arg_kinds": [0, 1, 1], "arg_names": ["self", "name", "flat"], "arg_types": ["sqlalchemy.sql.selectable.Join", {".class": "UnionType", "items": ["builtins.str", {".class": "NoneType"}]}, "builtins.bool"], "bound_args": [], "def_extras": {"first_arg": "self"}, "fallback": "builtins.function", "implicit": false, "is_ellipsis_args": false, "name": "_anonymous_fromclause of Join", "ret_type": {".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 2}, "variables": []}}, "is_overload": false, "var": {".class": "Var", "flags": ["is_initialized_in_class", "is_ready"], "fullname": null, "name": "_anonymous_fromclause", "type": {".class": "CallableType", "arg_kinds": [0, 1, 1], "arg_names": ["self", "name", "flat"], "arg_types": ["sqlalchemy.sql.selectable.Join", {".class": "UnionType", "items": ["builtins.str", {".class": "NoneType"}]}, "builtins.bool"], "bound_args": [], "def_extras": {"first_arg": "self"}, "fallback": "builtins.function", "implicit": false, "is_ellipsis_args": false, "name": "_anonymous_fromclause of Join", "ret_type": {".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 2}, "variables": []}}}}, "_can_join": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "Decorator", "func": {".class": "FuncDef", "arg_kinds": [0, 0, 0, 5], "arg_names": ["cls", "left", "right", "consider_as_foreign_keys"], "flags": ["is_class", "is_decorated"], "fullname": "sqlalchemy.sql.selectable.Join._can_join", "name": "_can_join", "type": {".class": "CallableType", "arg_kinds": [0, 0, 0, 5], "arg_names": ["cls", "left", "right", "consider_as_foreign_keys"], "arg_types": [{".class": "TypeType", "item": "sqlalchemy.sql.selectable.Join"}, "sqlalchemy.sql.selectable.FromClause", "sqlalchemy.sql.selectable.FromClause", {".class": "UnionType", "items": [{".class": "Instance", "args": [{".class": "Instance", "args": [{".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 2}], "type_ref": "sqlalchemy.sql.elements.ColumnClause"}], "type_ref": "typing.AbstractSet"}, {".class": "NoneType"}]}], "bound_args": [], "def_extras": {"first_arg": "cls"}, "fallback": "builtins.function", "implicit": false, "is_ellipsis_args": false, "name": "_can_join of Join", "ret_type": "builtins.bool", "variables": []}}, "is_overload": false, "var": {".class": "Var", "flags": ["is_initialized_in_class", "is_classmethod", "is_ready"], "fullname": null, "name": "_can_join", "type": {".class": "CallableType", "arg_kinds": [0, 0, 0, 5], "arg_names": ["cls", "left", "right", "consider_as_foreign_keys"], "arg_types": [{".class": "TypeType", "item": "sqlalchemy.sql.selectable.Join"}, "sqlalchemy.sql.selectable.FromClause", "sqlalchemy.sql.selectable.FromClause", {".class": "UnionType", "items": [{".class": "Instance", "args": [{".class": "Instance", "args": [{".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 2}], "type_ref": "sqlalchemy.sql.elements.ColumnClause"}], "type_ref": "typing.AbstractSet"}, {".class": "NoneType"}]}], "bound_args": [], "def_extras": {"first_arg": "cls"}, "fallback": "builtins.function", "implicit": false, "is_ellipsis_args": false, "name": "_can_join of Join", "ret_type": "builtins.bool", "variables": []}}}}, "_copy_internals": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "FuncDef", "arg_kinds": [0, 1, 4], "arg_names": ["self", "clone", "kw"], "flags": [], "fullname": "sqlalchemy.sql.selectable.Join._copy_internals", "name": "_copy_internals", "type": {".class": "CallableType", "arg_kinds": [0, 1, 4], "arg_names": ["self", "clone", "kw"], "arg_types": ["sqlalchemy.sql.selectable.Join", "sqlalchemy.sql.visitors._CloneCallableType", {".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 2}], "bound_args": [], "def_extras": {"first_arg": "self"}, "fallback": "builtins.function", "implicit": false, "is_ellipsis_args": false, "name": "_copy_internals of Join", "ret_type": {".class": "NoneType"}, "variables": []}}}, "_from_objects": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "Decorator", "func": {".class": "FuncDef", "arg_kinds": [0], "arg_names": ["self"], "flags": ["is_property", "is_decorated"], "fullname": "sqlalchemy.sql.selectable.Join._from_objects", "name": "_from_objects", "type": {".class": "CallableType", "arg_kinds": [0], "arg_names": ["self"], "arg_types": ["sqlalchemy.sql.selectable.Join"], "bound_args": [], "def_extras": {"first_arg": "self"}, "fallback": "builtins.function", "implicit": false, "is_ellipsis_args": false, "name": "_from_objects of Join", "ret_type": {".class": "Instance", "args": ["sqlalchemy.sql.selectable.FromClause"], "type_ref": "builtins.list"}, "variables": []}}, "is_overload": false, "var": {".class": "Var", "flags": ["is_initialized_in_class", "is_property", "is_ready"], "fullname": null, "name": "_from_objects", "type": {".class": "CallableType", "arg_kinds": [0], "arg_names": ["self"], "arg_types": ["sqlalchemy.sql.selectable.Join"], "bound_args": [], "def_extras": {"first_arg": "self"}, "fallback": "builtins.function", "implicit": false, "is_ellipsis_args": false, "name": "_from_objects of Join", "ret_type": {".class": "Instance", "args": ["sqlalchemy.sql.selectable.FromClause"], "type_ref": "builtins.list"}, "variables": []}}}}, "_hide_froms": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "Decorator", "func": {".class": "FuncDef", "arg_kinds": [0], "arg_names": ["self"], "flags": ["is_property", "is_decorated"], "fullname": "sqlalchemy.sql.selectable.Join._hide_froms", "name": "_hide_froms", "type": {".class": "CallableType", "arg_kinds": [0], "arg_names": ["self"], "arg_types": ["sqlalchemy.sql.selectable.Join"], "bound_args": [], "def_extras": {"first_arg": "self"}, "fallback": "builtins.function", "implicit": false, "is_ellipsis_args": false, "name": "_hide_froms of Join", "ret_type": {".class": "Instance", "args": ["sqlalchemy.sql.selectable.FromClause"], "type_ref": "typing.Iterable"}, "variables": []}}, "is_overload": false, "var": {".class": "Var", "flags": ["is_initialized_in_class", "is_property", "is_ready"], "fullname": null, "name": "_hide_froms", "type": {".class": "CallableType", "arg_kinds": [0], "arg_names": ["self"], "arg_types": ["sqlalchemy.sql.selectable.Join"], "bound_args": [], "def_extras": {"first_arg": "self"}, "fallback": "builtins.function", "implicit": false, "is_ellipsis_args": false, "name": "_hide_froms of Join", "ret_type": {".class": "Instance", "args": ["sqlalchemy.sql.selectable.FromClause"], "type_ref": "typing.Iterable"}, "variables": []}}}}, "_is_join": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "Var", "flags": ["is_initialized_in_class"], "fullname": "sqlalchemy.sql.selectable.Join._is_join", "name": "_is_join", "type": "builtins.bool"}}, "_join_condition": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "Decorator", "func": {".class": "FuncDef", "arg_kinds": [0, 0, 0, 5, 5], "arg_names": ["cls", "a", "b", "a_subset", "consider_as_foreign_keys"], "flags": ["is_class", "is_decorated"], "fullname": "sqlalchemy.sql.selectable.Join._join_condition", "name": "_join_condition", "type": {".class": "CallableType", "arg_kinds": [0, 0, 0, 5, 5], "arg_names": ["cls", "a", "b", "a_subset", "consider_as_foreign_keys"], "arg_types": [{".class": "TypeType", "item": "sqlalchemy.sql.selectable.Join"}, "sqlalchemy.sql.selectable.FromClause", "sqlalchemy.sql.selectable.FromClause", {".class": "UnionType", "items": ["sqlalchemy.sql.selectable.FromClause", {".class": "NoneType"}]}, {".class": "UnionType", "items": [{".class": "Instance", "args": [{".class": "Instance", "args": [{".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 2}], "type_ref": "sqlalchemy.sql.elements.ColumnClause"}], "type_ref": "typing.AbstractSet"}, {".class": "NoneType"}]}], "bound_args": [], "def_extras": {"first_arg": "cls"}, "fallback": "builtins.function", "implicit": false, "is_ellipsis_args": false, "name": "_join_condition of Join", "ret_type": {".class": "Instance", "args": ["builtins.bool"], "type_ref": "sqlalchemy.sql.elements.ColumnElement"}, "variables": []}}, "is_overload": false, "var": {".class": "Var", "flags": ["is_initialized_in_class", "is_classmethod", "is_ready"], "fullname": null, "name": "_join_condition", "type": {".class": "CallableType", "arg_kinds": [0, 0, 0, 5, 5], "arg_names": ["cls", "a", "b", "a_subset", "consider_as_foreign_keys"], "arg_types": [{".class": "TypeType", "item": "sqlalchemy.sql.selectable.Join"}, "sqlalchemy.sql.selectable.FromClause", "sqlalchemy.sql.selectable.FromClause", {".class": "UnionType", "items": ["sqlalchemy.sql.selectable.FromClause", {".class": "NoneType"}]}, {".class": "UnionType", "items": [{".class": "Instance", "args": [{".class": "Instance", "args": [{".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 2}], "type_ref": "sqlalchemy.sql.elements.ColumnClause"}], "type_ref": "typing.AbstractSet"}, {".class": "NoneType"}]}], "bound_args": [], "def_extras": {"first_arg": "cls"}, "fallback": "builtins.function", "implicit": false, "is_ellipsis_args": false, "name": "_join_condition of Join", "ret_type": {".class": "Instance", "args": ["builtins.bool"], "type_ref": "sqlalchemy.sql.elements.ColumnElement"}, "variables": []}}}}, "_joincond_scan_left_right": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "Decorator", "func": {".class": "FuncDef", "arg_kinds": [0, 0, 0, 0, 0], "arg_names": ["cls", "a", "a_subset", "b", "consider_as_foreign_keys"], "flags": ["is_class", "is_decorated"], "fullname": "sqlalchemy.sql.selectable.Join._joincond_scan_left_right", "name": "_joincond_scan_left_right", "type": {".class": "CallableType", "arg_kinds": [0, 0, 0, 0, 0], "arg_names": ["cls", "a", "a_subset", "b", "consider_as_foreign_keys"], "arg_types": [{".class": "TypeType", "item": "sqlalchemy.sql.selectable.Join"}, "sqlalchemy.sql.selectable.FromClause", {".class": "UnionType", "items": ["sqlalchemy.sql.selectable.FromClause", {".class": "NoneType"}]}, "sqlalchemy.sql.selectable.FromClause", {".class": "UnionType", "items": [{".class": "Instance", "args": [{".class": "Instance", "args": [{".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 2}], "type_ref": "sqlalchemy.sql.elements.ColumnClause"}], "type_ref": "typing.AbstractSet"}, {".class": "NoneType"}]}], "bound_args": [], "def_extras": {"first_arg": "cls"}, "fallback": "builtins.function", "implicit": false, "is_ellipsis_args": false, "name": "_joincond_scan_left_right of Join", "ret_type": {".class": "Instance", "args": [{".class": "UnionType", "items": ["sqlalchemy.sql.schema.ForeignKeyConstraint", {".class": "NoneType"}]}, {".class": "Instance", "args": [{".class": "TupleType", "implicit": false, "items": [{".class": "Instance", "args": [{".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 2}], "type_ref": "sqlalchemy.sql.elements.ColumnClause"}, {".class": "Instance", "args": [{".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 2}], "type_ref": "sqlalchemy.sql.elements.ColumnClause"}], "partial_fallback": {".class": "Instance", "args": [{".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 6}], "type_ref": "builtins.tuple"}}], "type_ref": "builtins.list"}], "type_ref": "collections.defaultdict"}, "variables": []}}, "is_overload": false, "var": {".class": "Var", "flags": ["is_initialized_in_class", "is_classmethod", "is_ready"], "fullname": null, "name": "_joincond_scan_left_right", "type": {".class": "CallableType", "arg_kinds": [0, 0, 0, 0, 0], "arg_names": ["cls", "a", "a_subset", "b", "consider_as_foreign_keys"], "arg_types": [{".class": "TypeType", "item": "sqlalchemy.sql.selectable.Join"}, "sqlalchemy.sql.selectable.FromClause", {".class": "UnionType", "items": ["sqlalchemy.sql.selectable.FromClause", {".class": "NoneType"}]}, "sqlalchemy.sql.selectable.FromClause", {".class": "UnionType", "items": [{".class": "Instance", "args": [{".class": "Instance", "args": [{".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 2}], "type_ref": "sqlalchemy.sql.elements.ColumnClause"}], "type_ref": "typing.AbstractSet"}, {".class": "NoneType"}]}], "bound_args": [], "def_extras": {"first_arg": "cls"}, "fallback": "builtins.function", "implicit": false, "is_ellipsis_args": false, "name": "_joincond_scan_left_right of Join", "ret_type": {".class": "Instance", "args": [{".class": "UnionType", "items": ["sqlalchemy.sql.schema.ForeignKeyConstraint", {".class": "NoneType"}]}, {".class": "Instance", "args": [{".class": "TupleType", "implicit": false, "items": [{".class": "Instance", "args": [{".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 2}], "type_ref": "sqlalchemy.sql.elements.ColumnClause"}, {".class": "Instance", "args": [{".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 2}], "type_ref": "sqlalchemy.sql.elements.ColumnClause"}], "partial_fallback": {".class": "Instance", "args": [{".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 6}], "type_ref": "builtins.tuple"}}], "type_ref": "builtins.list"}], "type_ref": "collections.defaultdict"}, "variables": []}}}}, "_joincond_trim_constraints": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "Decorator", "func": {".class": "FuncDef", "arg_kinds": [0, 0, 0, 0, 0], "arg_names": ["cls", "a", "b", "constraints", "consider_as_foreign_keys"], "flags": ["is_class", "is_decorated"], "fullname": "sqlalchemy.sql.selectable.Join._joincond_trim_constraints", "name": "_joincond_trim_constraints", "type": {".class": "CallableType", "arg_kinds": [0, 0, 0, 0, 0], "arg_names": ["cls", "a", "b", "constraints", "consider_as_foreign_keys"], "arg_types": [{".class": "TypeType", "item": "sqlalchemy.sql.selectable.Join"}, "sqlalchemy.sql.selectable.FromClause", "sqlalchemy.sql.selectable.FromClause", {".class": "Instance", "args": [{".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 2}, {".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 2}], "type_ref": "builtins.dict"}, {".class": "UnionType", "items": [{".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 2}, {".class": "NoneType"}]}], "bound_args": [], "def_extras": {"first_arg": "cls"}, "fallback": "builtins.function", "implicit": false, "is_ellipsis_args": false, "name": "_joincond_trim_constraints of Join", "ret_type": {".class": "NoneType"}, "variables": []}}, "is_overload": false, "var": {".class": "Var", "flags": ["is_initialized_in_class", "is_classmethod", "is_ready"], "fullname": null, "name": "_joincond_trim_constraints", "type": {".class": "CallableType", "arg_kinds": [0, 0, 0, 0, 0], "arg_names": ["cls", "a", "b", "constraints", "consider_as_foreign_keys"], "arg_types": [{".class": "TypeType", "item": "sqlalchemy.sql.selectable.Join"}, "sqlalchemy.sql.selectable.FromClause", "sqlalchemy.sql.selectable.FromClause", {".class": "Instance", "args": [{".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 2}, {".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 2}], "type_ref": "builtins.dict"}, {".class": "UnionType", "items": [{".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 2}, {".class": "NoneType"}]}], "bound_args": [], "def_extras": {"first_arg": "cls"}, "fallback": "builtins.function", "implicit": false, "is_ellipsis_args": false, "name": "_joincond_trim_constraints of Join", "ret_type": {".class": "NoneType"}, "variables": []}}}}, "_match_primaries": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "FuncDef", "arg_kinds": [0, 0, 0], "arg_names": ["self", "left", "right"], "flags": [], "fullname": "sqlalchemy.sql.selectable.Join._match_primaries", "name": "_match_primaries", "type": {".class": "CallableType", "arg_kinds": [0, 0, 0], "arg_names": ["self", "left", "right"], "arg_types": ["sqlalchemy.sql.selectable.Join", "sqlalchemy.sql.selectable.FromClause", "sqlalchemy.sql.selectable.FromClause"], "bound_args": [], "def_extras": {"first_arg": "self"}, "fallback": "builtins.function", "implicit": false, "is_ellipsis_args": false, "name": "_match_primaries of Join", "ret_type": {".class": "Instance", "args": ["builtins.bool"], "type_ref": "sqlalchemy.sql.elements.ColumnElement"}, "variables": []}}}, "_populate_column_collection": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "Decorator", "func": {".class": "FuncDef", "arg_kinds": [0], "arg_names": ["self"], "flags": ["is_decorated"], "fullname": "sqlalchemy.sql.selectable.Join._populate_column_collection", "name": "_populate_column_collection", "type": {".class": "CallableType", "arg_kinds": [0], "arg_names": ["self"], "arg_types": ["sqlalchemy.sql.selectable.Join"], "bound_args": [], "def_extras": {"first_arg": "self"}, "fallback": "builtins.function", "implicit": false, "is_ellipsis_args": false, "name": "_populate_column_collection of Join", "ret_type": {".class": "NoneType"}, "variables": []}}, "is_overload": false, "var": {".class": "Var", "flags": ["is_initialized_in_class", "is_ready"], "fullname": null, "name": "_populate_column_collection", "type": {".class": "CallableType", "arg_kinds": [0], "arg_names": ["self"], "arg_types": ["sqlalchemy.sql.selectable.Join"], "bound_args": [], "def_extras": {"first_arg": "self"}, "fallback": "builtins.function", "implicit": false, "is_ellipsis_args": false, "name": "_populate_column_collection of Join", "ret_type": {".class": "NoneType"}, "variables": []}}}}, "_refresh_for_new_column": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "FuncDef", "arg_kinds": [0, 0], "arg_names": ["self", "column"], "flags": [], "fullname": "sqlalchemy.sql.selectable.Join._refresh_for_new_column", "name": "_refresh_for_new_column", "type": {".class": "CallableType", "arg_kinds": [0, 0], "arg_names": ["self", "column"], "arg_types": ["sqlalchemy.sql.selectable.Join", {".class": "Instance", "args": [{".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 2}], "type_ref": "sqlalchemy.sql.elements.ColumnElement"}], "bound_args": [], "def_extras": {"first_arg": "self"}, "fallback": "builtins.function", "implicit": false, "is_ellipsis_args": false, "name": "_refresh_for_new_column of Join", "ret_type": {".class": "NoneType"}, "variables": []}}}, "_traverse_internals": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "Var", "flags": ["is_initialized_in_class", "is_ready"], "fullname": "sqlalchemy.sql.selectable.Join._traverse_internals", "name": "_traverse_internals", "type": {".class": "TypeAliasType", "args": [], "type_ref": "sqlalchemy.sql.visitors._TraverseInternalsType"}}}, "description": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "Decorator", "func": {".class": "FuncDef", "arg_kinds": [0], "arg_names": ["self"], "flags": ["is_property", "is_decorated"], "fullname": "sqlalchemy.sql.selectable.Join.description", "name": "description", "type": {".class": "CallableType", "arg_kinds": [0], "arg_names": ["self"], "arg_types": ["sqlalchemy.sql.selectable.Join"], "bound_args": [], "def_extras": {"first_arg": "self"}, "fallback": "builtins.function", "implicit": false, "is_ellipsis_args": false, "name": "description of Join", "ret_type": "builtins.str", "variables": []}}, "is_overload": false, "var": {".class": "Var", "flags": ["is_initialized_in_class", "is_property", "is_ready"], "fullname": null, "name": "description", "type": {".class": "CallableType", "arg_kinds": [0], "arg_names": ["self"], "arg_types": ["sqlalchemy.sql.selectable.Join"], "bound_args": [], "def_extras": {"first_arg": "self"}, "fallback": "builtins.function", "implicit": false, "is_ellipsis_args": false, "name": "description of Join", "ret_type": "builtins.str", "variables": []}}}}, "full": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "Var", "flags": ["is_initialized_in_class", "is_ready"], "fullname": "sqlalchemy.sql.selectable.Join.full", "name": "full", "type": "builtins.bool"}}, "is_derived_from": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "FuncDef", "arg_kinds": [0, 0], "arg_names": ["self", "fromclause"], "flags": [], "fullname": "sqlalchemy.sql.selectable.Join.is_derived_from", "name": "is_derived_from", "type": {".class": "CallableType", "arg_kinds": [0, 0], "arg_names": ["self", "fromclause"], "arg_types": ["sqlalchemy.sql.selectable.Join", {".class": "UnionType", "items": ["sqlalchemy.sql.selectable.FromClause", {".class": "NoneType"}]}], "bound_args": [], "def_extras": {"first_arg": "self"}, "fallback": "builtins.function", "implicit": false, "is_ellipsis_args": false, "name": "is_derived_from of Join", "ret_type": "builtins.bool", "variables": []}}}, "isouter": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "Var", "flags": ["is_initialized_in_class", "is_ready"], "fullname": "sqlalchemy.sql.selectable.Join.isouter", "name": "isouter", "type": "builtins.bool"}}, "left": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "Var", "flags": ["is_initialized_in_class", "is_ready"], "fullname": "sqlalchemy.sql.selectable.Join.left", "name": "left", "type": "sqlalchemy.sql.selectable.FromClause"}}, "onclause": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "Var", "flags": ["is_initialized_in_class", "is_ready"], "fullname": "sqlalchemy.sql.selectable.Join.onclause", "name": "onclause", "type": {".class": "UnionType", "items": [{".class": "Instance", "args": ["builtins.bool"], "type_ref": "sqlalchemy.sql.elements.ColumnElement"}, {".class": "NoneType"}]}}}, "right": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "Var", "flags": ["is_initialized_in_class", "is_ready"], "fullname": "sqlalchemy.sql.selectable.Join.right", "name": "right", "type": "sqlalchemy.sql.selectable.FromClause"}}, "select": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "FuncDef", "arg_kinds": [0], "arg_names": ["self"], "flags": [], "fullname": "sqlalchemy.sql.selectable.Join.select", "name": "select", "type": {".class": "CallableType", "arg_kinds": [0], "arg_names": ["self"], "arg_types": ["sqlalchemy.sql.selectable.Join"], "bound_args": [], "def_extras": {"first_arg": "self"}, "fallback": "builtins.function", "implicit": false, "is_ellipsis_args": false, "name": "select of Join", "ret_type": {".class": "Instance", "args": [{".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 2}], "type_ref": "sqlalchemy.sql.selectable.Select"}, "variables": []}}}, "self_group": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "FuncDef", "arg_kinds": [0, 1], "arg_names": ["self", "against"], "flags": [], "fullname": "sqlalchemy.sql.selectable.Join.self_group", "name": "self_group", "type": {".class": "CallableType", "arg_kinds": [0, 1], "arg_names": ["self", "against"], "arg_types": ["sqlalchemy.sql.selectable.Join", {".class": "UnionType", "items": ["sqlalchemy.sql.operators.OperatorType", {".class": "NoneType"}]}], "bound_args": [], "def_extras": {"first_arg": "self"}, "fallback": "builtins.function", "implicit": false, "is_ellipsis_args": false, "name": "self_group of Join", "ret_type": "sqlalchemy.sql.selectable.FromGrouping", "variables": []}}}}, "tuple_type": null, "type_vars": [], "typeddict_type": null}}, "KeyedColumnElement": {".class": "SymbolTableNode", "cross_ref": "sqlalchemy.sql.elements.KeyedColumnElement", "kind": "Gdef"}, "LABEL_STYLE_DEFAULT": {".class": "SymbolTableNode", "kind": "Gdef", "node": {".class": "Var", "flags": [], "fullname": "sqlalchemy.sql.selectable.LABEL_STYLE_DEFAULT", "name": "LABEL_STYLE_DEFAULT", "type": "sqlalchemy.sql.selectable.SelectLabelStyle"}}, "LABEL_STYLE_DISAMBIGUATE_ONLY": {".class": "SymbolTableNode", "kind": "Gdef", "node": {".class": "Var", "flags": [], "fullname": "sqlalchemy.sql.selectable.LABEL_STYLE_DISAMBIGUATE_ONLY", "name": "LABEL_STYLE_DISAMBIGUATE_ONLY", "type": "sqlalchemy.sql.selectable.SelectLabelStyle"}}, "LABEL_STYLE_NONE": {".class": "SymbolTableNode", "kind": "Gdef", "node": {".class": "Var", "flags": [], "fullname": "sqlalchemy.sql.selectable.LABEL_STYLE_NONE", "name": "LABEL_STYLE_NONE", "type": "sqlalchemy.sql.selectable.SelectLabelStyle"}}, "LABEL_STYLE_TABLENAME_PLUS_COL": {".class": "SymbolTableNode", "kind": "Gdef", "node": {".class": "Var", "flags": [], "fullname": "sqlalchemy.sql.selectable.LABEL_STYLE_TABLENAME_PLUS_COL", "name": "LABEL_STYLE_TABLENAME_PLUS_COL", "type": "sqlalchemy.sql.selectable.SelectLabelStyle"}}, "Label": {".class": "SymbolTableNode", "cross_ref": "sqlalchemy.sql.elements.Label", "kind": "Gdef"}, "Lateral": {".class": "SymbolTableNode", "kind": "Gdef", "node": {".class": "TypeInfo", "_promote": null, "abstract_attributes": [], "bases": ["sqlalchemy.sql.selectable.FromClauseAlias", "sqlalchemy.sql.selectable.LateralFromClause"], "declared_metaclass": null, "defn": {".class": "ClassDef", "fullname": "sqlalchemy.sql.selectable.Lateral", "name": "Lateral", "type_vars": []}, "flags": [], "fullname": "sqlalchemy.sql.selectable.Lateral", "metaclass_type": null, "metadata": {}, "module_name": "sqlalchemy.sql.selectable", "mro": ["sqlalchemy.sql.selectable.Lateral", "sqlalchemy.sql.selectable.FromClauseAlias", "sqlalchemy.sql.selectable.AliasedReturnsRows", "sqlalchemy.sql.selectable.NoInit", "sqlalchemy.sql.selectable.LateralFromClause", "sqlalchemy.sql.selectable.NamedFromClause", "sqlalchemy.sql.selectable.FromClause", "sqlalchemy.sql.roles.AnonymizedFromClauseRole", "sqlalchemy.sql.roles.StrictFromClauseRole", "sqlalchemy.sql.roles.FromClauseRole", "sqlalchemy.sql.roles.ColumnsClauseRole", "sqlalchemy.sql.roles.JoinTargetRole", "sqlalchemy.sql.roles.AllowsLambdaRole", "sqlalchemy.sql.roles.UsesInspection", "sqlalchemy.sql.roles.ColumnListRole", "sqlalchemy.sql.roles.StructuralRole", "sqlalchemy.sql.selectable.Selectable", "sqlalchemy.sql.selectable.ReturnsRows", "sqlalchemy.sql.roles.ReturnsRowsRole", "sqlalchemy.sql.roles.SQLRole", "sqlalchemy.sql.elements.DQLDMLClauseElement", "sqlalchemy.sql.elements.ClauseElement", "sqlalchemy.sql.annotation.SupportsWrappingAnnotations", "sqlalchemy.sql.annotation.SupportsAnnotations", "sqlalchemy.sql.cache_key.MemoizedHasCacheKey", "sqlalchemy.sql.cache_key.HasCacheKey", "sqlalchemy.util.langhelpers.HasMemoized", "sqlalchemy.sql.traversals.HasCopyInternals", "sqlalchemy.sql.visitors.ExternallyTraversible", "sqlalchemy.sql.visitors.HasTraverseInternals", "sqlalchemy.sql.elements.CompilerElement", "sqlalchemy.sql.visitors.Visitable", "builtins.object"], "names": {".class": "SymbolTable", "__visit_name__": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "Var", "flags": ["is_initialized_in_class", "is_ready"], "fullname": "sqlalchemy.sql.selectable.Lateral.__visit_name__", "name": "__visit_name__", "type": "builtins.str"}}, "_factory": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "Decorator", "func": {".class": "FuncDef", "arg_kinds": [0, 0, 1], "arg_names": ["cls", "selectable", "name"], "flags": ["is_class", "is_decorated"], "fullname": "sqlalchemy.sql.selectable.Lateral._factory", "name": "_factory", "type": {".class": "CallableType", "arg_kinds": [0, 0, 1], "arg_names": ["cls", "selectable", "name"], "arg_types": [{".class": "TypeType", "item": "sqlalchemy.sql.selectable.Lateral"}, {".class": "UnionType", "items": ["sqlalchemy.sql.selectable.SelectBase", {".class": "TypeAliasType", "args": [], "type_ref": "sqlalchemy.sql._typing._FromClauseArgument"}]}, {".class": "UnionType", "items": ["builtins.str", {".class": "NoneType"}]}], "bound_args": [], "def_extras": {"first_arg": "cls"}, "fallback": "builtins.function", "implicit": false, "is_ellipsis_args": false, "name": "_factory of Lateral", "ret_type": "sqlalchemy.sql.selectable.LateralFromClause", "variables": []}}, "is_overload": false, "var": {".class": "Var", "flags": ["is_initialized_in_class", "is_classmethod", "is_ready"], "fullname": null, "name": "_factory", "type": {".class": "CallableType", "arg_kinds": [0, 0, 1], "arg_names": ["cls", "selectable", "name"], "arg_types": [{".class": "TypeType", "item": "sqlalchemy.sql.selectable.Lateral"}, {".class": "UnionType", "items": ["sqlalchemy.sql.selectable.SelectBase", {".class": "TypeAliasType", "args": [], "type_ref": "sqlalchemy.sql._typing._FromClauseArgument"}]}, {".class": "UnionType", "items": ["builtins.str", {".class": "NoneType"}]}], "bound_args": [], "def_extras": {"first_arg": "cls"}, "fallback": "builtins.function", "implicit": false, "is_ellipsis_args": false, "name": "_factory of Lateral", "ret_type": "sqlalchemy.sql.selectable.LateralFromClause", "variables": []}}}}, "_is_lateral": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "Var", "flags": ["is_initialized_in_class"], "fullname": "sqlalchemy.sql.selectable.Lateral._is_lateral", "name": "_is_lateral", "type": "builtins.bool"}}, "inherit_cache": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "Var", "flags": ["is_initialized_in_class"], "fullname": "sqlalchemy.sql.selectable.Lateral.inherit_cache", "name": "inherit_cache", "type": "builtins.bool"}}}, "tuple_type": null, "type_vars": [], "typeddict_type": null}}, "LateralFromClause": {".class": "SymbolTableNode", "kind": "Gdef", "node": {".class": "TypeInfo", "_promote": null, "abstract_attributes": [], "bases": ["sqlalchemy.sql.selectable.NamedFromClause"], "declared_metaclass": null, "defn": {".class": "ClassDef", "fullname": "sqlalchemy.sql.selectable.LateralFromClause", "name": "LateralFromClause", "type_vars": []}, "flags": [], "fullname": "sqlalchemy.sql.selectable.LateralFromClause", "metaclass_type": null, "metadata": {}, "module_name": "sqlalchemy.sql.selectable", "mro": ["sqlalchemy.sql.selectable.LateralFromClause", "sqlalchemy.sql.selectable.NamedFromClause", "sqlalchemy.sql.selectable.FromClause", "sqlalchemy.sql.roles.AnonymizedFromClauseRole", "sqlalchemy.sql.roles.StrictFromClauseRole", "sqlalchemy.sql.roles.FromClauseRole", "sqlalchemy.sql.roles.ColumnsClauseRole", "sqlalchemy.sql.roles.JoinTargetRole", "sqlalchemy.sql.roles.AllowsLambdaRole", "sqlalchemy.sql.roles.UsesInspection", "sqlalchemy.sql.roles.ColumnListRole", "sqlalchemy.sql.roles.StructuralRole", "sqlalchemy.sql.selectable.Selectable", "sqlalchemy.sql.selectable.ReturnsRows", "sqlalchemy.sql.roles.ReturnsRowsRole", "sqlalchemy.sql.roles.SQLRole", "sqlalchemy.sql.elements.DQLDMLClauseElement", "sqlalchemy.sql.elements.ClauseElement", "sqlalchemy.sql.annotation.SupportsWrappingAnnotations", "sqlalchemy.sql.annotation.SupportsAnnotations", "sqlalchemy.sql.cache_key.MemoizedHasCacheKey", "sqlalchemy.sql.cache_key.HasCacheKey", "sqlalchemy.util.langhelpers.HasMemoized", "sqlalchemy.sql.traversals.HasCopyInternals", "sqlalchemy.sql.visitors.ExternallyTraversible", "sqlalchemy.sql.visitors.HasTraverseInternals", "sqlalchemy.sql.elements.CompilerElement", "sqlalchemy.sql.visitors.Visitable", "builtins.object"], "names": {".class": "SymbolTable"}, "tuple_type": null, "type_vars": [], "typeddict_type": null}}, "List": {".class": "SymbolTableNode", "cross_ref": "typing.List", "kind": "Gdef"}, "Literal": {".class": "SymbolTableNode", "cross_ref": "typing_extensions.Literal", "kind": "Gdef"}, "NULLTYPE": {".class": "SymbolTableNode", "cross_ref": "sqlalchemy.sql.sqltypes.NULLTYPE", "kind": "Gdef"}, "NamedColumn": {".class": "SymbolTableNode", "cross_ref": "sqlalchemy.sql.elements.NamedColumn", "kind": "Gdef"}, "NamedFromClause": {".class": "SymbolTableNode", "kind": "Gdef", "node": {".class": "TypeInfo", "_promote": null, "abstract_attributes": [], "bases": ["sqlalchemy.sql.selectable.FromClause"], "declared_metaclass": null, "defn": {".class": "ClassDef", "fullname": "sqlalchemy.sql.selectable.NamedFromClause", "name": "NamedFromClause", "type_vars": []}, "flags": [], "fullname": "sqlalchemy.sql.selectable.NamedFromClause", "metaclass_type": null, "metadata": {}, "module_name": "sqlalchemy.sql.selectable", "mro": ["sqlalchemy.sql.selectable.NamedFromClause", "sqlalchemy.sql.selectable.FromClause", "sqlalchemy.sql.roles.AnonymizedFromClauseRole", "sqlalchemy.sql.roles.StrictFromClauseRole", "sqlalchemy.sql.roles.FromClauseRole", "sqlalchemy.sql.roles.ColumnsClauseRole", "sqlalchemy.sql.roles.JoinTargetRole", "sqlalchemy.sql.roles.AllowsLambdaRole", "sqlalchemy.sql.roles.UsesInspection", "sqlalchemy.sql.roles.ColumnListRole", "sqlalchemy.sql.roles.StructuralRole", "sqlalchemy.sql.selectable.Selectable", "sqlalchemy.sql.selectable.ReturnsRows", "sqlalchemy.sql.roles.ReturnsRowsRole", "sqlalchemy.sql.roles.SQLRole", "sqlalchemy.sql.elements.DQLDMLClauseElement", "sqlalchemy.sql.elements.ClauseElement", "sqlalchemy.sql.annotation.SupportsWrappingAnnotations", "sqlalchemy.sql.annotation.SupportsAnnotations", "sqlalchemy.sql.cache_key.MemoizedHasCacheKey", "sqlalchemy.sql.cache_key.HasCacheKey", "sqlalchemy.util.langhelpers.HasMemoized", "sqlalchemy.sql.traversals.HasCopyInternals", "sqlalchemy.sql.visitors.ExternallyTraversible", "sqlalchemy.sql.visitors.HasTraverseInternals", "sqlalchemy.sql.elements.CompilerElement", "sqlalchemy.sql.visitors.Visitable", "builtins.object"], "names": {".class": "SymbolTable", "name": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "Var", "flags": ["is_initialized_in_class", "is_ready"], "fullname": "sqlalchemy.sql.selectable.NamedFromClause.name", "name": "name", "type": "builtins.str"}}, "named_with_column": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "Var", "flags": ["is_initialized_in_class"], "fullname": "sqlalchemy.sql.selectable.NamedFromClause.named_with_column", "name": "named_with_column", "type": "builtins.bool"}}, "table_valued": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "Decorator", "func": {".class": "FuncDef", "arg_kinds": [0], "arg_names": ["self"], "flags": ["is_decorated"], "fullname": "sqlalchemy.sql.selectable.NamedFromClause.table_valued", "name": "table_valued", "type": {".class": "CallableType", "arg_kinds": [0], "arg_names": ["self"], "arg_types": ["sqlalchemy.sql.selectable.NamedFromClause"], "bound_args": [], "def_extras": {"first_arg": "self"}, "fallback": "builtins.function", "implicit": false, "is_ellipsis_args": false, "name": "table_valued of NamedFromClause", "ret_type": {".class": "Instance", "args": [{".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 2}], "type_ref": "sqlalchemy.sql.elements.TableValuedColumn"}, "variables": []}}, "is_overload": false, "var": {".class": "Var", "flags": ["is_initialized_in_class", "is_ready"], "fullname": null, "name": "table_valued", "type": {".class": "CallableType", "arg_kinds": [0], "arg_names": ["self"], "arg_types": ["sqlalchemy.sql.selectable.NamedFromClause"], "bound_args": [], "def_extras": {"first_arg": "self"}, "fallback": "builtins.function", "implicit": false, "is_ellipsis_args": false, "name": "table_valued of NamedFromClause", "ret_type": {".class": "Instance", "args": [{".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 2}], "type_ref": "sqlalchemy.sql.elements.TableValuedColumn"}, "variables": []}}}}}, "tuple_type": null, "type_vars": [], "typeddict_type": null}}, "NamedFromGrouping": {".class": "SymbolTableNode", "kind": "Gdef", "node": {".class": "TypeInfo", "_promote": null, "abstract_attributes": [], "bases": ["sqlalchemy.sql.selectable.FromGrouping", "sqlalchemy.sql.selectable.NamedFromClause"], "declared_metaclass": null, "defn": {".class": "ClassDef", "fullname": "sqlalchemy.sql.selectable.NamedFromGrouping", "name": "NamedFromGrouping", "type_vars": []}, "flags": [], "fullname": "sqlalchemy.sql.selectable.NamedFromGrouping", "metaclass_type": null, "metadata": {}, "module_name": "sqlalchemy.sql.selectable", "mro": ["sqlalchemy.sql.selectable.NamedFromGrouping", "sqlalchemy.sql.selectable.FromGrouping", "sqlalchemy.sql.elements.GroupedElement", "sqlalchemy.sql.selectable.NamedFromClause", "sqlalchemy.sql.selectable.FromClause", "sqlalchemy.sql.roles.AnonymizedFromClauseRole", "sqlalchemy.sql.roles.StrictFromClauseRole", "sqlalchemy.sql.roles.FromClauseRole", "sqlalchemy.sql.roles.ColumnsClauseRole", "sqlalchemy.sql.roles.JoinTargetRole", "sqlalchemy.sql.roles.AllowsLambdaRole", "sqlalchemy.sql.roles.UsesInspection", "sqlalchemy.sql.roles.ColumnListRole", "sqlalchemy.sql.roles.StructuralRole", "sqlalchemy.sql.selectable.Selectable", "sqlalchemy.sql.selectable.ReturnsRows", "sqlalchemy.sql.roles.ReturnsRowsRole", "sqlalchemy.sql.roles.SQLRole", "sqlalchemy.sql.elements.DQLDMLClauseElement", "sqlalchemy.sql.elements.ClauseElement", "sqlalchemy.sql.annotation.SupportsWrappingAnnotations", "sqlalchemy.sql.annotation.SupportsAnnotations", "sqlalchemy.sql.cache_key.MemoizedHasCacheKey", "sqlalchemy.sql.cache_key.HasCacheKey", "sqlalchemy.util.langhelpers.HasMemoized", "sqlalchemy.sql.traversals.HasCopyInternals", "sqlalchemy.sql.visitors.ExternallyTraversible", "sqlalchemy.sql.visitors.HasTraverseInternals", "sqlalchemy.sql.elements.CompilerElement", "sqlalchemy.sql.visitors.Visitable", "builtins.object"], "names": {".class": "SymbolTable", "inherit_cache": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "Var", "flags": ["is_initialized_in_class"], "fullname": "sqlalchemy.sql.selectable.NamedFromGrouping.inherit_cache", "name": "inherit_cache", "type": "builtins.bool"}}}, "tuple_type": null, "type_vars": [], "typeddict_type": null}}, "NamedTuple": {".class": "SymbolTableNode", "cross_ref": "typing.NamedTuple", "kind": "Gdef"}, "NoInit": {".class": "SymbolTableNode", "kind": "Gdef", "node": {".class": "TypeInfo", "_promote": null, "abstract_attributes": [], "bases": ["builtins.object"], "declared_metaclass": null, "defn": {".class": "ClassDef", "fullname": "sqlalchemy.sql.selectable.NoInit", "name": "NoInit", "type_vars": []}, "flags": [], "fullname": "sqlalchemy.sql.selectable.NoInit", "metaclass_type": null, "metadata": {}, "module_name": "sqlalchemy.sql.selectable", "mro": ["sqlalchemy.sql.selectable.NoInit", "builtins.object"], "names": {".class": "SymbolTable", "__init__": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "FuncDef", "arg_kinds": [0, 2, 4], "arg_names": ["self", "arg", "kw"], "flags": [], "fullname": "sqlalchemy.sql.selectable.NoInit.__init__", "name": "__init__", "type": {".class": "CallableType", "arg_kinds": [0, 2, 4], "arg_names": ["self", "arg", "kw"], "arg_types": ["sqlalchemy.sql.selectable.NoInit", {".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 2}, {".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 2}], "bound_args": [], "def_extras": {"first_arg": "self"}, "fallback": "builtins.function", "implicit": false, "is_ellipsis_args": false, "name": "__init__ of NoInit", "ret_type": {".class": "NoneType"}, "variables": []}}}}, "tuple_type": null, "type_vars": [], "typeddict_type": null}}, "NoReturn": {".class": "SymbolTableNode", "cross_ref": "typing.NoReturn", "kind": "Gdef"}, "OperatorType": {".class": "SymbolTableNode", "cross_ref": "sqlalchemy.sql.operators.OperatorType", "kind": "Gdef"}, "Optional": {".class": "SymbolTableNode", "cross_ref": "typing.Optional", "kind": "Gdef"}, "Protocol": {".class": "SymbolTableNode", "cross_ref": "typing_extensions.Protocol", "kind": "Gdef"}, "ReadOnlyColumnCollection": {".class": "SymbolTableNode", "cross_ref": "sqlalchemy.sql.base.ReadOnlyColumnCollection", "kind": "Gdef"}, "ReturnsRows": {".class": "SymbolTableNode", "kind": "Gdef", "node": {".class": "TypeInfo", "_promote": null, "abstract_attributes": [], "bases": ["sqlalchemy.sql.roles.ReturnsRowsRole", "sqlalchemy.sql.elements.DQLDMLClauseElement"], "declared_metaclass": null, "defn": {".class": "ClassDef", "fullname": "sqlalchemy.sql.selectable.ReturnsRows", "name": "ReturnsRows", "type_vars": []}, "flags": [], "fullname": "sqlalchemy.sql.selectable.ReturnsRows", "metaclass_type": null, "metadata": {}, "module_name": "sqlalchemy.sql.selectable", "mro": ["sqlalchemy.sql.selectable.ReturnsRows", "sqlalchemy.sql.roles.ReturnsRowsRole", "sqlalchemy.sql.roles.SQLRole", "sqlalchemy.sql.elements.DQLDMLClauseElement", "sqlalchemy.sql.elements.ClauseElement", "sqlalchemy.sql.annotation.SupportsWrappingAnnotations", "sqlalchemy.sql.annotation.SupportsAnnotations", "sqlalchemy.sql.cache_key.MemoizedHasCacheKey", "sqlalchemy.sql.cache_key.HasCacheKey", "sqlalchemy.util.langhelpers.HasMemoized", "sqlalchemy.sql.traversals.HasCopyInternals", "sqlalchemy.sql.visitors.ExternallyTraversible", "sqlalchemy.sql.visitors.HasTraverseInternals", "sqlalchemy.sql.elements.CompilerElement", "sqlalchemy.sql.visitors.Visitable", "builtins.object"], "names": {".class": "SymbolTable", "_all_selected_columns": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "Decorator", "func": {".class": "FuncDef", "arg_kinds": [0], "arg_names": ["self"], "flags": ["is_property", "is_decorated"], "fullname": "sqlalchemy.sql.selectable.ReturnsRows._all_selected_columns", "name": "_all_selected_columns", "type": {".class": "CallableType", "arg_kinds": [0], "arg_names": ["self"], "arg_types": ["sqlalchemy.sql.selectable.ReturnsRows"], "bound_args": [], "def_extras": {"first_arg": "self"}, "fallback": "builtins.function", "implicit": false, "is_ellipsis_args": false, "name": "_all_selected_columns of ReturnsRows", "ret_type": {".class": "TypeAliasType", "args": [], "type_ref": "sqlalchemy.sql.selectable._SelectIterable"}, "variables": []}}, "is_overload": false, "var": {".class": "Var", "flags": ["is_initialized_in_class", "is_property", "is_ready"], "fullname": null, "name": "_all_selected_columns", "type": {".class": "CallableType", "arg_kinds": [0], "arg_names": ["self"], "arg_types": ["sqlalchemy.sql.selectable.ReturnsRows"], "bound_args": [], "def_extras": {"first_arg": "self"}, "fallback": "builtins.function", "implicit": false, "is_ellipsis_args": false, "name": "_all_selected_columns of ReturnsRows", "ret_type": {".class": "TypeAliasType", "args": [], "type_ref": "sqlalchemy.sql.selectable._SelectIterable"}, "variables": []}}}}, "_generate_fromclause_column_proxies": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "FuncDef", "arg_kinds": [0, 0], "arg_names": ["self", "fromclause"], "flags": [], "fullname": "sqlalchemy.sql.selectable.ReturnsRows._generate_fromclause_column_proxies", "name": "_generate_fromclause_column_proxies", "type": {".class": "CallableType", "arg_kinds": [0, 0], "arg_names": ["self", "fromclause"], "arg_types": ["sqlalchemy.sql.selectable.ReturnsRows", "sqlalchemy.sql.selectable.FromClause"], "bound_args": [], "def_extras": {"first_arg": "self"}, "fallback": "builtins.function", "implicit": false, "is_ellipsis_args": false, "name": "_generate_fromclause_column_proxies of ReturnsRows", "ret_type": {".class": "NoneType"}, "variables": []}}}, "_is_from_clause": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "Var", "flags": ["is_initialized_in_class"], "fullname": "sqlalchemy.sql.selectable.ReturnsRows._is_from_clause", "name": "_is_from_clause", "type": "builtins.bool"}}, "_is_lateral": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "Var", "flags": ["is_initialized_in_class"], "fullname": "sqlalchemy.sql.selectable.ReturnsRows._is_lateral", "name": "_is_lateral", "type": "builtins.bool"}}, "_is_returns_rows": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "Var", "flags": ["is_initialized_in_class"], "fullname": "sqlalchemy.sql.selectable.ReturnsRows._is_returns_rows", "name": "_is_returns_rows", "type": "builtins.bool"}}, "_is_select_base": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "Var", "flags": ["is_initialized_in_class"], "fullname": "sqlalchemy.sql.selectable.ReturnsRows._is_select_base", "name": "_is_select_base", "type": "builtins.bool"}}, "_is_select_statement": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "Var", "flags": ["is_initialized_in_class"], "fullname": "sqlalchemy.sql.selectable.ReturnsRows._is_select_statement", "name": "_is_select_statement", "type": "builtins.bool"}}, "_refresh_for_new_column": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "FuncDef", "arg_kinds": [0, 0], "arg_names": ["self", "column"], "flags": [], "fullname": "sqlalchemy.sql.selectable.ReturnsRows._refresh_for_new_column", "name": "_refresh_for_new_column", "type": {".class": "CallableType", "arg_kinds": [0, 0], "arg_names": ["self", "column"], "arg_types": ["sqlalchemy.sql.selectable.ReturnsRows", {".class": "Instance", "args": [{".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 2}], "type_ref": "sqlalchemy.sql.elements.ColumnElement"}], "bound_args": [], "def_extras": {"first_arg": "self"}, "fallback": "builtins.function", "implicit": false, "is_ellipsis_args": false, "name": "_refresh_for_new_column of ReturnsRows", "ret_type": {".class": "NoneType"}, "variables": []}}}, "exported_columns": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "Decorator", "func": {".class": "FuncDef", "arg_kinds": [0], "arg_names": ["self"], "flags": ["is_property", "is_decorated"], "fullname": "sqlalchemy.sql.selectable.ReturnsRows.exported_columns", "name": "exported_columns", "type": {".class": "CallableType", "arg_kinds": [0], "arg_names": ["self"], "arg_types": ["sqlalchemy.sql.selectable.ReturnsRows"], "bound_args": [], "def_extras": {"first_arg": "self"}, "fallback": "builtins.function", "implicit": false, "is_ellipsis_args": false, "name": "exported_columns of ReturnsRows", "ret_type": {".class": "Instance", "args": [{".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 2}, {".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 2}], "type_ref": "sqlalchemy.sql.base.ReadOnlyColumnCollection"}, "variables": []}}, "is_overload": false, "var": {".class": "Var", "flags": ["is_initialized_in_class", "is_property", "is_ready"], "fullname": null, "name": "exported_columns", "type": {".class": "CallableType", "arg_kinds": [0], "arg_names": ["self"], "arg_types": ["sqlalchemy.sql.selectable.ReturnsRows"], "bound_args": [], "def_extras": {"first_arg": "self"}, "fallback": "builtins.function", "implicit": false, "is_ellipsis_args": false, "name": "exported_columns of ReturnsRows", "ret_type": {".class": "Instance", "args": [{".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 2}, {".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 2}], "type_ref": "sqlalchemy.sql.base.ReadOnlyColumnCollection"}, "variables": []}}}}, "is_derived_from": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "FuncDef", "arg_kinds": [0, 0], "arg_names": ["self", "fromclause"], "flags": [], "fullname": "sqlalchemy.sql.selectable.ReturnsRows.is_derived_from", "name": "is_derived_from", "type": {".class": "CallableType", "arg_kinds": [0, 0], "arg_names": ["self", "fromclause"], "arg_types": ["sqlalchemy.sql.selectable.ReturnsRows", {".class": "UnionType", "items": ["sqlalchemy.sql.selectable.FromClause", {".class": "NoneType"}]}], "bound_args": [], "def_extras": {"first_arg": "self"}, "fallback": "builtins.function", "implicit": false, "is_ellipsis_args": false, "name": "is_derived_from of ReturnsRows", "ret_type": "builtins.bool", "variables": []}}}, "selectable": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "Decorator", "func": {".class": "FuncDef", "arg_kinds": [0], "arg_names": ["self"], "flags": ["is_property", "is_decorated"], "fullname": "sqlalchemy.sql.selectable.ReturnsRows.selectable", "name": "selectable", "type": {".class": "CallableType", "arg_kinds": [0], "arg_names": ["self"], "arg_types": ["sqlalchemy.sql.selectable.ReturnsRows"], "bound_args": [], "def_extras": {"first_arg": "self"}, "fallback": "builtins.function", "implicit": false, "is_ellipsis_args": false, "name": "selectable of ReturnsRows", "ret_type": "sqlalchemy.sql.selectable.ReturnsRows", "variables": []}}, "is_overload": false, "var": {".class": "Var", "flags": ["is_initialized_in_class", "is_property", "is_ready"], "fullname": null, "name": "selectable", "type": {".class": "CallableType", "arg_kinds": [0], "arg_names": ["self"], "arg_types": ["sqlalchemy.sql.selectable.ReturnsRows"], "bound_args": [], "def_extras": {"first_arg": "self"}, "fallback": "builtins.function", "implicit": false, "is_ellipsis_args": false, "name": "selectable of ReturnsRows", "ret_type": "sqlalchemy.sql.selectable.ReturnsRows", "variables": []}}}}}, "tuple_type": null, "type_vars": [], "typeddict_type": null}}, "SQLCompiler": {".class": "SymbolTableNode", "cross_ref": "sqlalchemy.sql.compiler.SQLCompiler", "kind": "Gdef"}, "ScalarSelect": {".class": "SymbolTableNode", "kind": "Gdef", "node": {".class": "TypeInfo", "_promote": null, "abstract_attributes": [], "bases": ["sqlalchemy.sql.roles.InElementRole", "sqlalchemy.sql.base.Generative", "sqlalchemy.sql.elements.GroupedElement", {".class": "Instance", "args": [{".class": "TypeVarType", "fullname": "sqlalchemy.sql.selectable._T", "id": 1, "name": "_T", "upper_bound": {".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 2}, "values": [], "variance": 0}], "type_ref": "sqlalchemy.sql.elements.ColumnElement"}], "declared_metaclass": null, "defn": {".class": "ClassDef", "fullname": "sqlalchemy.sql.selectable.ScalarSelect", "name": "ScalarSelect", "type_vars": [{".class": "TypeVarDef", "fullname": "sqlalchemy.sql.selectable._T", "id": 1, "name": "_T", "upper_bound": {".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 2}, "values": [], "variance": 0}]}, "flags": [], "fullname": "sqlalchemy.sql.selectable.ScalarSelect", "metaclass_type": null, "metadata": {}, "module_name": "sqlalchemy.sql.selectable", "mro": ["sqlalchemy.sql.selectable.ScalarSelect", "sqlalchemy.sql.roles.InElementRole", "sqlalchemy.sql.base.Generative", "sqlalchemy.sql.elements.GroupedElement", "sqlalchemy.sql.elements.ColumnElement", "sqlalchemy.sql.roles.ColumnArgumentOrKeyRole", "sqlalchemy.sql.roles.ColumnArgumentRole", "sqlalchemy.sql.roles.StatementOptionRole", "sqlalchemy.sql.roles.WhereHavingRole", "sqlalchemy.sql.roles.OnClauseRole", "sqlalchemy.sql.roles.BinaryElementRole", "sqlalchemy.sql.roles.OrderByRole", "sqlalchemy.sql.roles.ColumnsClauseRole", "sqlalchemy.sql.roles.AllowsLambdaRole", "sqlalchemy.sql.roles.ByOfRole", "sqlalchemy.sql.roles.UsesInspection", "sqlalchemy.sql.roles.ColumnListRole", "sqlalchemy.sql.roles.LimitOffsetRole", "sqlalchemy.sql.roles.DMLColumnRole", "sqlalchemy.sql.roles.DDLConstraintColumnRole", "sqlalchemy.sql.roles.DDLExpressionRole", "sqlalchemy.sql.roles.StructuralRole", "sqlalchemy.sql.elements.SQLColumnExpression", "sqlalchemy.sql.elements.SQLCoreOperations", "sqlalchemy.sql.operators.ColumnOperators", "sqlalchemy.sql.operators.Operators", "sqlalchemy.sql.roles.ExpressionElementRole", "sqlalchemy.util.langhelpers.TypingOnly", "sqlalchemy.sql.roles.TypedColumnsClauseRole", "sqlalchemy.sql.roles.SQLRole", "sqlalchemy.sql.elements.DQLDMLClauseElement", "sqlalchemy.sql.elements.ClauseElement", "sqlalchemy.sql.annotation.SupportsWrappingAnnotations", "sqlalchemy.sql.annotation.SupportsAnnotations", "sqlalchemy.sql.cache_key.MemoizedHasCacheKey", "sqlalchemy.sql.cache_key.HasCacheKey", "sqlalchemy.util.langhelpers.HasMemoized", "sqlalchemy.sql.traversals.HasCopyInternals", "sqlalchemy.sql.visitors.ExternallyTraversible", "sqlalchemy.sql.visitors.HasTraverseInternals", "sqlalchemy.sql.elements.CompilerElement", "sqlalchemy.sql.visitors.Visitable", "builtins.object"], "names": {".class": "SymbolTable", "__getattr__": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "FuncDef", "arg_kinds": [0, 0], "arg_names": ["self", "attr"], "flags": [], "fullname": "sqlalchemy.sql.selectable.ScalarSelect.__getattr__", "name": "__getattr__", "type": {".class": "CallableType", "arg_kinds": [0, 0], "arg_names": [null, null], "arg_types": [{".class": "Instance", "args": [{".class": "TypeVarType", "fullname": "sqlalchemy.sql.selectable._T", "id": 1, "name": "_T", "upper_bound": {".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 2}, "values": [], "variance": 0}], "type_ref": "sqlalchemy.sql.selectable.ScalarSelect"}, "builtins.str"], "bound_args": [], "def_extras": {"first_arg": "self"}, "fallback": "builtins.function", "implicit": false, "is_ellipsis_args": false, "name": "__getattr__ of ScalarSelect", "ret_type": {".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 2}, "variables": []}}}, "__getstate__": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "FuncDef", "arg_kinds": [0], "arg_names": ["self"], "flags": [], "fullname": "sqlalchemy.sql.selectable.ScalarSelect.__getstate__", "name": "__getstate__", "type": {".class": "CallableType", "arg_kinds": [0], "arg_names": ["self"], "arg_types": [{".class": "Instance", "args": [{".class": "TypeVarType", "fullname": "sqlalchemy.sql.selectable._T", "id": 1, "name": "_T", "upper_bound": {".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 2}, "values": [], "variance": 0}], "type_ref": "sqlalchemy.sql.selectable.ScalarSelect"}], "bound_args": [], "def_extras": {"first_arg": "self"}, "fallback": "builtins.function", "implicit": false, "is_ellipsis_args": false, "name": "__getstate__ of ScalarSelect", "ret_type": {".class": "Instance", "args": ["builtins.str", {".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 2}], "type_ref": "builtins.dict"}, "variables": []}}}, "__init__": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "FuncDef", "arg_kinds": [0, 0], "arg_names": ["self", "element"], "flags": [], "fullname": "sqlalchemy.sql.selectable.ScalarSelect.__init__", "name": "__init__", "type": {".class": "CallableType", "arg_kinds": [0, 0], "arg_names": ["self", "element"], "arg_types": [{".class": "Instance", "args": [{".class": "TypeVarType", "fullname": "sqlalchemy.sql.selectable._T", "id": 1, "name": "_T", "upper_bound": {".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 2}, "values": [], "variance": 0}], "type_ref": "sqlalchemy.sql.selectable.ScalarSelect"}, "sqlalchemy.sql.selectable.SelectBase"], "bound_args": [], "def_extras": {"first_arg": "self"}, "fallback": "builtins.function", "implicit": false, "is_ellipsis_args": false, "name": "__init__ of ScalarSelect", "ret_type": {".class": "NoneType"}, "variables": []}}}, "__setstate__": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "FuncDef", "arg_kinds": [0, 0], "arg_names": ["self", "state"], "flags": [], "fullname": "sqlalchemy.sql.selectable.ScalarSelect.__setstate__", "name": "__setstate__", "type": {".class": "CallableType", "arg_kinds": [0, 0], "arg_names": ["self", "state"], "arg_types": [{".class": "Instance", "args": [{".class": "TypeVarType", "fullname": "sqlalchemy.sql.selectable._T", "id": 1, "name": "_T", "upper_bound": {".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 2}, "values": [], "variance": 0}], "type_ref": "sqlalchemy.sql.selectable.ScalarSelect"}, {".class": "Instance", "args": ["builtins.str", {".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 2}], "type_ref": "builtins.dict"}], "bound_args": [], "def_extras": {"first_arg": "self"}, "fallback": "builtins.function", "implicit": false, "is_ellipsis_args": false, "name": "__setstate__ of ScalarSelect", "ret_type": {".class": "NoneType"}, "variables": []}}}, "_from_objects": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "Var", "flags": ["is_initialized_in_class", "is_ready"], "fullname": "sqlalchemy.sql.selectable.ScalarSelect._from_objects", "name": "_from_objects", "type": {".class": "Instance", "args": ["sqlalchemy.sql.selectable.FromClause"], "type_ref": "builtins.list"}}}, "_is_from_container": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "Var", "flags": ["is_initialized_in_class"], "fullname": "sqlalchemy.sql.selectable.ScalarSelect._is_from_container", "name": "_is_from_container", "type": "builtins.bool"}}, "_traverse_internals": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "Var", "flags": ["is_initialized_in_class", "is_ready"], "fullname": "sqlalchemy.sql.selectable.ScalarSelect._traverse_internals", "name": "_traverse_internals", "type": {".class": "TypeAliasType", "args": [], "type_ref": "sqlalchemy.sql.visitors._TraverseInternalsType"}}}, "_ungroup": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "FuncDef", "arg_kinds": [0], "arg_names": ["self"], "flags": [], "fullname": "sqlalchemy.sql.selectable.ScalarSelect._ungroup", "name": "_ungroup", "type": {".class": "CallableType", "arg_kinds": [0], "arg_names": ["self"], "arg_types": [{".class": "Instance", "args": [{".class": "TypeVarType", "fullname": "sqlalchemy.sql.selectable._T", "id": 1, "name": "_T", "upper_bound": {".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 2}, "values": [], "variance": 0}], "type_ref": "sqlalchemy.sql.selectable.ScalarSelect"}], "bound_args": [], "def_extras": {"first_arg": "self"}, "fallback": "builtins.function", "implicit": false, "is_ellipsis_args": false, "name": "_ungroup of ScalarSelect", "ret_type": {".class": "Instance", "args": [{".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 2}], "type_ref": "sqlalchemy.sql.selectable.Select"}, "variables": []}}}, "c": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "Var", "flags": ["is_initialized_in_class"], "fullname": "sqlalchemy.sql.selectable.ScalarSelect.c", "name": "c", "type": {".class": "CallableType", "arg_kinds": [0], "arg_names": ["self"], "arg_types": [{".class": "Instance", "args": [{".class": "TypeVarType", "fullname": "sqlalchemy.sql.selectable._T", "id": 1, "name": "_T", "upper_bound": {".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 2}, "values": [], "variance": 0}], "type_ref": "sqlalchemy.sql.selectable.ScalarSelect"}], "bound_args": [], "def_extras": {"first_arg": "self"}, "fallback": "builtins.function", "implicit": false, "is_ellipsis_args": false, "name": null, "ret_type": {".class": "UninhabitedType", "is_noreturn": true}, "variables": []}}}, "columns": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "Decorator", "func": {".class": "FuncDef", "arg_kinds": [0], "arg_names": ["self"], "flags": ["is_property", "is_decorated"], "fullname": "sqlalchemy.sql.selectable.ScalarSelect.columns", "name": "columns", "type": {".class": "CallableType", "arg_kinds": [0], "arg_names": ["self"], "arg_types": [{".class": "Instance", "args": [{".class": "TypeVarType", "fullname": "sqlalchemy.sql.selectable._T", "id": 1, "name": "_T", "upper_bound": {".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 2}, "values": [], "variance": 0}], "type_ref": "sqlalchemy.sql.selectable.ScalarSelect"}], "bound_args": [], "def_extras": {"first_arg": "self"}, "fallback": "builtins.function", "implicit": false, "is_ellipsis_args": false, "name": "columns of ScalarSelect", "ret_type": {".class": "UninhabitedType", "is_noreturn": true}, "variables": []}}, "is_overload": false, "var": {".class": "Var", "flags": ["is_initialized_in_class", "is_property", "is_ready"], "fullname": null, "name": "columns", "type": {".class": "CallableType", "arg_kinds": [0], "arg_names": ["self"], "arg_types": [{".class": "Instance", "args": [{".class": "TypeVarType", "fullname": "sqlalchemy.sql.selectable._T", "id": 1, "name": "_T", "upper_bound": {".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 2}, "values": [], "variance": 0}], "type_ref": "sqlalchemy.sql.selectable.ScalarSelect"}], "bound_args": [], "def_extras": {"first_arg": "self"}, "fallback": "builtins.function", "implicit": false, "is_ellipsis_args": false, "name": "columns of ScalarSelect", "ret_type": {".class": "UninhabitedType", "is_noreturn": true}, "variables": []}}}}, "correlate": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "Decorator", "func": {".class": "FuncDef", "arg_kinds": [0, 2], "arg_names": ["self", "fromclauses"], "flags": ["is_decorated"], "fullname": "sqlalchemy.sql.selectable.ScalarSelect.correlate", "name": "correlate", "type": {".class": "CallableType", "arg_kinds": [0, 2], "arg_names": ["self", "fromclauses"], "arg_types": [{".class": "Instance", "args": [{".class": "TypeVarType", "fullname": "sqlalchemy.sql.selectable._T", "id": 1, "name": "_T", "upper_bound": {".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 2}, "values": [], "variance": 0}], "type_ref": "sqlalchemy.sql.selectable.ScalarSelect"}, {".class": "UnionType", "items": [{".class": "NoneType"}, {".class": "LiteralType", "fallback": "builtins.bool", "value": false}, {".class": "TypeAliasType", "args": [], "type_ref": "sqlalchemy.sql._typing._FromClauseArgument"}]}], "bound_args": [], "def_extras": {"first_arg": "self"}, "fallback": "builtins.function", "implicit": false, "is_ellipsis_args": false, "name": "correlate of ScalarSelect", "ret_type": {".class": "AnyType", "missing_import_name": "sqlalchemy.util.typing.Self", "source_any": null, "type_of_any": 3}, "variables": []}}, "is_overload": false, "var": {".class": "Var", "flags": ["is_initialized_in_class", "is_ready"], "fullname": null, "name": "correlate", "type": {".class": "CallableType", "arg_kinds": [0, 2], "arg_names": ["self", "fromclauses"], "arg_types": [{".class": "Instance", "args": [{".class": "TypeVarType", "fullname": "sqlalchemy.sql.selectable._T", "id": 1, "name": "_T", "upper_bound": {".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 2}, "values": [], "variance": 0}], "type_ref": "sqlalchemy.sql.selectable.ScalarSelect"}, {".class": "UnionType", "items": [{".class": "NoneType"}, {".class": "LiteralType", "fallback": "builtins.bool", "value": false}, {".class": "TypeAliasType", "args": [], "type_ref": "sqlalchemy.sql._typing._FromClauseArgument"}]}], "bound_args": [], "def_extras": {"first_arg": "self"}, "fallback": "builtins.function", "implicit": false, "is_ellipsis_args": false, "name": "correlate of ScalarSelect", "ret_type": {".class": "AnyType", "missing_import_name": "sqlalchemy.util.typing.Self", "source_any": null, "type_of_any": 3}, "variables": []}}}}, "correlate_except": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "Decorator", "func": {".class": "FuncDef", "arg_kinds": [0, 2], "arg_names": ["self", "fromclauses"], "flags": ["is_decorated"], "fullname": "sqlalchemy.sql.selectable.ScalarSelect.correlate_except", "name": "correlate_except", "type": {".class": "CallableType", "arg_kinds": [0, 2], "arg_names": ["self", "fromclauses"], "arg_types": [{".class": "Instance", "args": [{".class": "TypeVarType", "fullname": "sqlalchemy.sql.selectable._T", "id": 1, "name": "_T", "upper_bound": {".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 2}, "values": [], "variance": 0}], "type_ref": "sqlalchemy.sql.selectable.ScalarSelect"}, {".class": "UnionType", "items": [{".class": "NoneType"}, {".class": "LiteralType", "fallback": "builtins.bool", "value": false}, {".class": "TypeAliasType", "args": [], "type_ref": "sqlalchemy.sql._typing._FromClauseArgument"}]}], "bound_args": [], "def_extras": {"first_arg": "self"}, "fallback": "builtins.function", "implicit": false, "is_ellipsis_args": false, "name": "correlate_except of ScalarSelect", "ret_type": {".class": "AnyType", "missing_import_name": "sqlalchemy.util.typing.Self", "source_any": null, "type_of_any": 3}, "variables": []}}, "is_overload": false, "var": {".class": "Var", "flags": ["is_initialized_in_class", "is_ready"], "fullname": null, "name": "correlate_except", "type": {".class": "CallableType", "arg_kinds": [0, 2], "arg_names": ["self", "fromclauses"], "arg_types": [{".class": "Instance", "args": [{".class": "TypeVarType", "fullname": "sqlalchemy.sql.selectable._T", "id": 1, "name": "_T", "upper_bound": {".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 2}, "values": [], "variance": 0}], "type_ref": "sqlalchemy.sql.selectable.ScalarSelect"}, {".class": "UnionType", "items": [{".class": "NoneType"}, {".class": "LiteralType", "fallback": "builtins.bool", "value": false}, {".class": "TypeAliasType", "args": [], "type_ref": "sqlalchemy.sql._typing._FromClauseArgument"}]}], "bound_args": [], "def_extras": {"first_arg": "self"}, "fallback": "builtins.function", "implicit": false, "is_ellipsis_args": false, "name": "correlate_except of ScalarSelect", "ret_type": {".class": "AnyType", "missing_import_name": "sqlalchemy.util.typing.Self", "source_any": null, "type_of_any": 3}, "variables": []}}}}, "element": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "Var", "flags": ["is_initialized_in_class", "is_ready"], "fullname": "sqlalchemy.sql.selectable.ScalarSelect.element", "name": "element", "type": "sqlalchemy.sql.selectable.SelectBase"}}, "inherit_cache": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "Var", "flags": ["is_initialized_in_class"], "fullname": "sqlalchemy.sql.selectable.ScalarSelect.inherit_cache", "name": "inherit_cache", "type": "builtins.bool"}}, "self_group": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "OverloadedFuncDef", "flags": [], "fullname": "sqlalchemy.sql.selectable.ScalarSelect.self_group", "impl": {".class": "FuncDef", "arg_kinds": [0, 1], "arg_names": ["self", "against"], "flags": ["is_overload"], "fullname": "sqlalchemy.sql.selectable.ScalarSelect.self_group", "name": "self_group", "type": {".class": "CallableType", "arg_kinds": [0, 1], "arg_names": ["self", "against"], "arg_types": [{".class": "Instance", "args": [{".class": "TypeVarType", "fullname": "sqlalchemy.sql.selectable._T", "id": 1, "name": "_T", "upper_bound": {".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 2}, "values": [], "variance": 0}], "type_ref": "sqlalchemy.sql.selectable.ScalarSelect"}, {".class": "UnionType", "items": ["sqlalchemy.sql.operators.OperatorType", {".class": "NoneType"}]}], "bound_args": [], "def_extras": {"first_arg": "self"}, "fallback": "builtins.function", "implicit": false, "is_ellipsis_args": false, "name": "self_group of ScalarSelect", "ret_type": {".class": "Instance", "args": [{".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 2}], "type_ref": "sqlalchemy.sql.elements.ColumnElement"}, "variables": []}}, "items": [{".class": "Decorator", "func": {".class": "FuncDef", "arg_kinds": [0, 1], "arg_names": ["self", "against"], "flags": ["is_overload", "is_decorated"], "fullname": "sqlalchemy.sql.selectable.ScalarSelect.self_group", "name": "self_group", "type": {".class": "CallableType", "arg_kinds": [0, 1], "arg_names": ["self", "against"], "arg_types": [{".class": "Instance", "args": [{".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 2}], "type_ref": "sqlalchemy.sql.selectable.ScalarSelect"}, {".class": "UnionType", "items": ["sqlalchemy.sql.operators.OperatorType", {".class": "NoneType"}]}], "bound_args": [], "def_extras": {"first_arg": "self"}, "fallback": "builtins.function", "implicit": false, "is_ellipsis_args": false, "name": "self_group of ScalarSelect", "ret_type": {".class": "Instance", "args": [{".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 2}], "type_ref": "sqlalchemy.sql.selectable.ScalarSelect"}, "variables": []}}, "is_overload": true, "var": {".class": "Var", "flags": [], "fullname": null, "name": "self_group", "type": null}}, {".class": "Decorator", "func": {".class": "FuncDef", "arg_kinds": [0, 1], "arg_names": ["self", "against"], "flags": ["is_overload", "is_decorated"], "fullname": "sqlalchemy.sql.selectable.ScalarSelect.self_group", "name": "self_group", "type": {".class": "CallableType", "arg_kinds": [0, 1], "arg_names": ["self", "against"], "arg_types": [{".class": "Instance", "args": [{".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 2}], "type_ref": "sqlalchemy.sql.elements.ColumnElement"}, {".class": "UnionType", "items": ["sqlalchemy.sql.operators.OperatorType", {".class": "NoneType"}]}], "bound_args": [], "def_extras": {"first_arg": "self"}, "fallback": "builtins.function", "implicit": false, "is_ellipsis_args": false, "name": "self_group of ScalarSelect", "ret_type": {".class": "Instance", "args": [{".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 2}], "type_ref": "sqlalchemy.sql.elements.ColumnElement"}, "variables": []}}, "is_overload": true, "var": {".class": "Var", "flags": [], "fullname": null, "name": "self_group", "type": null}}], "type": {".class": "Overloaded", "items": [{".class": "CallableType", "arg_kinds": [0, 1], "arg_names": ["self", "against"], "arg_types": [{".class": "Instance", "args": [{".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 2}], "type_ref": "sqlalchemy.sql.selectable.ScalarSelect"}, {".class": "UnionType", "items": ["sqlalchemy.sql.operators.OperatorType", {".class": "NoneType"}]}], "bound_args": [], "def_extras": {"first_arg": "self"}, "fallback": "builtins.function", "implicit": false, "is_ellipsis_args": false, "name": "self_group of ScalarSelect", "ret_type": {".class": "Instance", "args": [{".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 2}], "type_ref": "sqlalchemy.sql.selectable.ScalarSelect"}, "variables": []}, {".class": "CallableType", "arg_kinds": [0, 1], "arg_names": ["self", "against"], "arg_types": [{".class": "Instance", "args": [{".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 2}], "type_ref": "sqlalchemy.sql.elements.ColumnElement"}, {".class": "UnionType", "items": ["sqlalchemy.sql.operators.OperatorType", {".class": "NoneType"}]}], "bound_args": [], "def_extras": {"first_arg": "self"}, "fallback": "builtins.function", "implicit": false, "is_ellipsis_args": false, "name": "self_group of ScalarSelect", "ret_type": {".class": "Instance", "args": [{".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 2}], "type_ref": "sqlalchemy.sql.elements.ColumnElement"}, "variables": []}]}}}, "where": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "Decorator", "func": {".class": "FuncDef", "arg_kinds": [0, 0], "arg_names": ["self", "crit"], "flags": ["is_decorated"], "fullname": "sqlalchemy.sql.selectable.ScalarSelect.where", "name": "where", "type": {".class": "CallableType", "arg_kinds": [0, 0], "arg_names": ["self", "crit"], "arg_types": [{".class": "Instance", "args": [{".class": "TypeVarType", "fullname": "sqlalchemy.sql.selectable._T", "id": 1, "name": "_T", "upper_bound": {".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 2}, "values": [], "variance": 0}], "type_ref": "sqlalchemy.sql.selectable.ScalarSelect"}, {".class": "TypeAliasType", "args": ["builtins.bool"], "type_ref": "sqlalchemy.sql._typing._ColumnExpressionArgument"}], "bound_args": [], "def_extras": {"first_arg": "self"}, "fallback": "builtins.function", "implicit": false, "is_ellipsis_args": false, "name": "where of ScalarSelect", "ret_type": {".class": "AnyType", "missing_import_name": "sqlalchemy.util.typing.Self", "source_any": null, "type_of_any": 3}, "variables": []}}, "is_overload": false, "var": {".class": "Var", "flags": ["is_initialized_in_class", "is_ready"], "fullname": null, "name": "where", "type": {".class": "CallableType", "arg_kinds": [0, 0], "arg_names": ["self", "crit"], "arg_types": [{".class": "Instance", "args": [{".class": "TypeVarType", "fullname": "sqlalchemy.sql.selectable._T", "id": 1, "name": "_T", "upper_bound": {".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 2}, "values": [], "variance": 0}], "type_ref": "sqlalchemy.sql.selectable.ScalarSelect"}, {".class": "TypeAliasType", "args": ["builtins.bool"], "type_ref": "sqlalchemy.sql._typing._ColumnExpressionArgument"}], "bound_args": [], "def_extras": {"first_arg": "self"}, "fallback": "builtins.function", "implicit": false, "is_ellipsis_args": false, "name": "where of ScalarSelect", "ret_type": {".class": "AnyType", "missing_import_name": "sqlalchemy.util.typing.Self", "source_any": null, "type_of_any": 3}, "variables": []}}}}}, "tuple_type": null, "type_vars": ["_T"], "typeddict_type": null}}, "ScalarValues": {".class": "SymbolTableNode", "kind": "Gdef", "node": {".class": "TypeInfo", "_promote": null, "abstract_attributes": [], "bases": ["sqlalchemy.sql.roles.InElementRole", "sqlalchemy.sql.elements.GroupedElement", {".class": "Instance", "args": [{".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 2}], "type_ref": "sqlalchemy.sql.elements.ColumnElement"}], "declared_metaclass": null, "defn": {".class": "ClassDef", "fullname": "sqlalchemy.sql.selectable.ScalarValues", "name": "ScalarValues", "type_vars": []}, "flags": [], "fullname": "sqlalchemy.sql.selectable.ScalarValues", "metaclass_type": null, "metadata": {}, "module_name": "sqlalchemy.sql.selectable", "mro": ["sqlalchemy.sql.selectable.ScalarValues", "sqlalchemy.sql.roles.InElementRole", "sqlalchemy.sql.elements.GroupedElement", "sqlalchemy.sql.elements.ColumnElement", "sqlalchemy.sql.roles.ColumnArgumentOrKeyRole", "sqlalchemy.sql.roles.ColumnArgumentRole", "sqlalchemy.sql.roles.StatementOptionRole", "sqlalchemy.sql.roles.WhereHavingRole", "sqlalchemy.sql.roles.OnClauseRole", "sqlalchemy.sql.roles.BinaryElementRole", "sqlalchemy.sql.roles.OrderByRole", "sqlalchemy.sql.roles.ColumnsClauseRole", "sqlalchemy.sql.roles.AllowsLambdaRole", "sqlalchemy.sql.roles.ByOfRole", "sqlalchemy.sql.roles.UsesInspection", "sqlalchemy.sql.roles.ColumnListRole", "sqlalchemy.sql.roles.LimitOffsetRole", "sqlalchemy.sql.roles.DMLColumnRole", "sqlalchemy.sql.roles.DDLConstraintColumnRole", "sqlalchemy.sql.roles.DDLExpressionRole", "sqlalchemy.sql.roles.StructuralRole", "sqlalchemy.sql.elements.SQLColumnExpression", "sqlalchemy.sql.elements.SQLCoreOperations", "sqlalchemy.sql.operators.ColumnOperators", "sqlalchemy.sql.operators.Operators", "sqlalchemy.sql.roles.ExpressionElementRole", "sqlalchemy.util.langhelpers.TypingOnly", "sqlalchemy.sql.roles.TypedColumnsClauseRole", "sqlalchemy.sql.roles.SQLRole", "sqlalchemy.sql.elements.DQLDMLClauseElement", "sqlalchemy.sql.elements.ClauseElement", "sqlalchemy.sql.annotation.SupportsWrappingAnnotations", "sqlalchemy.sql.annotation.SupportsAnnotations", "sqlalchemy.sql.cache_key.MemoizedHasCacheKey", "sqlalchemy.sql.cache_key.HasCacheKey", "sqlalchemy.util.langhelpers.HasMemoized", "sqlalchemy.sql.traversals.HasCopyInternals", "sqlalchemy.sql.visitors.ExternallyTraversible", "sqlalchemy.sql.visitors.HasTraverseInternals", "sqlalchemy.sql.elements.CompilerElement", "sqlalchemy.sql.visitors.Visitable", "builtins.object"], "names": {".class": "SymbolTable", "__clause_element__": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "FuncDef", "arg_kinds": [0], "arg_names": ["self"], "flags": [], "fullname": "sqlalchemy.sql.selectable.ScalarValues.__clause_element__", "name": "__clause_element__", "type": {".class": "CallableType", "arg_kinds": [0], "arg_names": ["self"], "arg_types": ["sqlalchemy.sql.selectable.ScalarValues"], "bound_args": [], "def_extras": {"first_arg": "self"}, "fallback": "builtins.function", "implicit": false, "is_ellipsis_args": false, "name": "__clause_element__ of ScalarValues", "ret_type": "sqlalchemy.sql.selectable.ScalarValues", "variables": []}}}, "__init__": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "FuncDef", "arg_kinds": [0, 0, 0, 0], "arg_names": ["self", "columns", "data", "literal_binds"], "flags": [], "fullname": "sqlalchemy.sql.selectable.ScalarValues.__init__", "name": "__init__", "type": {".class": "CallableType", "arg_kinds": [0, 0, 0, 0], "arg_names": ["self", "columns", "data", "literal_binds"], "arg_types": ["sqlalchemy.sql.selectable.ScalarValues", {".class": "Instance", "args": [{".class": "Instance", "args": [{".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 2}], "type_ref": "sqlalchemy.sql.elements.ColumnClause"}], "type_ref": "typing.Sequence"}, {".class": "Instance", "args": [{".class": "Instance", "args": [{".class": "Instance", "args": [{".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 2}], "type_ref": "builtins.tuple"}], "type_ref": "builtins.list"}], "type_ref": "builtins.tuple"}, "builtins.bool"], "bound_args": [], "def_extras": {"first_arg": "self"}, "fallback": "builtins.function", "implicit": false, "is_ellipsis_args": false, "name": "__init__ of ScalarValues", "ret_type": {".class": "NoneType"}, "variables": []}}}, "__visit_name__": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "Var", "flags": ["is_initialized_in_class", "is_ready"], "fullname": "sqlalchemy.sql.selectable.ScalarValues.__visit_name__", "name": "__visit_name__", "type": "builtins.str"}}, "_column_args": {".class": "SymbolTableNode", "implicit": true, "kind": "Mdef", "node": {".class": "Var", "flags": [], "fullname": "sqlalchemy.sql.selectable.ScalarValues._column_args", "name": "_column_args", "type": {".class": "Instance", "args": [{".class": "Instance", "args": [{".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 2}], "type_ref": "sqlalchemy.sql.elements.ColumnClause"}], "type_ref": "typing.Sequence"}}}, "_column_types": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "Decorator", "func": {".class": "FuncDef", "arg_kinds": [0], "arg_names": ["self"], "flags": ["is_property", "is_decorated"], "fullname": "sqlalchemy.sql.selectable.ScalarValues._column_types", "name": "_column_types", "type": {".class": "CallableType", "arg_kinds": [0], "arg_names": ["self"], "arg_types": ["sqlalchemy.sql.selectable.ScalarValues"], "bound_args": [], "def_extras": {"first_arg": "self"}, "fallback": "builtins.function", "implicit": false, "is_ellipsis_args": false, "name": "_column_types of ScalarValues", "ret_type": {".class": "Instance", "args": [{".class": "Instance", "args": [{".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 2}], "type_ref": "sqlalchemy.sql.type_api.TypeEngine"}], "type_ref": "builtins.list"}, "variables": []}}, "is_overload": false, "var": {".class": "Var", "flags": ["is_initialized_in_class", "is_property", "is_ready"], "fullname": null, "name": "_column_types", "type": {".class": "CallableType", "arg_kinds": [0], "arg_names": ["self"], "arg_types": ["sqlalchemy.sql.selectable.ScalarValues"], "bound_args": [], "def_extras": {"first_arg": "self"}, "fallback": "builtins.function", "implicit": false, "is_ellipsis_args": false, "name": "_column_types of ScalarValues", "ret_type": {".class": "Instance", "args": [{".class": "Instance", "args": [{".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 2}], "type_ref": "sqlalchemy.sql.type_api.TypeEngine"}], "type_ref": "builtins.list"}, "variables": []}}}}, "_data": {".class": "SymbolTableNode", "implicit": true, "kind": "Mdef", "node": {".class": "Var", "flags": [], "fullname": "sqlalchemy.sql.selectable.ScalarValues._data", "name": "_data", "type": {".class": "Instance", "args": [{".class": "Instance", "args": [{".class": "Instance", "args": [{".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 2}], "type_ref": "builtins.tuple"}], "type_ref": "builtins.list"}], "type_ref": "builtins.tuple"}}}, "_traverse_internals": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "Var", "flags": ["is_initialized_in_class", "is_ready"], "fullname": "sqlalchemy.sql.selectable.ScalarValues._traverse_internals", "name": "_traverse_internals", "type": {".class": "TypeAliasType", "args": [], "type_ref": "sqlalchemy.sql.visitors._TraverseInternalsType"}}}, "literal_binds": {".class": "SymbolTableNode", "implicit": true, "kind": "Mdef", "node": {".class": "Var", "flags": [], "fullname": "sqlalchemy.sql.selectable.ScalarValues.literal_binds", "name": "literal_binds", "type": "builtins.bool"}}}, "tuple_type": null, "type_vars": [], "typeddict_type": null}}, "Select": {".class": "SymbolTableNode", "kind": "Gdef", "node": {".class": "TypeInfo", "_promote": null, "abstract_attributes": [], "bases": ["sqlalchemy.sql.selectable.HasPrefixes", "sqlalchemy.sql.selectable.HasSuffixes", "sqlalchemy.sql.selectable.HasHints", "sqlalchemy.sql.base.HasCompileState", "sqlalchemy.sql.selectable._SelectFromElements", "sqlalchemy.sql.selectable.GenerativeSelect", {".class": "Instance", "args": [{".class": "TypeVarType", "fullname": "sqlalchemy.sql._typing._TP", "id": 1, "name": "_TP", "upper_bound": {".class": "Instance", "args": [{".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 2}], "type_ref": "builtins.tuple"}, "values": [], "variance": 0}], "type_ref": "sqlalchemy.sql.selectable.TypedReturnsRows"}], "declared_metaclass": null, "defn": {".class": "ClassDef", "fullname": "sqlalchemy.sql.selectable.Select", "name": "Select", "type_vars": [{".class": "TypeVarDef", "fullname": "sqlalchemy.sql._typing._TP", "id": 1, "name": "_TP", "upper_bound": {".class": "Instance", "args": [{".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 2}], "type_ref": "builtins.tuple"}, "values": [], "variance": 0}]}, "flags": [], "fullname": "sqlalchemy.sql.selectable.Select", "metaclass_type": null, "metadata": {}, "module_name": "sqlalchemy.sql.selectable", "mro": ["sqlalchemy.sql.selectable.Select", "sqlalchemy.sql.selectable.HasPrefixes", "sqlalchemy.sql.selectable.HasSuffixes", "sqlalchemy.sql.selectable.HasHints", "sqlalchemy.sql.base.HasCompileState", "sqlalchemy.sql.selectable._SelectFromElements", "sqlalchemy.sql.selectable.GenerativeSelect", "sqlalchemy.sql.selectable.SelectBase", "sqlalchemy.sql.roles.SelectStatementRole", "sqlalchemy.sql.selectable.TypedReturnsRows", "sqlalchemy.sql.selectable.ExecutableReturnsRows", "sqlalchemy.sql.base.Executable", "sqlalchemy.sql.roles.StatementRole", "sqlalchemy.sql.roles.DMLSelectRole", "sqlalchemy.sql.roles.CompoundElementRole", "sqlalchemy.sql.roles.AllowsLambdaRole", "sqlalchemy.sql.roles.InElementRole", "sqlalchemy.sql.selectable.HasCTE", "sqlalchemy.sql.roles.HasCTERole", "sqlalchemy.sql.selectable.SelectsRows", "sqlalchemy.sql.annotation.SupportsCloneAnnotations", "sqlalchemy.sql.selectable.Selectable", "sqlalchemy.sql.selectable.ReturnsRows", "sqlalchemy.sql.roles.ReturnsRowsRole", "sqlalchemy.sql.roles.SQLRole", "sqlalchemy.sql.elements.DQLDMLClauseElement", "sqlalchemy.sql.elements.ClauseElement", "sqlalchemy.sql.annotation.SupportsWrappingAnnotations", "sqlalchemy.sql.annotation.SupportsAnnotations", "sqlalchemy.sql.cache_key.MemoizedHasCacheKey", "sqlalchemy.sql.cache_key.HasCacheKey", "sqlalchemy.sql.base.Generative", "sqlalchemy.util.langhelpers.HasMemoized", "sqlalchemy.sql.traversals.HasCopyInternals", "sqlalchemy.sql.visitors.ExternallyTraversible", "sqlalchemy.sql.visitors.HasTraverseInternals", "sqlalchemy.sql.elements.CompilerElement", "sqlalchemy.sql.visitors.Visitable", "builtins.object"], "names": {".class": "SymbolTable", "__init__": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "FuncDef", "arg_kinds": [0, 2], "arg_names": ["self", "entities"], "flags": [], "fullname": "sqlalchemy.sql.selectable.Select.__init__", "name": "__init__", "type": {".class": "CallableType", "arg_kinds": [0, 2], "arg_names": ["self", "entities"], "arg_types": [{".class": "Instance", "args": [{".class": "TypeVarType", "fullname": "sqlalchemy.sql._typing._TP", "id": 1, "name": "_TP", "upper_bound": {".class": "Instance", "args": [{".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 2}], "type_ref": "builtins.tuple"}, "values": [], "variance": 0}], "type_ref": "sqlalchemy.sql.selectable.Select"}, {".class": "TypeAliasType", "args": [{".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 2}], "type_ref": "sqlalchemy.sql._typing._ColumnsClauseArgument"}], "bound_args": [], "def_extras": {"first_arg": "self"}, "fallback": "builtins.function", "implicit": false, "is_ellipsis_args": false, "name": "__init__ of Select", "ret_type": {".class": "NoneType"}, "variables": []}}}, "__visit_name__": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "Var", "flags": ["is_initialized_in_class", "is_ready"], "fullname": "sqlalchemy.sql.selectable.Select.__visit_name__", "name": "__visit_name__", "type": "builtins.str"}}, "_all_selected_columns": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "Decorator", "func": {".class": "FuncDef", "arg_kinds": [0], "arg_names": ["self"], "flags": ["is_property", "is_decorated"], "fullname": "sqlalchemy.sql.selectable.Select._all_selected_columns", "name": "_all_selected_columns", "type": {".class": "CallableType", "arg_kinds": [0], "arg_names": ["self"], "arg_types": [{".class": "Instance", "args": [{".class": "TypeVarType", "fullname": "sqlalchemy.sql._typing._TP", "id": 1, "name": "_TP", "upper_bound": {".class": "Instance", "args": [{".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 2}], "type_ref": "builtins.tuple"}, "values": [], "variance": 0}], "type_ref": "sqlalchemy.sql.selectable.Select"}], "bound_args": [], "def_extras": {"first_arg": "self"}, "fallback": "builtins.function", "implicit": false, "is_ellipsis_args": false, "name": "_all_selected_columns of Select", "ret_type": {".class": "TypeAliasType", "args": [], "type_ref": "sqlalchemy.sql.selectable._SelectIterable"}, "variables": []}}, "is_overload": false, "var": {".class": "Var", "flags": ["is_initialized_in_class", "is_property", "is_ready"], "fullname": null, "name": "_all_selected_columns", "type": {".class": "CallableType", "arg_kinds": [0], "arg_names": ["self"], "arg_types": [{".class": "Instance", "args": [{".class": "TypeVarType", "fullname": "sqlalchemy.sql._typing._TP", "id": 1, "name": "_TP", "upper_bound": {".class": "Instance", "args": [{".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 2}], "type_ref": "builtins.tuple"}, "values": [], "variance": 0}], "type_ref": "sqlalchemy.sql.selectable.Select"}], "bound_args": [], "def_extras": {"first_arg": "self"}, "fallback": "builtins.function", "implicit": false, "is_ellipsis_args": false, "name": "_all_selected_columns of Select", "ret_type": {".class": "TypeAliasType", "args": [], "type_ref": "sqlalchemy.sql.selectable._SelectIterable"}, "variables": []}}}}, "_auto_correlate": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "Var", "flags": ["is_initialized_in_class"], "fullname": "sqlalchemy.sql.selectable.Select._auto_correlate", "name": "_auto_correlate", "type": "builtins.bool"}}, "_cache_key_traversal": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "Var", "flags": ["is_initialized_in_class", "is_ready"], "fullname": "sqlalchemy.sql.selectable.Select._cache_key_traversal", "name": "_cache_key_traversal", "type": {".class": "TypeAliasType", "args": [], "type_ref": "sqlalchemy.sql.cache_key._CacheKeyTraversalType"}}}, "_compile_options": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "Var", "flags": ["is_initialized_in_class", "is_ready"], "fullname": "sqlalchemy.sql.selectable.Select._compile_options", "name": "_compile_options", "type": "sqlalchemy.sql.base.CacheableOptions"}}, "_compile_state_factory": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "Var", "flags": ["is_initialized_in_class", "is_ready"], "fullname": "sqlalchemy.sql.selectable.Select._compile_state_factory", "name": "_compile_state_factory", "type": {".class": "TypeType", "item": "sqlalchemy.sql.selectable.SelectState"}}}, "_copy_internals": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "FuncDef", "arg_kinds": [0, 1, 4], "arg_names": ["self", "clone", "kw"], "flags": [], "fullname": "sqlalchemy.sql.selectable.Select._copy_internals", "name": "_copy_internals", "type": {".class": "CallableType", "arg_kinds": [0, 1, 4], "arg_names": ["self", "clone", "kw"], "arg_types": [{".class": "Instance", "args": [{".class": "TypeVarType", "fullname": "sqlalchemy.sql._typing._TP", "id": 1, "name": "_TP", "upper_bound": {".class": "Instance", "args": [{".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 2}], "type_ref": "builtins.tuple"}, "values": [], "variance": 0}], "type_ref": "sqlalchemy.sql.selectable.Select"}, "sqlalchemy.sql.visitors._CloneCallableType", {".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 2}], "bound_args": [], "def_extras": {"first_arg": "self"}, "fallback": "builtins.function", "implicit": false, "is_ellipsis_args": false, "name": "_copy_internals of Select", "ret_type": {".class": "NoneType"}, "variables": []}}}, "_correlate": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "Var", "flags": ["is_initialized_in_class", "is_ready"], "fullname": "sqlalchemy.sql.selectable.Select._correlate", "name": "_correlate", "type": {".class": "Instance", "args": ["sqlalchemy.sql.selectable.FromClause"], "type_ref": "builtins.tuple"}}}, "_correlate_except": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "Var", "flags": ["is_initialized_in_class", "is_ready"], "fullname": "sqlalchemy.sql.selectable.Select._correlate_except", "name": "_correlate_except", "type": {".class": "UnionType", "items": [{".class": "Instance", "args": ["sqlalchemy.sql.selectable.FromClause"], "type_ref": "builtins.tuple"}, {".class": "NoneType"}]}}}, "_create_raw_select": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "Decorator", "func": {".class": "FuncDef", "arg_kinds": [0, 4], "arg_names": ["cls", "kw"], "flags": ["is_class", "is_decorated"], "fullname": "sqlalchemy.sql.selectable.Select._create_raw_select", "name": "_create_raw_select", "type": {".class": "CallableType", "arg_kinds": [0, 4], "arg_names": ["cls", "kw"], "arg_types": [{".class": "TypeType", "item": {".class": "Instance", "args": [{".class": "TypeVarType", "fullname": "sqlalchemy.sql._typing._TP", "id": 1, "name": "_TP", "upper_bound": {".class": "Instance", "args": [{".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 2}], "type_ref": "builtins.tuple"}, "values": [], "variance": 0}], "type_ref": "sqlalchemy.sql.selectable.Select"}}, {".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 2}], "bound_args": [], "def_extras": {"first_arg": "cls"}, "fallback": "builtins.function", "implicit": false, "is_ellipsis_args": false, "name": "_create_raw_select of Select", "ret_type": {".class": "Instance", "args": [{".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 2}], "type_ref": "sqlalchemy.sql.selectable.Select"}, "variables": []}}, "is_overload": false, "var": {".class": "Var", "flags": ["is_initialized_in_class", "is_classmethod", "is_ready"], "fullname": null, "name": "_create_raw_select", "type": {".class": "CallableType", "arg_kinds": [0, 4], "arg_names": ["cls", "kw"], "arg_types": [{".class": "TypeType", "item": {".class": "Instance", "args": [{".class": "TypeVarType", "fullname": "sqlalchemy.sql._typing._TP", "id": 1, "name": "_TP", "upper_bound": {".class": "Instance", "args": [{".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 2}], "type_ref": "builtins.tuple"}, "values": [], "variance": 0}], "type_ref": "sqlalchemy.sql.selectable.Select"}}, {".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 2}], "bound_args": [], "def_extras": {"first_arg": "cls"}, "fallback": "builtins.function", "implicit": false, "is_ellipsis_args": false, "name": "_create_raw_select of Select", "ret_type": {".class": "Instance", "args": [{".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 2}], "type_ref": "sqlalchemy.sql.selectable.Select"}, "variables": []}}}}, "_distinct": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "Var", "flags": ["is_initialized_in_class", "is_ready"], "fullname": "sqlalchemy.sql.selectable.Select._distinct", "name": "_distinct", "type": "builtins.bool"}}, "_distinct_on": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "Var", "flags": ["is_initialized_in_class", "is_ready"], "fullname": "sqlalchemy.sql.selectable.Select._distinct_on", "name": "_distinct_on", "type": {".class": "Instance", "args": [{".class": "Instance", "args": [{".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 2}], "type_ref": "sqlalchemy.sql.elements.ColumnElement"}], "type_ref": "builtins.tuple"}}}, "_ensure_disambiguated_names": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "FuncDef", "arg_kinds": [0], "arg_names": ["self"], "flags": [], "fullname": "sqlalchemy.sql.selectable.Select._ensure_disambiguated_names", "name": "_ensure_disambiguated_names", "type": {".class": "CallableType", "arg_kinds": [0], "arg_names": ["self"], "arg_types": [{".class": "Instance", "args": [{".class": "TypeVarType", "fullname": "sqlalchemy.sql._typing._TP", "id": 1, "name": "_TP", "upper_bound": {".class": "Instance", "args": [{".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 2}], "type_ref": "builtins.tuple"}, "values": [], "variance": 0}], "type_ref": "sqlalchemy.sql.selectable.Select"}], "bound_args": [], "def_extras": {"first_arg": "self"}, "fallback": "builtins.function", "implicit": false, "is_ellipsis_args": false, "name": "_ensure_disambiguated_names of Select", "ret_type": {".class": "Instance", "args": [{".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 2}], "type_ref": "sqlalchemy.sql.selectable.Select"}, "variables": []}}}, "_filter_by_zero": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "FuncDef", "arg_kinds": [0], "arg_names": ["self"], "flags": [], "fullname": "sqlalchemy.sql.selectable.Select._filter_by_zero", "name": "_filter_by_zero", "type": {".class": "CallableType", "arg_kinds": [0], "arg_names": ["self"], "arg_types": [{".class": "Instance", "args": [{".class": "TypeVarType", "fullname": "sqlalchemy.sql._typing._TP", "id": 1, "name": "_TP", "upper_bound": {".class": "Instance", "args": [{".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 2}], "type_ref": "builtins.tuple"}, "values": [], "variance": 0}], "type_ref": "sqlalchemy.sql.selectable.Select"}], "bound_args": [], "def_extras": {"first_arg": "self"}, "fallback": "builtins.function", "implicit": false, "is_ellipsis_args": false, "name": "_filter_by_zero of Select", "ret_type": {".class": "UnionType", "items": ["sqlalchemy.sql.selectable.FromClause", "sqlalchemy.sql.selectable._JoinTargetProtocol", {".class": "Instance", "args": [{".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 2}], "type_ref": "sqlalchemy.sql.elements.ColumnElement"}, "sqlalchemy.sql.elements.TextClause"]}, "variables": []}}}, "_from_obj": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "Var", "flags": ["is_initialized_in_class", "is_ready"], "fullname": "sqlalchemy.sql.selectable.Select._from_obj", "name": "_from_obj", "type": {".class": "Instance", "args": ["sqlalchemy.sql.selectable.FromClause"], "type_ref": "builtins.tuple"}}}, "_generate_fromclause_column_proxies": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "FuncDef", "arg_kinds": [0, 0, 5], "arg_names": ["self", "subquery", "proxy_compound_columns"], "flags": [], "fullname": "sqlalchemy.sql.selectable.Select._generate_fromclause_column_proxies", "name": "_generate_fromclause_column_proxies", "type": {".class": "CallableType", "arg_kinds": [0, 0, 5], "arg_names": ["self", "subquery", "proxy_compound_columns"], "arg_types": [{".class": "Instance", "args": [{".class": "TypeVarType", "fullname": "sqlalchemy.sql._typing._TP", "id": 1, "name": "_TP", "upper_bound": {".class": "Instance", "args": [{".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 2}], "type_ref": "builtins.tuple"}, "values": [], "variance": 0}], "type_ref": "sqlalchemy.sql.selectable.Select"}, "sqlalchemy.sql.selectable.FromClause", {".class": "UnionType", "items": [{".class": "Instance", "args": [{".class": "Instance", "args": [{".class": "Instance", "args": [{".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 2}], "type_ref": "sqlalchemy.sql.elements.ColumnElement"}], "type_ref": "typing.Sequence"}], "type_ref": "typing.Iterable"}, {".class": "NoneType"}]}], "bound_args": [], "def_extras": {"first_arg": "self"}, "fallback": "builtins.function", "implicit": false, "is_ellipsis_args": false, "name": "_generate_fromclause_column_proxies of Select", "ret_type": {".class": "NoneType"}, "variables": []}}}, "_having_criteria": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "Var", "flags": ["is_initialized_in_class", "is_ready"], "fullname": "sqlalchemy.sql.selectable.Select._having_criteria", "name": "_having_criteria", "type": {".class": "Instance", "args": [{".class": "Instance", "args": [{".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 2}], "type_ref": "sqlalchemy.sql.elements.ColumnElement"}], "type_ref": "builtins.tuple"}}}, "_is_select_statement": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "Var", "flags": ["is_initialized_in_class"], "fullname": "sqlalchemy.sql.selectable.Select._is_select_statement", "name": "_is_select_statement", "type": "builtins.bool"}}, "_memoized_select_entities": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "Var", "flags": ["is_initialized_in_class", "is_ready"], "fullname": "sqlalchemy.sql.selectable.Select._memoized_select_entities", "name": "_memoized_select_entities", "type": {".class": "Instance", "args": [{".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 2}], "type_ref": "builtins.tuple"}}}, "_needs_parens_for_grouping": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "FuncDef", "arg_kinds": [0], "arg_names": ["self"], "flags": [], "fullname": "sqlalchemy.sql.selectable.Select._needs_parens_for_grouping", "name": "_needs_parens_for_grouping", "type": {".class": "CallableType", "arg_kinds": [0], "arg_names": ["self"], "arg_types": [{".class": "Instance", "args": [{".class": "TypeVarType", "fullname": "sqlalchemy.sql._typing._TP", "id": 1, "name": "_TP", "upper_bound": {".class": "Instance", "args": [{".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 2}], "type_ref": "builtins.tuple"}, "values": [], "variance": 0}], "type_ref": "sqlalchemy.sql.selectable.Select"}], "bound_args": [], "def_extras": {"first_arg": "self"}, "fallback": "builtins.function", "implicit": false, "is_ellipsis_args": false, "name": "_needs_parens_for_grouping of Select", "ret_type": "builtins.bool", "variables": []}}}, "_raw_columns": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "Var", "flags": ["is_initialized_in_class", "is_ready"], "fullname": "sqlalchemy.sql.selectable.Select._raw_columns", "name": "_raw_columns", "type": {".class": "Instance", "args": [{".class": "TypeAliasType", "args": [], "type_ref": "sqlalchemy.sql.selectable._ColumnsClauseElement"}], "type_ref": "builtins.list"}}}, "_scalar_type": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "FuncDef", "arg_kinds": [0], "arg_names": ["self"], "flags": [], "fullname": "sqlalchemy.sql.selectable.Select._scalar_type", "name": "_scalar_type", "type": {".class": "CallableType", "arg_kinds": [0], "arg_names": ["self"], "arg_types": [{".class": "Instance", "args": [{".class": "TypeVarType", "fullname": "sqlalchemy.sql._typing._TP", "id": 1, "name": "_TP", "upper_bound": {".class": "Instance", "args": [{".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 2}], "type_ref": "builtins.tuple"}, "values": [], "variance": 0}], "type_ref": "sqlalchemy.sql.selectable.Select"}], "bound_args": [], "def_extras": {"first_arg": "self"}, "fallback": "builtins.function", "implicit": false, "is_ellipsis_args": false, "name": "_scalar_type of Select", "ret_type": {".class": "Instance", "args": [{".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 2}], "type_ref": "sqlalchemy.sql.type_api.TypeEngine"}, "variables": []}}}, "_set_entities": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "FuncDef", "arg_kinds": [0, 0], "arg_names": ["self", "entities"], "flags": [], "fullname": "sqlalchemy.sql.selectable.Select._set_entities", "name": "_set_entities", "type": {".class": "CallableType", "arg_kinds": [0, 0], "arg_names": ["self", "entities"], "arg_types": [{".class": "Instance", "args": [{".class": "TypeVarType", "fullname": "sqlalchemy.sql._typing._TP", "id": 1, "name": "_TP", "upper_bound": {".class": "Instance", "args": [{".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 2}], "type_ref": "builtins.tuple"}, "values": [], "variance": 0}], "type_ref": "sqlalchemy.sql.selectable.Select"}, {".class": "Instance", "args": [{".class": "TypeAliasType", "args": [{".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 2}], "type_ref": "sqlalchemy.sql._typing._ColumnsClauseArgument"}], "type_ref": "typing.Iterable"}], "bound_args": [], "def_extras": {"first_arg": "self"}, "fallback": "builtins.function", "implicit": false, "is_ellipsis_args": false, "name": "_set_entities of Select", "ret_type": {".class": "NoneType"}, "variables": []}}}, "_setup_joins": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "Var", "flags": ["is_initialized_in_class", "is_ready"], "fullname": "sqlalchemy.sql.selectable.Select._setup_joins", "name": "_setup_joins", "type": {".class": "Instance", "args": [{".class": "TypeAliasType", "args": [], "type_ref": "sqlalchemy.sql.selectable._SetupJoinsElement"}], "type_ref": "builtins.tuple"}}}, "_traverse_internals": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "Var", "flags": ["is_initialized_in_class", "is_ready"], "fullname": "sqlalchemy.sql.selectable.Select._traverse_internals", "name": "_traverse_internals", "type": {".class": "TypeAliasType", "args": [], "type_ref": "sqlalchemy.sql.visitors._TraverseInternalsType"}}}, "_where_criteria": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "Var", "flags": ["is_initialized_in_class", "is_ready"], "fullname": "sqlalchemy.sql.selectable.Select._where_criteria", "name": "_where_criteria", "type": {".class": "Instance", "args": [{".class": "Instance", "args": [{".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 2}], "type_ref": "sqlalchemy.sql.elements.ColumnElement"}], "type_ref": "builtins.tuple"}}}, "_whereclause": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "Var", "flags": ["is_initialized_in_class"], "fullname": "sqlalchemy.sql.selectable.Select._whereclause", "name": "_whereclause", "type": {".class": "CallableType", "arg_kinds": [0], "arg_names": ["self"], "arg_types": [{".class": "Instance", "args": [{".class": "TypeVarType", "fullname": "sqlalchemy.sql._typing._TP", "id": 1, "name": "_TP", "upper_bound": {".class": "Instance", "args": [{".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 2}], "type_ref": "builtins.tuple"}, "values": [], "variance": 0}], "type_ref": "sqlalchemy.sql.selectable.Select"}], "bound_args": [], "def_extras": {"first_arg": "self"}, "fallback": "builtins.function", "implicit": false, "is_ellipsis_args": false, "name": null, "ret_type": {".class": "UnionType", "items": [{".class": "Instance", "args": [{".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 2}], "type_ref": "sqlalchemy.sql.elements.ColumnElement"}, {".class": "NoneType"}]}, "variables": []}}}, "add_columns": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "Decorator", "func": {".class": "FuncDef", "arg_kinds": [0, 2], "arg_names": ["self", "entities"], "flags": ["is_decorated"], "fullname": "sqlalchemy.sql.selectable.Select.add_columns", "name": "add_columns", "type": {".class": "CallableType", "arg_kinds": [0, 2], "arg_names": ["self", "entities"], "arg_types": [{".class": "Instance", "args": [{".class": "TypeVarType", "fullname": "sqlalchemy.sql._typing._TP", "id": 1, "name": "_TP", "upper_bound": {".class": "Instance", "args": [{".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 2}], "type_ref": "builtins.tuple"}, "values": [], "variance": 0}], "type_ref": "sqlalchemy.sql.selectable.Select"}, {".class": "TypeAliasType", "args": [{".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 2}], "type_ref": "sqlalchemy.sql._typing._ColumnsClauseArgument"}], "bound_args": [], "def_extras": {"first_arg": "self"}, "fallback": "builtins.function", "implicit": false, "is_ellipsis_args": false, "name": "add_columns of Select", "ret_type": {".class": "Instance", "args": [{".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 2}], "type_ref": "sqlalchemy.sql.selectable.Select"}, "variables": []}}, "is_overload": false, "var": {".class": "Var", "flags": ["is_initialized_in_class", "is_ready"], "fullname": null, "name": "add_columns", "type": {".class": "CallableType", "arg_kinds": [0, 2], "arg_names": ["self", "entities"], "arg_types": [{".class": "Instance", "args": [{".class": "TypeVarType", "fullname": "sqlalchemy.sql._typing._TP", "id": 1, "name": "_TP", "upper_bound": {".class": "Instance", "args": [{".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 2}], "type_ref": "builtins.tuple"}, "values": [], "variance": 0}], "type_ref": "sqlalchemy.sql.selectable.Select"}, {".class": "TypeAliasType", "args": [{".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 2}], "type_ref": "sqlalchemy.sql._typing._ColumnsClauseArgument"}], "bound_args": [], "def_extras": {"first_arg": "self"}, "fallback": "builtins.function", "implicit": false, "is_ellipsis_args": false, "name": "add_columns of Select", "ret_type": {".class": "Instance", "args": [{".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 2}], "type_ref": "sqlalchemy.sql.selectable.Select"}, "variables": []}}}}, "column": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "Decorator", "func": {".class": "FuncDef", "arg_kinds": [0, 0], "arg_names": ["self", "column"], "flags": ["is_decorated"], "fullname": "sqlalchemy.sql.selectable.Select.column", "name": "column", "type": {".class": "CallableType", "arg_kinds": [0, 0], "arg_names": ["self", "column"], "arg_types": [{".class": "Instance", "args": [{".class": "TypeVarType", "fullname": "sqlalchemy.sql._typing._TP", "id": 1, "name": "_TP", "upper_bound": {".class": "Instance", "args": [{".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 2}], "type_ref": "builtins.tuple"}, "values": [], "variance": 0}], "type_ref": "sqlalchemy.sql.selectable.Select"}, {".class": "TypeAliasType", "args": [{".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 2}], "type_ref": "sqlalchemy.sql._typing._ColumnsClauseArgument"}], "bound_args": [], "def_extras": {"first_arg": "self"}, "fallback": "builtins.function", "implicit": false, "is_ellipsis_args": false, "name": "column of Select", "ret_type": {".class": "Instance", "args": [{".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 2}], "type_ref": "sqlalchemy.sql.selectable.Select"}, "variables": []}}, "is_overload": false, "var": {".class": "Var", "flags": ["is_initialized_in_class", "is_ready"], "fullname": null, "name": "column", "type": {".class": "CallableType", "arg_kinds": [0, 0], "arg_names": ["self", "column"], "arg_types": [{".class": "Instance", "args": [{".class": "TypeVarType", "fullname": "sqlalchemy.sql._typing._TP", "id": 1, "name": "_TP", "upper_bound": {".class": "Instance", "args": [{".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 2}], "type_ref": "builtins.tuple"}, "values": [], "variance": 0}], "type_ref": "sqlalchemy.sql.selectable.Select"}, {".class": "TypeAliasType", "args": [{".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 2}], "type_ref": "sqlalchemy.sql._typing._ColumnsClauseArgument"}], "bound_args": [], "def_extras": {"first_arg": "self"}, "fallback": "builtins.function", "implicit": false, "is_ellipsis_args": false, "name": "column of Select", "ret_type": {".class": "Instance", "args": [{".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 2}], "type_ref": "sqlalchemy.sql.selectable.Select"}, "variables": []}}}}, "column_descriptions": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "Decorator", "func": {".class": "FuncDef", "arg_kinds": [0], "arg_names": ["self"], "flags": ["is_property", "is_decorated"], "fullname": "sqlalchemy.sql.selectable.Select.column_descriptions", "name": "column_descriptions", "type": {".class": "CallableType", "arg_kinds": [0], "arg_names": ["self"], "arg_types": [{".class": "Instance", "args": [{".class": "TypeVarType", "fullname": "sqlalchemy.sql._typing._TP", "id": 1, "name": "_TP", "upper_bound": {".class": "Instance", "args": [{".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 2}], "type_ref": "builtins.tuple"}, "values": [], "variance": 0}], "type_ref": "sqlalchemy.sql.selectable.Select"}], "bound_args": [], "def_extras": {"first_arg": "self"}, "fallback": "builtins.function", "implicit": false, "is_ellipsis_args": false, "name": "column_descriptions of Select", "ret_type": {".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 2}, "variables": []}}, "is_overload": false, "var": {".class": "Var", "flags": ["is_initialized_in_class", "is_property", "is_ready"], "fullname": null, "name": "column_descriptions", "type": {".class": "CallableType", "arg_kinds": [0], "arg_names": ["self"], "arg_types": [{".class": "Instance", "args": [{".class": "TypeVarType", "fullname": "sqlalchemy.sql._typing._TP", "id": 1, "name": "_TP", "upper_bound": {".class": "Instance", "args": [{".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 2}], "type_ref": "builtins.tuple"}, "values": [], "variance": 0}], "type_ref": "sqlalchemy.sql.selectable.Select"}], "bound_args": [], "def_extras": {"first_arg": "self"}, "fallback": "builtins.function", "implicit": false, "is_ellipsis_args": false, "name": "column_descriptions of Select", "ret_type": {".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 2}, "variables": []}}}}, "columns_clause_froms": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "Decorator", "func": {".class": "FuncDef", "arg_kinds": [0], "arg_names": ["self"], "flags": ["is_property", "is_decorated"], "fullname": "sqlalchemy.sql.selectable.Select.columns_clause_froms", "name": "columns_clause_froms", "type": {".class": "CallableType", "arg_kinds": [0], "arg_names": ["self"], "arg_types": [{".class": "Instance", "args": [{".class": "TypeVarType", "fullname": "sqlalchemy.sql._typing._TP", "id": 1, "name": "_TP", "upper_bound": {".class": "Instance", "args": [{".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 2}], "type_ref": "builtins.tuple"}, "values": [], "variance": 0}], "type_ref": "sqlalchemy.sql.selectable.Select"}], "bound_args": [], "def_extras": {"first_arg": "self"}, "fallback": "builtins.function", "implicit": false, "is_ellipsis_args": false, "name": "columns_clause_froms of Select", "ret_type": {".class": "Instance", "args": ["sqlalchemy.sql.selectable.FromClause"], "type_ref": "builtins.list"}, "variables": []}}, "is_overload": false, "var": {".class": "Var", "flags": ["is_initialized_in_class", "is_property", "is_ready"], "fullname": null, "name": "columns_clause_froms", "type": {".class": "CallableType", "arg_kinds": [0], "arg_names": ["self"], "arg_types": [{".class": "Instance", "args": [{".class": "TypeVarType", "fullname": "sqlalchemy.sql._typing._TP", "id": 1, "name": "_TP", "upper_bound": {".class": "Instance", "args": [{".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 2}], "type_ref": "builtins.tuple"}, "values": [], "variance": 0}], "type_ref": "sqlalchemy.sql.selectable.Select"}], "bound_args": [], "def_extras": {"first_arg": "self"}, "fallback": "builtins.function", "implicit": false, "is_ellipsis_args": false, "name": "columns_clause_froms of Select", "ret_type": {".class": "Instance", "args": ["sqlalchemy.sql.selectable.FromClause"], "type_ref": "builtins.list"}, "variables": []}}}}, "correlate": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "Decorator", "func": {".class": "FuncDef", "arg_kinds": [0, 2], "arg_names": ["self", "fromclauses"], "flags": ["is_decorated"], "fullname": "sqlalchemy.sql.selectable.Select.correlate", "name": "correlate", "type": {".class": "CallableType", "arg_kinds": [0, 2], "arg_names": ["self", "fromclauses"], "arg_types": [{".class": "Instance", "args": [{".class": "TypeVarType", "fullname": "sqlalchemy.sql._typing._TP", "id": 1, "name": "_TP", "upper_bound": {".class": "Instance", "args": [{".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 2}], "type_ref": "builtins.tuple"}, "values": [], "variance": 0}], "type_ref": "sqlalchemy.sql.selectable.Select"}, {".class": "UnionType", "items": [{".class": "NoneType"}, {".class": "LiteralType", "fallback": "builtins.bool", "value": false}, {".class": "TypeAliasType", "args": [], "type_ref": "sqlalchemy.sql._typing._FromClauseArgument"}]}], "bound_args": [], "def_extras": {"first_arg": "self"}, "fallback": "builtins.function", "implicit": false, "is_ellipsis_args": false, "name": "correlate of Select", "ret_type": {".class": "AnyType", "missing_import_name": "sqlalchemy.util.typing.Self", "source_any": null, "type_of_any": 3}, "variables": []}}, "is_overload": false, "var": {".class": "Var", "flags": ["is_initialized_in_class", "is_ready"], "fullname": null, "name": "correlate", "type": {".class": "CallableType", "arg_kinds": [0, 2], "arg_names": ["self", "fromclauses"], "arg_types": [{".class": "Instance", "args": [{".class": "TypeVarType", "fullname": "sqlalchemy.sql._typing._TP", "id": 1, "name": "_TP", "upper_bound": {".class": "Instance", "args": [{".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 2}], "type_ref": "builtins.tuple"}, "values": [], "variance": 0}], "type_ref": "sqlalchemy.sql.selectable.Select"}, {".class": "UnionType", "items": [{".class": "NoneType"}, {".class": "LiteralType", "fallback": "builtins.bool", "value": false}, {".class": "TypeAliasType", "args": [], "type_ref": "sqlalchemy.sql._typing._FromClauseArgument"}]}], "bound_args": [], "def_extras": {"first_arg": "self"}, "fallback": "builtins.function", "implicit": false, "is_ellipsis_args": false, "name": "correlate of Select", "ret_type": {".class": "AnyType", "missing_import_name": "sqlalchemy.util.typing.Self", "source_any": null, "type_of_any": 3}, "variables": []}}}}, "correlate_except": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "Decorator", "func": {".class": "FuncDef", "arg_kinds": [0, 2], "arg_names": ["self", "fromclauses"], "flags": ["is_decorated"], "fullname": "sqlalchemy.sql.selectable.Select.correlate_except", "name": "correlate_except", "type": {".class": "CallableType", "arg_kinds": [0, 2], "arg_names": ["self", "fromclauses"], "arg_types": [{".class": "Instance", "args": [{".class": "TypeVarType", "fullname": "sqlalchemy.sql._typing._TP", "id": 1, "name": "_TP", "upper_bound": {".class": "Instance", "args": [{".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 2}], "type_ref": "builtins.tuple"}, "values": [], "variance": 0}], "type_ref": "sqlalchemy.sql.selectable.Select"}, {".class": "UnionType", "items": [{".class": "NoneType"}, {".class": "LiteralType", "fallback": "builtins.bool", "value": false}, {".class": "TypeAliasType", "args": [], "type_ref": "sqlalchemy.sql._typing._FromClauseArgument"}]}], "bound_args": [], "def_extras": {"first_arg": "self"}, "fallback": "builtins.function", "implicit": false, "is_ellipsis_args": false, "name": "correlate_except of Select", "ret_type": {".class": "AnyType", "missing_import_name": "sqlalchemy.util.typing.Self", "source_any": null, "type_of_any": 3}, "variables": []}}, "is_overload": false, "var": {".class": "Var", "flags": ["is_initialized_in_class", "is_ready"], "fullname": null, "name": "correlate_except", "type": {".class": "CallableType", "arg_kinds": [0, 2], "arg_names": ["self", "fromclauses"], "arg_types": [{".class": "Instance", "args": [{".class": "TypeVarType", "fullname": "sqlalchemy.sql._typing._TP", "id": 1, "name": "_TP", "upper_bound": {".class": "Instance", "args": [{".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 2}], "type_ref": "builtins.tuple"}, "values": [], "variance": 0}], "type_ref": "sqlalchemy.sql.selectable.Select"}, {".class": "UnionType", "items": [{".class": "NoneType"}, {".class": "LiteralType", "fallback": "builtins.bool", "value": false}, {".class": "TypeAliasType", "args": [], "type_ref": "sqlalchemy.sql._typing._FromClauseArgument"}]}], "bound_args": [], "def_extras": {"first_arg": "self"}, "fallback": "builtins.function", "implicit": false, "is_ellipsis_args": false, "name": "correlate_except of Select", "ret_type": {".class": "AnyType", "missing_import_name": "sqlalchemy.util.typing.Self", "source_any": null, "type_of_any": 3}, "variables": []}}}}, "distinct": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "Decorator", "func": {".class": "FuncDef", "arg_kinds": [0, 2], "arg_names": ["self", "expr"], "flags": ["is_decorated"], "fullname": "sqlalchemy.sql.selectable.Select.distinct", "name": "distinct", "type": {".class": "CallableType", "arg_kinds": [0, 2], "arg_names": ["self", "expr"], "arg_types": [{".class": "Instance", "args": [{".class": "TypeVarType", "fullname": "sqlalchemy.sql._typing._TP", "id": 1, "name": "_TP", "upper_bound": {".class": "Instance", "args": [{".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 2}], "type_ref": "builtins.tuple"}, "values": [], "variance": 0}], "type_ref": "sqlalchemy.sql.selectable.Select"}, {".class": "TypeAliasType", "args": [{".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 2}], "type_ref": "sqlalchemy.sql._typing._ColumnExpressionArgument"}], "bound_args": [], "def_extras": {"first_arg": "self"}, "fallback": "builtins.function", "implicit": false, "is_ellipsis_args": false, "name": "distinct of Select", "ret_type": {".class": "AnyType", "missing_import_name": "sqlalchemy.util.typing.Self", "source_any": null, "type_of_any": 3}, "variables": []}}, "is_overload": false, "var": {".class": "Var", "flags": ["is_initialized_in_class", "is_ready"], "fullname": null, "name": "distinct", "type": {".class": "CallableType", "arg_kinds": [0, 2], "arg_names": ["self", "expr"], "arg_types": [{".class": "Instance", "args": [{".class": "TypeVarType", "fullname": "sqlalchemy.sql._typing._TP", "id": 1, "name": "_TP", "upper_bound": {".class": "Instance", "args": [{".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 2}], "type_ref": "builtins.tuple"}, "values": [], "variance": 0}], "type_ref": "sqlalchemy.sql.selectable.Select"}, {".class": "TypeAliasType", "args": [{".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 2}], "type_ref": "sqlalchemy.sql._typing._ColumnExpressionArgument"}], "bound_args": [], "def_extras": {"first_arg": "self"}, "fallback": "builtins.function", "implicit": false, "is_ellipsis_args": false, "name": "distinct of Select", "ret_type": {".class": "AnyType", "missing_import_name": "sqlalchemy.util.typing.Self", "source_any": null, "type_of_any": 3}, "variables": []}}}}, "except_": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "FuncDef", "arg_kinds": [0, 2], "arg_names": ["self", "other"], "flags": [], "fullname": "sqlalchemy.sql.selectable.Select.except_", "name": "except_", "type": {".class": "CallableType", "arg_kinds": [0, 2], "arg_names": ["self", "other"], "arg_types": [{".class": "Instance", "args": [{".class": "TypeVarType", "fullname": "sqlalchemy.sql._typing._TP", "id": 1, "name": "_TP", "upper_bound": {".class": "Instance", "args": [{".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 2}], "type_ref": "builtins.tuple"}, "values": [], "variance": 0}], "type_ref": "sqlalchemy.sql.selectable.Select"}, {".class": "TypeAliasType", "args": [], "type_ref": "sqlalchemy.sql._typing._SelectStatementForCompoundArgument"}], "bound_args": [], "def_extras": {"first_arg": "self"}, "fallback": "builtins.function", "implicit": false, "is_ellipsis_args": false, "name": "except_ of Select", "ret_type": "sqlalchemy.sql.selectable.CompoundSelect", "variables": []}}}, "except_all": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "FuncDef", "arg_kinds": [0, 2], "arg_names": ["self", "other"], "flags": [], "fullname": "sqlalchemy.sql.selectable.Select.except_all", "name": "except_all", "type": {".class": "CallableType", "arg_kinds": [0, 2], "arg_names": ["self", "other"], "arg_types": [{".class": "Instance", "args": [{".class": "TypeVarType", "fullname": "sqlalchemy.sql._typing._TP", "id": 1, "name": "_TP", "upper_bound": {".class": "Instance", "args": [{".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 2}], "type_ref": "builtins.tuple"}, "values": [], "variance": 0}], "type_ref": "sqlalchemy.sql.selectable.Select"}, {".class": "TypeAliasType", "args": [], "type_ref": "sqlalchemy.sql._typing._SelectStatementForCompoundArgument"}], "bound_args": [], "def_extras": {"first_arg": "self"}, "fallback": "builtins.function", "implicit": false, "is_ellipsis_args": false, "name": "except_all of Select", "ret_type": "sqlalchemy.sql.selectable.CompoundSelect", "variables": []}}}, "filter": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "FuncDef", "arg_kinds": [0, 2], "arg_names": ["self", "criteria"], "flags": [], "fullname": "sqlalchemy.sql.selectable.Select.filter", "name": "filter", "type": {".class": "CallableType", "arg_kinds": [0, 2], "arg_names": ["self", "criteria"], "arg_types": [{".class": "Instance", "args": [{".class": "TypeVarType", "fullname": "sqlalchemy.sql._typing._TP", "id": 1, "name": "_TP", "upper_bound": {".class": "Instance", "args": [{".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 2}], "type_ref": "builtins.tuple"}, "values": [], "variance": 0}], "type_ref": "sqlalchemy.sql.selectable.Select"}, {".class": "TypeAliasType", "args": ["builtins.bool"], "type_ref": "sqlalchemy.sql._typing._ColumnExpressionArgument"}], "bound_args": [], "def_extras": {"first_arg": "self"}, "fallback": "builtins.function", "implicit": false, "is_ellipsis_args": false, "name": "filter of Select", "ret_type": {".class": "AnyType", "missing_import_name": "sqlalchemy.util.typing.Self", "source_any": null, "type_of_any": 3}, "variables": []}}}, "filter_by": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "FuncDef", "arg_kinds": [0, 4], "arg_names": ["self", "kwargs"], "flags": [], "fullname": "sqlalchemy.sql.selectable.Select.filter_by", "name": "filter_by", "type": {".class": "CallableType", "arg_kinds": [0, 4], "arg_names": ["self", "kwargs"], "arg_types": [{".class": "Instance", "args": [{".class": "TypeVarType", "fullname": "sqlalchemy.sql._typing._TP", "id": 1, "name": "_TP", "upper_bound": {".class": "Instance", "args": [{".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 2}], "type_ref": "builtins.tuple"}, "values": [], "variance": 0}], "type_ref": "sqlalchemy.sql.selectable.Select"}, {".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 2}], "bound_args": [], "def_extras": {"first_arg": "self"}, "fallback": "builtins.function", "implicit": false, "is_ellipsis_args": false, "name": "filter_by of Select", "ret_type": {".class": "AnyType", "missing_import_name": "sqlalchemy.util.typing.Self", "source_any": null, "type_of_any": 3}, "variables": []}}}, "from_statement": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "FuncDef", "arg_kinds": [0, 0], "arg_names": ["self", "statement"], "flags": [], "fullname": "sqlalchemy.sql.selectable.Select.from_statement", "name": "from_statement", "type": {".class": "CallableType", "arg_kinds": [0, 0], "arg_names": ["self", "statement"], "arg_types": [{".class": "Instance", "args": [{".class": "TypeVarType", "fullname": "sqlalchemy.sql._typing._TP", "id": 1, "name": "_TP", "upper_bound": {".class": "Instance", "args": [{".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 2}], "type_ref": "builtins.tuple"}, "values": [], "variance": 0}], "type_ref": "sqlalchemy.sql.selectable.Select"}, "sqlalchemy.sql.roles.ReturnsRowsRole"], "bound_args": [], "def_extras": {"first_arg": "self"}, "fallback": "builtins.function", "implicit": false, "is_ellipsis_args": false, "name": "from_statement of Select", "ret_type": "sqlalchemy.sql.selectable.ExecutableReturnsRows", "variables": []}}}, "froms": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "Decorator", "func": {".class": "FuncDef", "arg_kinds": [0], "arg_names": ["self"], "flags": ["is_property", "is_decorated"], "fullname": "sqlalchemy.sql.selectable.Select.froms", "name": "froms", "type": {".class": "CallableType", "arg_kinds": [0], "arg_names": ["self"], "arg_types": [{".class": "Instance", "args": [{".class": "TypeVarType", "fullname": "sqlalchemy.sql._typing._TP", "id": 1, "name": "_TP", "upper_bound": {".class": "Instance", "args": [{".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 2}], "type_ref": "builtins.tuple"}, "values": [], "variance": 0}], "type_ref": "sqlalchemy.sql.selectable.Select"}], "bound_args": [], "def_extras": {"first_arg": "self"}, "fallback": "builtins.function", "implicit": false, "is_ellipsis_args": false, "name": "froms of Select", "ret_type": {".class": "Instance", "args": ["sqlalchemy.sql.selectable.FromClause"], "type_ref": "typing.Sequence"}, "variables": []}}, "is_overload": false, "var": {".class": "Var", "flags": ["is_initialized_in_class", "is_property", "is_ready"], "fullname": null, "name": "froms", "type": {".class": "CallableType", "arg_kinds": [0], "arg_names": ["self"], "arg_types": [{".class": "Instance", "args": [{".class": "TypeVarType", "fullname": "sqlalchemy.sql._typing._TP", "id": 1, "name": "_TP", "upper_bound": {".class": "Instance", "args": [{".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 2}], "type_ref": "builtins.tuple"}, "values": [], "variance": 0}], "type_ref": "sqlalchemy.sql.selectable.Select"}], "bound_args": [], "def_extras": {"first_arg": "self"}, "fallback": "builtins.function", "implicit": false, "is_ellipsis_args": false, "name": "froms of Select", "ret_type": {".class": "Instance", "args": ["sqlalchemy.sql.selectable.FromClause"], "type_ref": "typing.Sequence"}, "variables": []}}}}, "get_children": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "FuncDef", "arg_kinds": [0, 4], "arg_names": ["self", "kw"], "flags": [], "fullname": "sqlalchemy.sql.selectable.Select.get_children", "name": "get_children", "type": {".class": "CallableType", "arg_kinds": [0, 4], "arg_names": ["self", "kw"], "arg_types": [{".class": "Instance", "args": [{".class": "TypeVarType", "fullname": "sqlalchemy.sql._typing._TP", "id": 1, "name": "_TP", "upper_bound": {".class": "Instance", "args": [{".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 2}], "type_ref": "builtins.tuple"}, "values": [], "variance": 0}], "type_ref": "sqlalchemy.sql.selectable.Select"}, {".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 2}], "bound_args": [], "def_extras": {"first_arg": "self"}, "fallback": "builtins.function", "implicit": false, "is_ellipsis_args": false, "name": "get_children of Select", "ret_type": {".class": "Instance", "args": ["sqlalchemy.sql.elements.ClauseElement"], "type_ref": "typing.Iterable"}, "variables": []}}}, "get_final_froms": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "FuncDef", "arg_kinds": [0], "arg_names": ["self"], "flags": [], "fullname": "sqlalchemy.sql.selectable.Select.get_final_froms", "name": "get_final_froms", "type": {".class": "CallableType", "arg_kinds": [0], "arg_names": ["self"], "arg_types": [{".class": "Instance", "args": [{".class": "TypeVarType", "fullname": "sqlalchemy.sql._typing._TP", "id": 1, "name": "_TP", "upper_bound": {".class": "Instance", "args": [{".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 2}], "type_ref": "builtins.tuple"}, "values": [], "variance": 0}], "type_ref": "sqlalchemy.sql.selectable.Select"}], "bound_args": [], "def_extras": {"first_arg": "self"}, "fallback": "builtins.function", "implicit": false, "is_ellipsis_args": false, "name": "get_final_froms of Select", "ret_type": {".class": "Instance", "args": ["sqlalchemy.sql.selectable.FromClause"], "type_ref": "typing.Sequence"}, "variables": []}}}, "having": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "Decorator", "func": {".class": "FuncDef", "arg_kinds": [0, 2], "arg_names": ["self", "having"], "flags": ["is_decorated"], "fullname": "sqlalchemy.sql.selectable.Select.having", "name": "having", "type": {".class": "CallableType", "arg_kinds": [0, 2], "arg_names": ["self", "having"], "arg_types": [{".class": "Instance", "args": [{".class": "TypeVarType", "fullname": "sqlalchemy.sql._typing._TP", "id": 1, "name": "_TP", "upper_bound": {".class": "Instance", "args": [{".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 2}], "type_ref": "builtins.tuple"}, "values": [], "variance": 0}], "type_ref": "sqlalchemy.sql.selectable.Select"}, {".class": "TypeAliasType", "args": ["builtins.bool"], "type_ref": "sqlalchemy.sql._typing._ColumnExpressionArgument"}], "bound_args": [], "def_extras": {"first_arg": "self"}, "fallback": "builtins.function", "implicit": false, "is_ellipsis_args": false, "name": "having of Select", "ret_type": {".class": "AnyType", "missing_import_name": "sqlalchemy.util.typing.Self", "source_any": null, "type_of_any": 3}, "variables": []}}, "is_overload": false, "var": {".class": "Var", "flags": ["is_initialized_in_class", "is_ready"], "fullname": null, "name": "having", "type": {".class": "CallableType", "arg_kinds": [0, 2], "arg_names": ["self", "having"], "arg_types": [{".class": "Instance", "args": [{".class": "TypeVarType", "fullname": "sqlalchemy.sql._typing._TP", "id": 1, "name": "_TP", "upper_bound": {".class": "Instance", "args": [{".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 2}], "type_ref": "builtins.tuple"}, "values": [], "variance": 0}], "type_ref": "sqlalchemy.sql.selectable.Select"}, {".class": "TypeAliasType", "args": ["builtins.bool"], "type_ref": "sqlalchemy.sql._typing._ColumnExpressionArgument"}], "bound_args": [], "def_extras": {"first_arg": "self"}, "fallback": "builtins.function", "implicit": false, "is_ellipsis_args": false, "name": "having of Select", "ret_type": {".class": "AnyType", "missing_import_name": "sqlalchemy.util.typing.Self", "source_any": null, "type_of_any": 3}, "variables": []}}}}, "inner_columns": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "Decorator", "func": {".class": "FuncDef", "arg_kinds": [0], "arg_names": ["self"], "flags": ["is_property", "is_decorated"], "fullname": "sqlalchemy.sql.selectable.Select.inner_columns", "name": "inner_columns", "type": {".class": "CallableType", "arg_kinds": [0], "arg_names": ["self"], "arg_types": [{".class": "Instance", "args": [{".class": "TypeVarType", "fullname": "sqlalchemy.sql._typing._TP", "id": 1, "name": "_TP", "upper_bound": {".class": "Instance", "args": [{".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 2}], "type_ref": "builtins.tuple"}, "values": [], "variance": 0}], "type_ref": "sqlalchemy.sql.selectable.Select"}], "bound_args": [], "def_extras": {"first_arg": "self"}, "fallback": "builtins.function", "implicit": false, "is_ellipsis_args": false, "name": "inner_columns of Select", "ret_type": {".class": "TypeAliasType", "args": [], "type_ref": "sqlalchemy.sql.selectable._SelectIterable"}, "variables": []}}, "is_overload": false, "var": {".class": "Var", "flags": ["is_initialized_in_class", "is_property", "is_ready"], "fullname": null, "name": "inner_columns", "type": {".class": "CallableType", "arg_kinds": [0], "arg_names": ["self"], "arg_types": [{".class": "Instance", "args": [{".class": "TypeVarType", "fullname": "sqlalchemy.sql._typing._TP", "id": 1, "name": "_TP", "upper_bound": {".class": "Instance", "args": [{".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 2}], "type_ref": "builtins.tuple"}, "values": [], "variance": 0}], "type_ref": "sqlalchemy.sql.selectable.Select"}], "bound_args": [], "def_extras": {"first_arg": "self"}, "fallback": "builtins.function", "implicit": false, "is_ellipsis_args": false, "name": "inner_columns of Select", "ret_type": {".class": "TypeAliasType", "args": [], "type_ref": "sqlalchemy.sql.selectable._SelectIterable"}, "variables": []}}}}, "intersect": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "FuncDef", "arg_kinds": [0, 2], "arg_names": ["self", "other"], "flags": [], "fullname": "sqlalchemy.sql.selectable.Select.intersect", "name": "intersect", "type": {".class": "CallableType", "arg_kinds": [0, 2], "arg_names": ["self", "other"], "arg_types": [{".class": "Instance", "args": [{".class": "TypeVarType", "fullname": "sqlalchemy.sql._typing._TP", "id": 1, "name": "_TP", "upper_bound": {".class": "Instance", "args": [{".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 2}], "type_ref": "builtins.tuple"}, "values": [], "variance": 0}], "type_ref": "sqlalchemy.sql.selectable.Select"}, {".class": "TypeAliasType", "args": [], "type_ref": "sqlalchemy.sql._typing._SelectStatementForCompoundArgument"}], "bound_args": [], "def_extras": {"first_arg": "self"}, "fallback": "builtins.function", "implicit": false, "is_ellipsis_args": false, "name": "intersect of Select", "ret_type": "sqlalchemy.sql.selectable.CompoundSelect", "variables": []}}}, "intersect_all": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "FuncDef", "arg_kinds": [0, 2], "arg_names": ["self", "other"], "flags": [], "fullname": "sqlalchemy.sql.selectable.Select.intersect_all", "name": "intersect_all", "type": {".class": "CallableType", "arg_kinds": [0, 2], "arg_names": ["self", "other"], "arg_types": [{".class": "Instance", "args": [{".class": "TypeVarType", "fullname": "sqlalchemy.sql._typing._TP", "id": 1, "name": "_TP", "upper_bound": {".class": "Instance", "args": [{".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 2}], "type_ref": "builtins.tuple"}, "values": [], "variance": 0}], "type_ref": "sqlalchemy.sql.selectable.Select"}, {".class": "TypeAliasType", "args": [], "type_ref": "sqlalchemy.sql._typing._SelectStatementForCompoundArgument"}], "bound_args": [], "def_extras": {"first_arg": "self"}, "fallback": "builtins.function", "implicit": false, "is_ellipsis_args": false, "name": "intersect_all of Select", "ret_type": "sqlalchemy.sql.selectable.CompoundSelect", "variables": []}}}, "is_derived_from": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "FuncDef", "arg_kinds": [0, 0], "arg_names": ["self", "fromclause"], "flags": [], "fullname": "sqlalchemy.sql.selectable.Select.is_derived_from", "name": "is_derived_from", "type": {".class": "CallableType", "arg_kinds": [0, 0], "arg_names": ["self", "fromclause"], "arg_types": [{".class": "Instance", "args": [{".class": "TypeVarType", "fullname": "sqlalchemy.sql._typing._TP", "id": 1, "name": "_TP", "upper_bound": {".class": "Instance", "args": [{".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 2}], "type_ref": "builtins.tuple"}, "values": [], "variance": 0}], "type_ref": "sqlalchemy.sql.selectable.Select"}, {".class": "UnionType", "items": ["sqlalchemy.sql.selectable.FromClause", {".class": "NoneType"}]}], "bound_args": [], "def_extras": {"first_arg": "self"}, "fallback": "builtins.function", "implicit": false, "is_ellipsis_args": false, "name": "is_derived_from of Select", "ret_type": "builtins.bool", "variables": []}}}, "join": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "Decorator", "func": {".class": "FuncDef", "arg_kinds": [0, 0, 1, 5, 5], "arg_names": ["self", "target", "onclause", "isouter", "full"], "flags": ["is_decorated"], "fullname": "sqlalchemy.sql.selectable.Select.join", "name": "join", "type": {".class": "CallableType", "arg_kinds": [0, 0, 1, 5, 5], "arg_names": ["self", "target", "onclause", "isouter", "full"], "arg_types": [{".class": "Instance", "args": [{".class": "TypeVarType", "fullname": "sqlalchemy.sql._typing._TP", "id": 1, "name": "_TP", "upper_bound": {".class": "Instance", "args": [{".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 2}], "type_ref": "builtins.tuple"}, "values": [], "variance": 0}], "type_ref": "sqlalchemy.sql.selectable.Select"}, {".class": "TypeAliasType", "args": [], "type_ref": "sqlalchemy.sql._typing._JoinTargetArgument"}, {".class": "UnionType", "items": [{".class": "Instance", "args": [{".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 6}], "type_ref": "sqlalchemy.sql.elements.ColumnElement"}, "sqlalchemy.sql._typing._HasClauseElement", {".class": "Instance", "args": [{".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 6}], "type_ref": "sqlalchemy.sql.elements.SQLCoreOperations"}, {".class": "Instance", "args": [{".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 6}], "type_ref": "sqlalchemy.sql.roles.ExpressionElementRole"}, {".class": "CallableType", "arg_kinds": [], "arg_names": [], "arg_types": [], "bound_args": [], "def_extras": {}, "fallback": "builtins.function", "implicit": false, "is_ellipsis_args": false, "name": null, "ret_type": {".class": "Instance", "args": [{".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 6}], "type_ref": "sqlalchemy.sql.elements.ColumnElement"}, "variables": []}, "sqlalchemy.sql.lambdas.LambdaElement", "sqlalchemy.sql.roles.OnClauseRole", {".class": "NoneType"}]}, "builtins.bool", "builtins.bool"], "bound_args": [], "def_extras": {"first_arg": "self"}, "fallback": "builtins.function", "implicit": false, "is_ellipsis_args": false, "name": "join of Select", "ret_type": {".class": "AnyType", "missing_import_name": "sqlalchemy.util.typing.Self", "source_any": null, "type_of_any": 3}, "variables": []}}, "is_overload": false, "var": {".class": "Var", "flags": ["is_initialized_in_class", "is_ready"], "fullname": null, "name": "join", "type": {".class": "CallableType", "arg_kinds": [0, 0, 1, 5, 5], "arg_names": ["self", "target", "onclause", "isouter", "full"], "arg_types": [{".class": "Instance", "args": [{".class": "TypeVarType", "fullname": "sqlalchemy.sql._typing._TP", "id": 1, "name": "_TP", "upper_bound": {".class": "Instance", "args": [{".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 2}], "type_ref": "builtins.tuple"}, "values": [], "variance": 0}], "type_ref": "sqlalchemy.sql.selectable.Select"}, {".class": "TypeAliasType", "args": [], "type_ref": "sqlalchemy.sql._typing._JoinTargetArgument"}, {".class": "UnionType", "items": [{".class": "Instance", "args": [{".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 6}], "type_ref": "sqlalchemy.sql.elements.ColumnElement"}, "sqlalchemy.sql._typing._HasClauseElement", {".class": "Instance", "args": [{".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 6}], "type_ref": "sqlalchemy.sql.elements.SQLCoreOperations"}, {".class": "Instance", "args": [{".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 6}], "type_ref": "sqlalchemy.sql.roles.ExpressionElementRole"}, {".class": "CallableType", "arg_kinds": [], "arg_names": [], "arg_types": [], "bound_args": [], "def_extras": {}, "fallback": "builtins.function", "implicit": false, "is_ellipsis_args": false, "name": null, "ret_type": {".class": "Instance", "args": [{".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 6}], "type_ref": "sqlalchemy.sql.elements.ColumnElement"}, "variables": []}, "sqlalchemy.sql.lambdas.LambdaElement", "sqlalchemy.sql.roles.OnClauseRole", {".class": "NoneType"}]}, "builtins.bool", "builtins.bool"], "bound_args": [], "def_extras": {"first_arg": "self"}, "fallback": "builtins.function", "implicit": false, "is_ellipsis_args": false, "name": "join of Select", "ret_type": {".class": "AnyType", "missing_import_name": "sqlalchemy.util.typing.Self", "source_any": null, "type_of_any": 3}, "variables": []}}}}, "join_from": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "Decorator", "func": {".class": "FuncDef", "arg_kinds": [0, 0, 0, 1, 5, 5], "arg_names": ["self", "from_", "target", "onclause", "isouter", "full"], "flags": ["is_decorated"], "fullname": "sqlalchemy.sql.selectable.Select.join_from", "name": "join_from", "type": {".class": "CallableType", "arg_kinds": [0, 0, 0, 1, 5, 5], "arg_names": ["self", "from_", "target", "onclause", "isouter", "full"], "arg_types": [{".class": "Instance", "args": [{".class": "TypeVarType", "fullname": "sqlalchemy.sql._typing._TP", "id": 1, "name": "_TP", "upper_bound": {".class": "Instance", "args": [{".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 2}], "type_ref": "builtins.tuple"}, "values": [], "variance": 0}], "type_ref": "sqlalchemy.sql.selectable.Select"}, {".class": "TypeAliasType", "args": [], "type_ref": "sqlalchemy.sql._typing._FromClauseArgument"}, {".class": "TypeAliasType", "args": [], "type_ref": "sqlalchemy.sql._typing._JoinTargetArgument"}, {".class": "UnionType", "items": [{".class": "Instance", "args": [{".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 6}], "type_ref": "sqlalchemy.sql.elements.ColumnElement"}, "sqlalchemy.sql._typing._HasClauseElement", {".class": "Instance", "args": [{".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 6}], "type_ref": "sqlalchemy.sql.elements.SQLCoreOperations"}, {".class": "Instance", "args": [{".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 6}], "type_ref": "sqlalchemy.sql.roles.ExpressionElementRole"}, {".class": "CallableType", "arg_kinds": [], "arg_names": [], "arg_types": [], "bound_args": [], "def_extras": {}, "fallback": "builtins.function", "implicit": false, "is_ellipsis_args": false, "name": null, "ret_type": {".class": "Instance", "args": [{".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 6}], "type_ref": "sqlalchemy.sql.elements.ColumnElement"}, "variables": []}, "sqlalchemy.sql.lambdas.LambdaElement", "sqlalchemy.sql.roles.OnClauseRole", {".class": "NoneType"}]}, "builtins.bool", "builtins.bool"], "bound_args": [], "def_extras": {"first_arg": "self"}, "fallback": "builtins.function", "implicit": false, "is_ellipsis_args": false, "name": "join_from of Select", "ret_type": {".class": "AnyType", "missing_import_name": "sqlalchemy.util.typing.Self", "source_any": null, "type_of_any": 3}, "variables": []}}, "is_overload": false, "var": {".class": "Var", "flags": ["is_initialized_in_class", "is_ready"], "fullname": null, "name": "join_from", "type": {".class": "CallableType", "arg_kinds": [0, 0, 0, 1, 5, 5], "arg_names": ["self", "from_", "target", "onclause", "isouter", "full"], "arg_types": [{".class": "Instance", "args": [{".class": "TypeVarType", "fullname": "sqlalchemy.sql._typing._TP", "id": 1, "name": "_TP", "upper_bound": {".class": "Instance", "args": [{".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 2}], "type_ref": "builtins.tuple"}, "values": [], "variance": 0}], "type_ref": "sqlalchemy.sql.selectable.Select"}, {".class": "TypeAliasType", "args": [], "type_ref": "sqlalchemy.sql._typing._FromClauseArgument"}, {".class": "TypeAliasType", "args": [], "type_ref": "sqlalchemy.sql._typing._JoinTargetArgument"}, {".class": "UnionType", "items": [{".class": "Instance", "args": [{".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 6}], "type_ref": "sqlalchemy.sql.elements.ColumnElement"}, "sqlalchemy.sql._typing._HasClauseElement", {".class": "Instance", "args": [{".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 6}], "type_ref": "sqlalchemy.sql.elements.SQLCoreOperations"}, {".class": "Instance", "args": [{".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 6}], "type_ref": "sqlalchemy.sql.roles.ExpressionElementRole"}, {".class": "CallableType", "arg_kinds": [], "arg_names": [], "arg_types": [], "bound_args": [], "def_extras": {}, "fallback": "builtins.function", "implicit": false, "is_ellipsis_args": false, "name": null, "ret_type": {".class": "Instance", "args": [{".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 6}], "type_ref": "sqlalchemy.sql.elements.ColumnElement"}, "variables": []}, "sqlalchemy.sql.lambdas.LambdaElement", "sqlalchemy.sql.roles.OnClauseRole", {".class": "NoneType"}]}, "builtins.bool", "builtins.bool"], "bound_args": [], "def_extras": {"first_arg": "self"}, "fallback": "builtins.function", "implicit": false, "is_ellipsis_args": false, "name": "join_from of Select", "ret_type": {".class": "AnyType", "missing_import_name": "sqlalchemy.util.typing.Self", "source_any": null, "type_of_any": 3}, "variables": []}}}}, "outerjoin": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "FuncDef", "arg_kinds": [0, 0, 1, 5], "arg_names": ["self", "target", "onclause", "full"], "flags": [], "fullname": "sqlalchemy.sql.selectable.Select.outerjoin", "name": "outerjoin", "type": {".class": "CallableType", "arg_kinds": [0, 0, 1, 5], "arg_names": ["self", "target", "onclause", "full"], "arg_types": [{".class": "Instance", "args": [{".class": "TypeVarType", "fullname": "sqlalchemy.sql._typing._TP", "id": 1, "name": "_TP", "upper_bound": {".class": "Instance", "args": [{".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 2}], "type_ref": "builtins.tuple"}, "values": [], "variance": 0}], "type_ref": "sqlalchemy.sql.selectable.Select"}, {".class": "TypeAliasType", "args": [], "type_ref": "sqlalchemy.sql._typing._JoinTargetArgument"}, {".class": "UnionType", "items": [{".class": "Instance", "args": [{".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 6}], "type_ref": "sqlalchemy.sql.elements.ColumnElement"}, "sqlalchemy.sql._typing._HasClauseElement", {".class": "Instance", "args": [{".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 6}], "type_ref": "sqlalchemy.sql.elements.SQLCoreOperations"}, {".class": "Instance", "args": [{".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 6}], "type_ref": "sqlalchemy.sql.roles.ExpressionElementRole"}, {".class": "CallableType", "arg_kinds": [], "arg_names": [], "arg_types": [], "bound_args": [], "def_extras": {}, "fallback": "builtins.function", "implicit": false, "is_ellipsis_args": false, "name": null, "ret_type": {".class": "Instance", "args": [{".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 6}], "type_ref": "sqlalchemy.sql.elements.ColumnElement"}, "variables": []}, "sqlalchemy.sql.lambdas.LambdaElement", "sqlalchemy.sql.roles.OnClauseRole", {".class": "NoneType"}]}, "builtins.bool"], "bound_args": [], "def_extras": {"first_arg": "self"}, "fallback": "builtins.function", "implicit": false, "is_ellipsis_args": false, "name": "outerjoin of Select", "ret_type": {".class": "AnyType", "missing_import_name": "sqlalchemy.util.typing.Self", "source_any": null, "type_of_any": 3}, "variables": []}}}, "outerjoin_from": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "FuncDef", "arg_kinds": [0, 0, 0, 1, 5], "arg_names": ["self", "from_", "target", "onclause", "full"], "flags": [], "fullname": "sqlalchemy.sql.selectable.Select.outerjoin_from", "name": "outerjoin_from", "type": {".class": "CallableType", "arg_kinds": [0, 0, 0, 1, 5], "arg_names": ["self", "from_", "target", "onclause", "full"], "arg_types": [{".class": "Instance", "args": [{".class": "TypeVarType", "fullname": "sqlalchemy.sql._typing._TP", "id": 1, "name": "_TP", "upper_bound": {".class": "Instance", "args": [{".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 2}], "type_ref": "builtins.tuple"}, "values": [], "variance": 0}], "type_ref": "sqlalchemy.sql.selectable.Select"}, {".class": "TypeAliasType", "args": [], "type_ref": "sqlalchemy.sql._typing._FromClauseArgument"}, {".class": "TypeAliasType", "args": [], "type_ref": "sqlalchemy.sql._typing._JoinTargetArgument"}, {".class": "UnionType", "items": [{".class": "Instance", "args": [{".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 6}], "type_ref": "sqlalchemy.sql.elements.ColumnElement"}, "sqlalchemy.sql._typing._HasClauseElement", {".class": "Instance", "args": [{".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 6}], "type_ref": "sqlalchemy.sql.elements.SQLCoreOperations"}, {".class": "Instance", "args": [{".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 6}], "type_ref": "sqlalchemy.sql.roles.ExpressionElementRole"}, {".class": "CallableType", "arg_kinds": [], "arg_names": [], "arg_types": [], "bound_args": [], "def_extras": {}, "fallback": "builtins.function", "implicit": false, "is_ellipsis_args": false, "name": null, "ret_type": {".class": "Instance", "args": [{".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 6}], "type_ref": "sqlalchemy.sql.elements.ColumnElement"}, "variables": []}, "sqlalchemy.sql.lambdas.LambdaElement", "sqlalchemy.sql.roles.OnClauseRole", {".class": "NoneType"}]}, "builtins.bool"], "bound_args": [], "def_extras": {"first_arg": "self"}, "fallback": "builtins.function", "implicit": false, "is_ellipsis_args": false, "name": "outerjoin_from of Select", "ret_type": {".class": "AnyType", "missing_import_name": "sqlalchemy.util.typing.Self", "source_any": null, "type_of_any": 3}, "variables": []}}}, "reduce_columns": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "Decorator", "func": {".class": "FuncDef", "arg_kinds": [0, 1], "arg_names": ["self", "only_synonyms"], "flags": ["is_decorated"], "fullname": "sqlalchemy.sql.selectable.Select.reduce_columns", "name": "reduce_columns", "type": {".class": "CallableType", "arg_kinds": [0, 1], "arg_names": ["self", "only_synonyms"], "arg_types": [{".class": "Instance", "args": [{".class": "TypeVarType", "fullname": "sqlalchemy.sql._typing._TP", "id": 1, "name": "_TP", "upper_bound": {".class": "Instance", "args": [{".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 2}], "type_ref": "builtins.tuple"}, "values": [], "variance": 0}], "type_ref": "sqlalchemy.sql.selectable.Select"}, "builtins.bool"], "bound_args": [], "def_extras": {"first_arg": "self"}, "fallback": "builtins.function", "implicit": false, "is_ellipsis_args": false, "name": "reduce_columns of Select", "ret_type": {".class": "Instance", "args": [{".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 2}], "type_ref": "sqlalchemy.sql.selectable.Select"}, "variables": []}}, "is_overload": false, "var": {".class": "Var", "flags": ["is_initialized_in_class", "is_ready"], "fullname": null, "name": "reduce_columns", "type": {".class": "CallableType", "arg_kinds": [0, 1], "arg_names": ["self", "only_synonyms"], "arg_types": [{".class": "Instance", "args": [{".class": "TypeVarType", "fullname": "sqlalchemy.sql._typing._TP", "id": 1, "name": "_TP", "upper_bound": {".class": "Instance", "args": [{".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 2}], "type_ref": "builtins.tuple"}, "values": [], "variance": 0}], "type_ref": "sqlalchemy.sql.selectable.Select"}, "builtins.bool"], "bound_args": [], "def_extras": {"first_arg": "self"}, "fallback": "builtins.function", "implicit": false, "is_ellipsis_args": false, "name": "reduce_columns of Select", "ret_type": {".class": "Instance", "args": [{".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 2}], "type_ref": "sqlalchemy.sql.selectable.Select"}, "variables": []}}}}, "scalar_subquery": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "OverloadedFuncDef", "flags": [], "fullname": "sqlalchemy.sql.selectable.Select.scalar_subquery", "impl": {".class": "FuncDef", "arg_kinds": [0], "arg_names": ["self"], "flags": ["is_overload"], "fullname": "sqlalchemy.sql.selectable.Select.scalar_subquery", "name": "scalar_subquery", "type": {".class": "CallableType", "arg_kinds": [0], "arg_names": ["self"], "arg_types": [{".class": "Instance", "args": [{".class": "TypeVarType", "fullname": "sqlalchemy.sql._typing._TP", "id": 1, "name": "_TP", "upper_bound": {".class": "Instance", "args": [{".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 2}], "type_ref": "builtins.tuple"}, "values": [], "variance": 0}], "type_ref": "sqlalchemy.sql.selectable.Select"}], "bound_args": [], "def_extras": {"first_arg": "self"}, "fallback": "builtins.function", "implicit": false, "is_ellipsis_args": false, "name": "scalar_subquery of Select", "ret_type": {".class": "Instance", "args": [{".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 2}], "type_ref": "sqlalchemy.sql.selectable.ScalarSelect"}, "variables": []}}, "items": [{".class": "Decorator", "func": {".class": "FuncDef", "arg_kinds": [0], "arg_names": ["self"], "flags": ["is_overload", "is_decorated"], "fullname": "sqlalchemy.sql.selectable.Select.scalar_subquery", "name": "scalar_subquery", "type": {".class": "CallableType", "arg_kinds": [0], "arg_names": ["self"], "arg_types": [{".class": "Instance", "args": [{".class": "TupleType", "implicit": false, "items": [{".class": "TypeVarType", "fullname": "sqlalchemy.sql._typing._MAYBE_ENTITY", "id": -1, "name": "_MAYBE_ENTITY", "upper_bound": "builtins.object", "values": ["sqlalchemy.sql.roles.ColumnsClauseRole", {".class": "UnionType", "items": [{".class": "LiteralType", "fallback": "builtins.str", "value": "*"}, {".class": "LiteralType", "fallback": "builtins.int", "value": 1}]}, {".class": "TypeType", "item": {".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 2}}, {".class": "Instance", "args": ["sqlalchemy.sql._typing._HasClauseElement"], "type_ref": "sqlalchemy.inspection.Inspectable"}, "sqlalchemy.sql._typing._HasClauseElement"], "variance": 0}], "partial_fallback": {".class": "Instance", "args": [{".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 6}], "type_ref": "builtins.tuple"}}], "type_ref": "sqlalchemy.sql.selectable.Select"}], "bound_args": [], "def_extras": {"first_arg": "self"}, "fallback": "builtins.function", "implicit": false, "is_ellipsis_args": false, "name": "scalar_subquery of Select", "ret_type": {".class": "Instance", "args": [{".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 2}], "type_ref": "sqlalchemy.sql.selectable.ScalarSelect"}, "variables": [{".class": "TypeVarDef", "fullname": "sqlalchemy.sql._typing._MAYBE_ENTITY", "id": -1, "name": "_MAYBE_ENTITY", "upper_bound": "builtins.object", "values": ["sqlalchemy.sql.roles.ColumnsClauseRole", {".class": "UnionType", "items": [{".class": "LiteralType", "fallback": "builtins.str", "value": "*"}, {".class": "LiteralType", "fallback": "builtins.int", "value": 1}]}, {".class": "TypeType", "item": {".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 2}}, {".class": "Instance", "args": ["sqlalchemy.sql._typing._HasClauseElement"], "type_ref": "sqlalchemy.inspection.Inspectable"}, "sqlalchemy.sql._typing._HasClauseElement"], "variance": 0}]}}, "is_overload": true, "var": {".class": "Var", "flags": [], "fullname": null, "name": "scalar_subquery", "type": null}}, {".class": "Decorator", "func": {".class": "FuncDef", "arg_kinds": [0], "arg_names": ["self"], "flags": ["is_overload", "is_decorated"], "fullname": "sqlalchemy.sql.selectable.Select.scalar_subquery", "name": "scalar_subquery", "type": {".class": "CallableType", "arg_kinds": [0], "arg_names": ["self"], "arg_types": [{".class": "Instance", "args": [{".class": "TupleType", "implicit": false, "items": [{".class": "TypeVarType", "fullname": "sqlalchemy.sql._typing._NOT_ENTITY", "id": -1, "name": "_NOT_ENTITY", "upper_bound": "builtins.object", "values": ["builtins.int", "builtins.str", "datetime.datetime", "datetime.date", "datetime.time", "datetime.timedelta", "uuid.UUID", "builtins.float", "decimal.Decimal"], "variance": 0}], "partial_fallback": {".class": "Instance", "args": [{".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 6}], "type_ref": "builtins.tuple"}}], "type_ref": "sqlalchemy.sql.selectable.Select"}], "bound_args": [], "def_extras": {"first_arg": "self"}, "fallback": "builtins.function", "implicit": false, "is_ellipsis_args": false, "name": "scalar_subquery of Select", "ret_type": {".class": "Instance", "args": [{".class": "TypeVarType", "fullname": "sqlalchemy.sql._typing._NOT_ENTITY", "id": -1, "name": "_NOT_ENTITY", "upper_bound": "builtins.object", "values": ["builtins.int", "builtins.str", "datetime.datetime", "datetime.date", "datetime.time", "datetime.timedelta", "uuid.UUID", "builtins.float", "decimal.Decimal"], "variance": 0}], "type_ref": "sqlalchemy.sql.selectable.ScalarSelect"}, "variables": [{".class": "TypeVarDef", "fullname": "sqlalchemy.sql._typing._NOT_ENTITY", "id": -1, "name": "_NOT_ENTITY", "upper_bound": "builtins.object", "values": ["builtins.int", "builtins.str", "datetime.datetime", "datetime.date", "datetime.time", "datetime.timedelta", "uuid.UUID", "builtins.float", "decimal.Decimal"], "variance": 0}]}}, "is_overload": true, "var": {".class": "Var", "flags": [], "fullname": null, "name": "scalar_subquery", "type": null}}, {".class": "Decorator", "func": {".class": "FuncDef", "arg_kinds": [0], "arg_names": ["self"], "flags": ["is_overload", "is_decorated"], "fullname": "sqlalchemy.sql.selectable.Select.scalar_subquery", "name": "scalar_subquery", "type": {".class": "CallableType", "arg_kinds": [0], "arg_names": ["self"], "arg_types": [{".class": "Instance", "args": [{".class": "TypeVarType", "fullname": "sqlalchemy.sql._typing._TP", "id": 1, "name": "_TP", "upper_bound": {".class": "Instance", "args": [{".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 2}], "type_ref": "builtins.tuple"}, "values": [], "variance": 0}], "type_ref": "sqlalchemy.sql.selectable.Select"}], "bound_args": [], "def_extras": {"first_arg": "self"}, "fallback": "builtins.function", "implicit": false, "is_ellipsis_args": false, "name": "scalar_subquery of Select", "ret_type": {".class": "Instance", "args": [{".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 2}], "type_ref": "sqlalchemy.sql.selectable.ScalarSelect"}, "variables": []}}, "is_overload": true, "var": {".class": "Var", "flags": [], "fullname": null, "name": "scalar_subquery", "type": null}}], "type": {".class": "Overloaded", "items": [{".class": "CallableType", "arg_kinds": [0], "arg_names": ["self"], "arg_types": [{".class": "Instance", "args": [{".class": "TupleType", "implicit": false, "items": [{".class": "TypeVarType", "fullname": "sqlalchemy.sql._typing._MAYBE_ENTITY", "id": -1, "name": "_MAYBE_ENTITY", "upper_bound": "builtins.object", "values": ["sqlalchemy.sql.roles.ColumnsClauseRole", {".class": "UnionType", "items": [{".class": "LiteralType", "fallback": "builtins.str", "value": "*"}, {".class": "LiteralType", "fallback": "builtins.int", "value": 1}]}, {".class": "TypeType", "item": {".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 2}}, {".class": "Instance", "args": ["sqlalchemy.sql._typing._HasClauseElement"], "type_ref": "sqlalchemy.inspection.Inspectable"}, "sqlalchemy.sql._typing._HasClauseElement"], "variance": 0}], "partial_fallback": {".class": "Instance", "args": [{".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 6}], "type_ref": "builtins.tuple"}}], "type_ref": "sqlalchemy.sql.selectable.Select"}], "bound_args": [], "def_extras": {"first_arg": "self"}, "fallback": "builtins.function", "implicit": false, "is_ellipsis_args": false, "name": "scalar_subquery of Select", "ret_type": {".class": "Instance", "args": [{".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 2}], "type_ref": "sqlalchemy.sql.selectable.ScalarSelect"}, "variables": [{".class": "TypeVarDef", "fullname": "sqlalchemy.sql._typing._MAYBE_ENTITY", "id": -1, "name": "_MAYBE_ENTITY", "upper_bound": "builtins.object", "values": ["sqlalchemy.sql.roles.ColumnsClauseRole", {".class": "UnionType", "items": [{".class": "LiteralType", "fallback": "builtins.str", "value": "*"}, {".class": "LiteralType", "fallback": "builtins.int", "value": 1}]}, {".class": "TypeType", "item": {".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 2}}, {".class": "Instance", "args": ["sqlalchemy.sql._typing._HasClauseElement"], "type_ref": "sqlalchemy.inspection.Inspectable"}, "sqlalchemy.sql._typing._HasClauseElement"], "variance": 0}]}, {".class": "CallableType", "arg_kinds": [0], "arg_names": ["self"], "arg_types": [{".class": "Instance", "args": [{".class": "TupleType", "implicit": false, "items": [{".class": "TypeVarType", "fullname": "sqlalchemy.sql._typing._NOT_ENTITY", "id": -1, "name": "_NOT_ENTITY", "upper_bound": "builtins.object", "values": ["builtins.int", "builtins.str", "datetime.datetime", "datetime.date", "datetime.time", "datetime.timedelta", "uuid.UUID", "builtins.float", "decimal.Decimal"], "variance": 0}], "partial_fallback": {".class": "Instance", "args": [{".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 6}], "type_ref": "builtins.tuple"}}], "type_ref": "sqlalchemy.sql.selectable.Select"}], "bound_args": [], "def_extras": {"first_arg": "self"}, "fallback": "builtins.function", "implicit": false, "is_ellipsis_args": false, "name": "scalar_subquery of Select", "ret_type": {".class": "Instance", "args": [{".class": "TypeVarType", "fullname": "sqlalchemy.sql._typing._NOT_ENTITY", "id": -1, "name": "_NOT_ENTITY", "upper_bound": "builtins.object", "values": ["builtins.int", "builtins.str", "datetime.datetime", "datetime.date", "datetime.time", "datetime.timedelta", "uuid.UUID", "builtins.float", "decimal.Decimal"], "variance": 0}], "type_ref": "sqlalchemy.sql.selectable.ScalarSelect"}, "variables": [{".class": "TypeVarDef", "fullname": "sqlalchemy.sql._typing._NOT_ENTITY", "id": -1, "name": "_NOT_ENTITY", "upper_bound": "builtins.object", "values": ["builtins.int", "builtins.str", "datetime.datetime", "datetime.date", "datetime.time", "datetime.timedelta", "uuid.UUID", "builtins.float", "decimal.Decimal"], "variance": 0}]}, {".class": "CallableType", "arg_kinds": [0], "arg_names": ["self"], "arg_types": [{".class": "Instance", "args": [{".class": "TypeVarType", "fullname": "sqlalchemy.sql._typing._TP", "id": 1, "name": "_TP", "upper_bound": {".class": "Instance", "args": [{".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 2}], "type_ref": "builtins.tuple"}, "values": [], "variance": 0}], "type_ref": "sqlalchemy.sql.selectable.Select"}], "bound_args": [], "def_extras": {"first_arg": "self"}, "fallback": "builtins.function", "implicit": false, "is_ellipsis_args": false, "name": "scalar_subquery of Select", "ret_type": {".class": "Instance", "args": [{".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 2}], "type_ref": "sqlalchemy.sql.selectable.ScalarSelect"}, "variables": []}]}}}, "select_from": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "Decorator", "func": {".class": "FuncDef", "arg_kinds": [0, 2], "arg_names": ["self", "froms"], "flags": ["is_decorated"], "fullname": "sqlalchemy.sql.selectable.Select.select_from", "name": "select_from", "type": {".class": "CallableType", "arg_kinds": [0, 2], "arg_names": ["self", "froms"], "arg_types": [{".class": "Instance", "args": [{".class": "TypeVarType", "fullname": "sqlalchemy.sql._typing._TP", "id": 1, "name": "_TP", "upper_bound": {".class": "Instance", "args": [{".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 2}], "type_ref": "builtins.tuple"}, "values": [], "variance": 0}], "type_ref": "sqlalchemy.sql.selectable.Select"}, {".class": "TypeAliasType", "args": [], "type_ref": "sqlalchemy.sql._typing._FromClauseArgument"}], "bound_args": [], "def_extras": {"first_arg": "self"}, "fallback": "builtins.function", "implicit": false, "is_ellipsis_args": false, "name": "select_from of Select", "ret_type": {".class": "AnyType", "missing_import_name": "sqlalchemy.util.typing.Self", "source_any": null, "type_of_any": 3}, "variables": []}}, "is_overload": false, "var": {".class": "Var", "flags": ["is_initialized_in_class", "is_ready"], "fullname": null, "name": "select_from", "type": {".class": "CallableType", "arg_kinds": [0, 2], "arg_names": ["self", "froms"], "arg_types": [{".class": "Instance", "args": [{".class": "TypeVarType", "fullname": "sqlalchemy.sql._typing._TP", "id": 1, "name": "_TP", "upper_bound": {".class": "Instance", "args": [{".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 2}], "type_ref": "builtins.tuple"}, "values": [], "variance": 0}], "type_ref": "sqlalchemy.sql.selectable.Select"}, {".class": "TypeAliasType", "args": [], "type_ref": "sqlalchemy.sql._typing._FromClauseArgument"}], "bound_args": [], "def_extras": {"first_arg": "self"}, "fallback": "builtins.function", "implicit": false, "is_ellipsis_args": false, "name": "select_from of Select", "ret_type": {".class": "AnyType", "missing_import_name": "sqlalchemy.util.typing.Self", "source_any": null, "type_of_any": 3}, "variables": []}}}}, "selected_columns": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "Decorator", "func": {".class": "FuncDef", "arg_kinds": [0], "arg_names": ["self"], "flags": ["is_property", "is_decorated"], "fullname": "sqlalchemy.sql.selectable.Select.selected_columns", "name": "selected_columns", "type": {".class": "CallableType", "arg_kinds": [0], "arg_names": ["self"], "arg_types": [{".class": "Instance", "args": [{".class": "TypeVarType", "fullname": "sqlalchemy.sql._typing._TP", "id": 1, "name": "_TP", "upper_bound": {".class": "Instance", "args": [{".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 2}], "type_ref": "builtins.tuple"}, "values": [], "variance": 0}], "type_ref": "sqlalchemy.sql.selectable.Select"}], "bound_args": [], "def_extras": {"first_arg": "self"}, "fallback": "builtins.function", "implicit": false, "is_ellipsis_args": false, "name": "selected_columns of Select", "ret_type": {".class": "Instance", "args": ["builtins.str", {".class": "Instance", "args": [{".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 2}], "type_ref": "sqlalchemy.sql.elements.ColumnElement"}], "type_ref": "sqlalchemy.sql.base.ColumnCollection"}, "variables": []}}, "is_overload": false, "var": {".class": "Var", "flags": ["is_initialized_in_class", "is_property", "is_ready"], "fullname": null, "name": "selected_columns", "type": {".class": "CallableType", "arg_kinds": [0], "arg_names": ["self"], "arg_types": [{".class": "Instance", "args": [{".class": "TypeVarType", "fullname": "sqlalchemy.sql._typing._TP", "id": 1, "name": "_TP", "upper_bound": {".class": "Instance", "args": [{".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 2}], "type_ref": "builtins.tuple"}, "values": [], "variance": 0}], "type_ref": "sqlalchemy.sql.selectable.Select"}], "bound_args": [], "def_extras": {"first_arg": "self"}, "fallback": "builtins.function", "implicit": false, "is_ellipsis_args": false, "name": "selected_columns of Select", "ret_type": {".class": "Instance", "args": ["builtins.str", {".class": "Instance", "args": [{".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 2}], "type_ref": "sqlalchemy.sql.elements.ColumnElement"}], "type_ref": "sqlalchemy.sql.base.ColumnCollection"}, "variables": []}}}}, "self_group": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "FuncDef", "arg_kinds": [0, 1], "arg_names": ["self", "against"], "flags": [], "fullname": "sqlalchemy.sql.selectable.Select.self_group", "name": "self_group", "type": {".class": "CallableType", "arg_kinds": [0, 1], "arg_names": ["self", "against"], "arg_types": [{".class": "Instance", "args": [{".class": "TypeVarType", "fullname": "sqlalchemy.sql._typing._TP", "id": 1, "name": "_TP", "upper_bound": {".class": "Instance", "args": [{".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 2}], "type_ref": "builtins.tuple"}, "values": [], "variance": 0}], "type_ref": "sqlalchemy.sql.selectable.Select"}, {".class": "UnionType", "items": ["sqlalchemy.sql.operators.OperatorType", {".class": "NoneType"}]}], "bound_args": [], "def_extras": {"first_arg": "self"}, "fallback": "builtins.function", "implicit": false, "is_ellipsis_args": false, "name": "self_group of Select", "ret_type": {".class": "UnionType", "items": [{".class": "Instance", "args": [{".class": "AnyType", "missing_import_name": "sqlalchemy.util.typing.Self", "source_any": null, "type_of_any": 3}], "type_ref": "sqlalchemy.sql.selectable.SelectStatementGrouping"}, {".class": "AnyType", "missing_import_name": "sqlalchemy.util.typing.Self", "source_any": null, "type_of_any": 3}]}, "variables": []}}}, "union": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "FuncDef", "arg_kinds": [0, 2], "arg_names": ["self", "other"], "flags": [], "fullname": "sqlalchemy.sql.selectable.Select.union", "name": "union", "type": {".class": "CallableType", "arg_kinds": [0, 2], "arg_names": ["self", "other"], "arg_types": [{".class": "Instance", "args": [{".class": "TypeVarType", "fullname": "sqlalchemy.sql._typing._TP", "id": 1, "name": "_TP", "upper_bound": {".class": "Instance", "args": [{".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 2}], "type_ref": "builtins.tuple"}, "values": [], "variance": 0}], "type_ref": "sqlalchemy.sql.selectable.Select"}, {".class": "TypeAliasType", "args": [], "type_ref": "sqlalchemy.sql._typing._SelectStatementForCompoundArgument"}], "bound_args": [], "def_extras": {"first_arg": "self"}, "fallback": "builtins.function", "implicit": false, "is_ellipsis_args": false, "name": "union of Select", "ret_type": "sqlalchemy.sql.selectable.CompoundSelect", "variables": []}}}, "union_all": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "FuncDef", "arg_kinds": [0, 2], "arg_names": ["self", "other"], "flags": [], "fullname": "sqlalchemy.sql.selectable.Select.union_all", "name": "union_all", "type": {".class": "CallableType", "arg_kinds": [0, 2], "arg_names": ["self", "other"], "arg_types": [{".class": "Instance", "args": [{".class": "TypeVarType", "fullname": "sqlalchemy.sql._typing._TP", "id": 1, "name": "_TP", "upper_bound": {".class": "Instance", "args": [{".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 2}], "type_ref": "builtins.tuple"}, "values": [], "variance": 0}], "type_ref": "sqlalchemy.sql.selectable.Select"}, {".class": "TypeAliasType", "args": [], "type_ref": "sqlalchemy.sql._typing._SelectStatementForCompoundArgument"}], "bound_args": [], "def_extras": {"first_arg": "self"}, "fallback": "builtins.function", "implicit": false, "is_ellipsis_args": false, "name": "union_all of Select", "ret_type": "sqlalchemy.sql.selectable.CompoundSelect", "variables": []}}}, "where": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "Decorator", "func": {".class": "FuncDef", "arg_kinds": [0, 2], "arg_names": ["self", "whereclause"], "flags": ["is_decorated"], "fullname": "sqlalchemy.sql.selectable.Select.where", "name": "where", "type": {".class": "CallableType", "arg_kinds": [0, 2], "arg_names": ["self", "whereclause"], "arg_types": [{".class": "Instance", "args": [{".class": "TypeVarType", "fullname": "sqlalchemy.sql._typing._TP", "id": 1, "name": "_TP", "upper_bound": {".class": "Instance", "args": [{".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 2}], "type_ref": "builtins.tuple"}, "values": [], "variance": 0}], "type_ref": "sqlalchemy.sql.selectable.Select"}, {".class": "TypeAliasType", "args": ["builtins.bool"], "type_ref": "sqlalchemy.sql._typing._ColumnExpressionArgument"}], "bound_args": [], "def_extras": {"first_arg": "self"}, "fallback": "builtins.function", "implicit": false, "is_ellipsis_args": false, "name": "where of Select", "ret_type": {".class": "AnyType", "missing_import_name": "sqlalchemy.util.typing.Self", "source_any": null, "type_of_any": 3}, "variables": []}}, "is_overload": false, "var": {".class": "Var", "flags": ["is_initialized_in_class", "is_ready"], "fullname": null, "name": "where", "type": {".class": "CallableType", "arg_kinds": [0, 2], "arg_names": ["self", "whereclause"], "arg_types": [{".class": "Instance", "args": [{".class": "TypeVarType", "fullname": "sqlalchemy.sql._typing._TP", "id": 1, "name": "_TP", "upper_bound": {".class": "Instance", "args": [{".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 2}], "type_ref": "builtins.tuple"}, "values": [], "variance": 0}], "type_ref": "sqlalchemy.sql.selectable.Select"}, {".class": "TypeAliasType", "args": ["builtins.bool"], "type_ref": "sqlalchemy.sql._typing._ColumnExpressionArgument"}], "bound_args": [], "def_extras": {"first_arg": "self"}, "fallback": "builtins.function", "implicit": false, "is_ellipsis_args": false, "name": "where of Select", "ret_type": {".class": "AnyType", "missing_import_name": "sqlalchemy.util.typing.Self", "source_any": null, "type_of_any": 3}, "variables": []}}}}, "whereclause": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "Decorator", "func": {".class": "FuncDef", "arg_kinds": [0], "arg_names": ["self"], "flags": ["is_property", "is_decorated"], "fullname": "sqlalchemy.sql.selectable.Select.whereclause", "name": "whereclause", "type": {".class": "CallableType", "arg_kinds": [0], "arg_names": ["self"], "arg_types": [{".class": "Instance", "args": [{".class": "TypeVarType", "fullname": "sqlalchemy.sql._typing._TP", "id": 1, "name": "_TP", "upper_bound": {".class": "Instance", "args": [{".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 2}], "type_ref": "builtins.tuple"}, "values": [], "variance": 0}], "type_ref": "sqlalchemy.sql.selectable.Select"}], "bound_args": [], "def_extras": {"first_arg": "self"}, "fallback": "builtins.function", "implicit": false, "is_ellipsis_args": false, "name": "whereclause of Select", "ret_type": {".class": "UnionType", "items": [{".class": "Instance", "args": [{".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 2}], "type_ref": "sqlalchemy.sql.elements.ColumnElement"}, {".class": "NoneType"}]}, "variables": []}}, "is_overload": false, "var": {".class": "Var", "flags": ["is_initialized_in_class", "is_property", "is_ready"], "fullname": null, "name": "whereclause", "type": {".class": "CallableType", "arg_kinds": [0], "arg_names": ["self"], "arg_types": [{".class": "Instance", "args": [{".class": "TypeVarType", "fullname": "sqlalchemy.sql._typing._TP", "id": 1, "name": "_TP", "upper_bound": {".class": "Instance", "args": [{".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 2}], "type_ref": "builtins.tuple"}, "values": [], "variance": 0}], "type_ref": "sqlalchemy.sql.selectable.Select"}], "bound_args": [], "def_extras": {"first_arg": "self"}, "fallback": "builtins.function", "implicit": false, "is_ellipsis_args": false, "name": "whereclause of Select", "ret_type": {".class": "UnionType", "items": [{".class": "Instance", "args": [{".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 2}], "type_ref": "sqlalchemy.sql.elements.ColumnElement"}, {".class": "NoneType"}]}, "variables": []}}}}, "with_only_columns": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "OverloadedFuncDef", "flags": [], "fullname": "sqlalchemy.sql.selectable.Select.with_only_columns", "impl": {".class": "Decorator", "func": {".class": "FuncDef", "arg_kinds": [0, 2, 5, 4], "arg_names": ["self", "entities", "maintain_column_froms", "__kw"], "flags": ["is_decorated"], "fullname": "sqlalchemy.sql.selectable.Select.with_only_columns", "name": "with_only_columns", "type": {".class": "CallableType", "arg_kinds": [0, 2, 5, 4], "arg_names": ["self", "entities", "maintain_column_froms", null], "arg_types": [{".class": "Instance", "args": [{".class": "TypeVarType", "fullname": "sqlalchemy.sql._typing._TP", "id": 1, "name": "_TP", "upper_bound": {".class": "Instance", "args": [{".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 2}], "type_ref": "builtins.tuple"}, "values": [], "variance": 0}], "type_ref": "sqlalchemy.sql.selectable.Select"}, {".class": "TypeAliasType", "args": [{".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 2}], "type_ref": "sqlalchemy.sql._typing._ColumnsClauseArgument"}, "builtins.bool", {".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 2}], "bound_args": [], "def_extras": {"first_arg": "self"}, "fallback": "builtins.function", "implicit": false, "is_ellipsis_args": false, "name": "with_only_columns of Select", "ret_type": {".class": "Instance", "args": [{".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 2}], "type_ref": "sqlalchemy.sql.selectable.Select"}, "variables": []}}, "is_overload": true, "var": {".class": "Var", "flags": ["is_ready"], "fullname": null, "name": "with_only_columns", "type": {".class": "CallableType", "arg_kinds": [0, 2, 5, 4], "arg_names": ["self", "entities", "maintain_column_froms", null], "arg_types": [{".class": "Instance", "args": [{".class": "TypeVarType", "fullname": "sqlalchemy.sql._typing._TP", "id": 1, "name": "_TP", "upper_bound": {".class": "Instance", "args": [{".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 2}], "type_ref": "builtins.tuple"}, "values": [], "variance": 0}], "type_ref": "sqlalchemy.sql.selectable.Select"}, {".class": "TypeAliasType", "args": [{".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 2}], "type_ref": "sqlalchemy.sql._typing._ColumnsClauseArgument"}, "builtins.bool", {".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 2}], "bound_args": [], "def_extras": {"first_arg": "self"}, "fallback": "builtins.function", "implicit": false, "is_ellipsis_args": false, "name": "with_only_columns of Select", "ret_type": {".class": "Instance", "args": [{".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 2}], "type_ref": "sqlalchemy.sql.selectable.Select"}, "variables": []}}}, "items": [{".class": "Decorator", "func": {".class": "FuncDef", "arg_kinds": [0, 0], "arg_names": ["self", "__ent0"], "flags": ["is_overload", "is_decorated"], "fullname": "sqlalchemy.sql.selectable.Select.with_only_columns", "name": "with_only_columns", "type": {".class": "CallableType", "arg_kinds": [0, 0], "arg_names": ["self", null], "arg_types": [{".class": "Instance", "args": [{".class": "TypeVarType", "fullname": "sqlalchemy.sql._typing._TP", "id": 1, "name": "_TP", "upper_bound": {".class": "Instance", "args": [{".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 2}], "type_ref": "builtins.tuple"}, "values": [], "variance": 0}], "type_ref": "sqlalchemy.sql.selectable.Select"}, {".class": "TypeAliasType", "args": [{".class": "TypeVarType", "fullname": "sqlalchemy.sql._typing._T0", "id": -1, "name": "_T0", "upper_bound": {".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 2}, "values": [], "variance": 0}], "type_ref": "sqlalchemy.sql._typing._TypedColumnClauseArgument"}], "bound_args": [], "def_extras": {"first_arg": "self"}, "fallback": "builtins.function", "implicit": false, "is_ellipsis_args": false, "name": "with_only_columns of Select", "ret_type": {".class": "Instance", "args": [{".class": "TupleType", "implicit": false, "items": [{".class": "TypeVarType", "fullname": "sqlalchemy.sql._typing._T0", "id": -1, "name": "_T0", "upper_bound": {".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 2}, "values": [], "variance": 0}], "partial_fallback": {".class": "Instance", "args": [{".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 6}], "type_ref": "builtins.tuple"}}], "type_ref": "sqlalchemy.sql.selectable.Select"}, "variables": [{".class": "TypeVarDef", "fullname": "sqlalchemy.sql._typing._T0", "id": -1, "name": "_T0", "upper_bound": {".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 2}, "values": [], "variance": 0}]}}, "is_overload": true, "var": {".class": "Var", "flags": [], "fullname": null, "name": "with_only_columns", "type": null}}, {".class": "Decorator", "func": {".class": "FuncDef", "arg_kinds": [0, 0, 0], "arg_names": ["self", "__ent0", "__ent1"], "flags": ["is_overload", "is_decorated"], "fullname": "sqlalchemy.sql.selectable.Select.with_only_columns", "name": "with_only_columns", "type": {".class": "CallableType", "arg_kinds": [0, 0, 0], "arg_names": ["self", null, null], "arg_types": [{".class": "Instance", "args": [{".class": "TypeVarType", "fullname": "sqlalchemy.sql._typing._TP", "id": 1, "name": "_TP", "upper_bound": {".class": "Instance", "args": [{".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 2}], "type_ref": "builtins.tuple"}, "values": [], "variance": 0}], "type_ref": "sqlalchemy.sql.selectable.Select"}, {".class": "TypeAliasType", "args": [{".class": "TypeVarType", "fullname": "sqlalchemy.sql._typing._T0", "id": -1, "name": "_T0", "upper_bound": {".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 2}, "values": [], "variance": 0}], "type_ref": "sqlalchemy.sql._typing._TypedColumnClauseArgument"}, {".class": "TypeAliasType", "args": [{".class": "TypeVarType", "fullname": "sqlalchemy.sql._typing._T1", "id": -2, "name": "_T1", "upper_bound": {".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 2}, "values": [], "variance": 0}], "type_ref": "sqlalchemy.sql._typing._TypedColumnClauseArgument"}], "bound_args": [], "def_extras": {"first_arg": "self"}, "fallback": "builtins.function", "implicit": false, "is_ellipsis_args": false, "name": "with_only_columns of Select", "ret_type": {".class": "Instance", "args": [{".class": "TupleType", "implicit": false, "items": [{".class": "TypeVarType", "fullname": "sqlalchemy.sql._typing._T0", "id": -1, "name": "_T0", "upper_bound": {".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 2}, "values": [], "variance": 0}, {".class": "TypeVarType", "fullname": "sqlalchemy.sql._typing._T1", "id": -2, "name": "_T1", "upper_bound": {".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 2}, "values": [], "variance": 0}], "partial_fallback": {".class": "Instance", "args": [{".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 6}], "type_ref": "builtins.tuple"}}], "type_ref": "sqlalchemy.sql.selectable.Select"}, "variables": [{".class": "TypeVarDef", "fullname": "sqlalchemy.sql._typing._T0", "id": -1, "name": "_T0", "upper_bound": {".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 2}, "values": [], "variance": 0}, {".class": "TypeVarDef", "fullname": "sqlalchemy.sql._typing._T1", "id": -2, "name": "_T1", "upper_bound": {".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 2}, "values": [], "variance": 0}]}}, "is_overload": true, "var": {".class": "Var", "flags": [], "fullname": null, "name": "with_only_columns", "type": null}}, {".class": "Decorator", "func": {".class": "FuncDef", "arg_kinds": [0, 0, 0, 0], "arg_names": ["self", "__ent0", "__ent1", "__ent2"], "flags": ["is_overload", "is_decorated"], "fullname": "sqlalchemy.sql.selectable.Select.with_only_columns", "name": "with_only_columns", "type": {".class": "CallableType", "arg_kinds": [0, 0, 0, 0], "arg_names": ["self", null, null, null], "arg_types": [{".class": "Instance", "args": [{".class": "TypeVarType", "fullname": "sqlalchemy.sql._typing._TP", "id": 1, "name": "_TP", "upper_bound": {".class": "Instance", "args": [{".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 2}], "type_ref": "builtins.tuple"}, "values": [], "variance": 0}], "type_ref": "sqlalchemy.sql.selectable.Select"}, {".class": "TypeAliasType", "args": [{".class": "TypeVarType", "fullname": "sqlalchemy.sql._typing._T0", "id": -1, "name": "_T0", "upper_bound": {".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 2}, "values": [], "variance": 0}], "type_ref": "sqlalchemy.sql._typing._TypedColumnClauseArgument"}, {".class": "TypeAliasType", "args": [{".class": "TypeVarType", "fullname": "sqlalchemy.sql._typing._T1", "id": -2, "name": "_T1", "upper_bound": {".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 2}, "values": [], "variance": 0}], "type_ref": "sqlalchemy.sql._typing._TypedColumnClauseArgument"}, {".class": "TypeAliasType", "args": [{".class": "TypeVarType", "fullname": "sqlalchemy.sql._typing._T2", "id": -3, "name": "_T2", "upper_bound": {".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 2}, "values": [], "variance": 0}], "type_ref": "sqlalchemy.sql._typing._TypedColumnClauseArgument"}], "bound_args": [], "def_extras": {"first_arg": "self"}, "fallback": "builtins.function", "implicit": false, "is_ellipsis_args": false, "name": "with_only_columns of Select", "ret_type": {".class": "Instance", "args": [{".class": "TupleType", "implicit": false, "items": [{".class": "TypeVarType", "fullname": "sqlalchemy.sql._typing._T0", "id": -1, "name": "_T0", "upper_bound": {".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 2}, "values": [], "variance": 0}, {".class": "TypeVarType", "fullname": "sqlalchemy.sql._typing._T1", "id": -2, "name": "_T1", "upper_bound": {".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 2}, "values": [], "variance": 0}, {".class": "TypeVarType", "fullname": "sqlalchemy.sql._typing._T2", "id": -3, "name": "_T2", "upper_bound": {".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 2}, "values": [], "variance": 0}], "partial_fallback": {".class": "Instance", "args": [{".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 6}], "type_ref": "builtins.tuple"}}], "type_ref": "sqlalchemy.sql.selectable.Select"}, "variables": [{".class": "TypeVarDef", "fullname": "sqlalchemy.sql._typing._T0", "id": -1, "name": "_T0", "upper_bound": {".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 2}, "values": [], "variance": 0}, {".class": "TypeVarDef", "fullname": "sqlalchemy.sql._typing._T1", "id": -2, "name": "_T1", "upper_bound": {".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 2}, "values": [], "variance": 0}, {".class": "TypeVarDef", "fullname": "sqlalchemy.sql._typing._T2", "id": -3, "name": "_T2", "upper_bound": {".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 2}, "values": [], "variance": 0}]}}, "is_overload": true, "var": {".class": "Var", "flags": [], "fullname": null, "name": "with_only_columns", "type": null}}, {".class": "Decorator", "func": {".class": "FuncDef", "arg_kinds": [0, 0, 0, 0, 0], "arg_names": ["self", "__ent0", "__ent1", "__ent2", "__ent3"], "flags": ["is_overload", "is_decorated"], "fullname": "sqlalchemy.sql.selectable.Select.with_only_columns", "name": "with_only_columns", "type": {".class": "CallableType", "arg_kinds": [0, 0, 0, 0, 0], "arg_names": ["self", null, null, null, null], "arg_types": [{".class": "Instance", "args": [{".class": "TypeVarType", "fullname": "sqlalchemy.sql._typing._TP", "id": 1, "name": "_TP", "upper_bound": {".class": "Instance", "args": [{".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 2}], "type_ref": "builtins.tuple"}, "values": [], "variance": 0}], "type_ref": "sqlalchemy.sql.selectable.Select"}, {".class": "TypeAliasType", "args": [{".class": "TypeVarType", "fullname": "sqlalchemy.sql._typing._T0", "id": -1, "name": "_T0", "upper_bound": {".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 2}, "values": [], "variance": 0}], "type_ref": "sqlalchemy.sql._typing._TypedColumnClauseArgument"}, {".class": "TypeAliasType", "args": [{".class": "TypeVarType", "fullname": "sqlalchemy.sql._typing._T1", "id": -2, "name": "_T1", "upper_bound": {".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 2}, "values": [], "variance": 0}], "type_ref": "sqlalchemy.sql._typing._TypedColumnClauseArgument"}, {".class": "TypeAliasType", "args": [{".class": "TypeVarType", "fullname": "sqlalchemy.sql._typing._T2", "id": -3, "name": "_T2", "upper_bound": {".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 2}, "values": [], "variance": 0}], "type_ref": "sqlalchemy.sql._typing._TypedColumnClauseArgument"}, {".class": "TypeAliasType", "args": [{".class": "TypeVarType", "fullname": "sqlalchemy.sql._typing._T3", "id": -4, "name": "_T3", "upper_bound": {".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 2}, "values": [], "variance": 0}], "type_ref": "sqlalchemy.sql._typing._TypedColumnClauseArgument"}], "bound_args": [], "def_extras": {"first_arg": "self"}, "fallback": "builtins.function", "implicit": false, "is_ellipsis_args": false, "name": "with_only_columns of Select", "ret_type": {".class": "Instance", "args": [{".class": "TupleType", "implicit": false, "items": [{".class": "TypeVarType", "fullname": "sqlalchemy.sql._typing._T0", "id": -1, "name": "_T0", "upper_bound": {".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 2}, "values": [], "variance": 0}, {".class": "TypeVarType", "fullname": "sqlalchemy.sql._typing._T1", "id": -2, "name": "_T1", "upper_bound": {".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 2}, "values": [], "variance": 0}, {".class": "TypeVarType", "fullname": "sqlalchemy.sql._typing._T2", "id": -3, "name": "_T2", "upper_bound": {".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 2}, "values": [], "variance": 0}, {".class": "TypeVarType", "fullname": "sqlalchemy.sql._typing._T3", "id": -4, "name": "_T3", "upper_bound": {".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 2}, "values": [], "variance": 0}], "partial_fallback": {".class": "Instance", "args": [{".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 6}], "type_ref": "builtins.tuple"}}], "type_ref": "sqlalchemy.sql.selectable.Select"}, "variables": [{".class": "TypeVarDef", "fullname": "sqlalchemy.sql._typing._T0", "id": -1, "name": "_T0", "upper_bound": {".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 2}, "values": [], "variance": 0}, {".class": "TypeVarDef", "fullname": "sqlalchemy.sql._typing._T1", "id": -2, "name": "_T1", "upper_bound": {".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 2}, "values": [], "variance": 0}, {".class": "TypeVarDef", "fullname": "sqlalchemy.sql._typing._T2", "id": -3, "name": "_T2", "upper_bound": {".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 2}, "values": [], "variance": 0}, {".class": "TypeVarDef", "fullname": "sqlalchemy.sql._typing._T3", "id": -4, "name": "_T3", "upper_bound": {".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 2}, "values": [], "variance": 0}]}}, "is_overload": true, "var": {".class": "Var", "flags": [], "fullname": null, "name": "with_only_columns", "type": null}}, {".class": "Decorator", "func": {".class": "FuncDef", "arg_kinds": [0, 0, 0, 0, 0, 0], "arg_names": ["self", "__ent0", "__ent1", "__ent2", "__ent3", "__ent4"], "flags": ["is_overload", "is_decorated"], "fullname": "sqlalchemy.sql.selectable.Select.with_only_columns", "name": "with_only_columns", "type": {".class": "CallableType", "arg_kinds": [0, 0, 0, 0, 0, 0], "arg_names": ["self", null, null, null, null, null], "arg_types": [{".class": "Instance", "args": [{".class": "TypeVarType", "fullname": "sqlalchemy.sql._typing._TP", "id": 1, "name": "_TP", "upper_bound": {".class": "Instance", "args": [{".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 2}], "type_ref": "builtins.tuple"}, "values": [], "variance": 0}], "type_ref": "sqlalchemy.sql.selectable.Select"}, {".class": "TypeAliasType", "args": [{".class": "TypeVarType", "fullname": "sqlalchemy.sql._typing._T0", "id": -1, "name": "_T0", "upper_bound": {".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 2}, "values": [], "variance": 0}], "type_ref": "sqlalchemy.sql._typing._TypedColumnClauseArgument"}, {".class": "TypeAliasType", "args": [{".class": "TypeVarType", "fullname": "sqlalchemy.sql._typing._T1", "id": -2, "name": "_T1", "upper_bound": {".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 2}, "values": [], "variance": 0}], "type_ref": "sqlalchemy.sql._typing._TypedColumnClauseArgument"}, {".class": "TypeAliasType", "args": [{".class": "TypeVarType", "fullname": "sqlalchemy.sql._typing._T2", "id": -3, "name": "_T2", "upper_bound": {".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 2}, "values": [], "variance": 0}], "type_ref": "sqlalchemy.sql._typing._TypedColumnClauseArgument"}, {".class": "TypeAliasType", "args": [{".class": "TypeVarType", "fullname": "sqlalchemy.sql._typing._T3", "id": -4, "name": "_T3", "upper_bound": {".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 2}, "values": [], "variance": 0}], "type_ref": "sqlalchemy.sql._typing._TypedColumnClauseArgument"}, {".class": "TypeAliasType", "args": [{".class": "TypeVarType", "fullname": "sqlalchemy.sql._typing._T4", "id": -5, "name": "_T4", "upper_bound": {".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 2}, "values": [], "variance": 0}], "type_ref": "sqlalchemy.sql._typing._TypedColumnClauseArgument"}], "bound_args": [], "def_extras": {"first_arg": "self"}, "fallback": "builtins.function", "implicit": false, "is_ellipsis_args": false, "name": "with_only_columns of Select", "ret_type": {".class": "Instance", "args": [{".class": "TupleType", "implicit": false, "items": [{".class": "TypeVarType", "fullname": "sqlalchemy.sql._typing._T0", "id": -1, "name": "_T0", "upper_bound": {".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 2}, "values": [], "variance": 0}, {".class": "TypeVarType", "fullname": "sqlalchemy.sql._typing._T1", "id": -2, "name": "_T1", "upper_bound": {".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 2}, "values": [], "variance": 0}, {".class": "TypeVarType", "fullname": "sqlalchemy.sql._typing._T2", "id": -3, "name": "_T2", "upper_bound": {".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 2}, "values": [], "variance": 0}, {".class": "TypeVarType", "fullname": "sqlalchemy.sql._typing._T3", "id": -4, "name": "_T3", "upper_bound": {".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 2}, "values": [], "variance": 0}, {".class": "TypeVarType", "fullname": "sqlalchemy.sql._typing._T4", "id": -5, "name": "_T4", "upper_bound": {".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 2}, "values": [], "variance": 0}], "partial_fallback": {".class": "Instance", "args": [{".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 6}], "type_ref": "builtins.tuple"}}], "type_ref": "sqlalchemy.sql.selectable.Select"}, "variables": [{".class": "TypeVarDef", "fullname": "sqlalchemy.sql._typing._T0", "id": -1, "name": "_T0", "upper_bound": {".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 2}, "values": [], "variance": 0}, {".class": "TypeVarDef", "fullname": "sqlalchemy.sql._typing._T1", "id": -2, "name": "_T1", "upper_bound": {".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 2}, "values": [], "variance": 0}, {".class": "TypeVarDef", "fullname": "sqlalchemy.sql._typing._T2", "id": -3, "name": "_T2", "upper_bound": {".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 2}, "values": [], "variance": 0}, {".class": "TypeVarDef", "fullname": "sqlalchemy.sql._typing._T3", "id": -4, "name": "_T3", "upper_bound": {".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 2}, "values": [], "variance": 0}, {".class": "TypeVarDef", "fullname": "sqlalchemy.sql._typing._T4", "id": -5, "name": "_T4", "upper_bound": {".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 2}, "values": [], "variance": 0}]}}, "is_overload": true, "var": {".class": "Var", "flags": [], "fullname": null, "name": "with_only_columns", "type": null}}, {".class": "Decorator", "func": {".class": "FuncDef", "arg_kinds": [0, 0, 0, 0, 0, 0, 0], "arg_names": ["self", "__ent0", "__ent1", "__ent2", "__ent3", "__ent4", "__ent5"], "flags": ["is_overload", "is_decorated"], "fullname": "sqlalchemy.sql.selectable.Select.with_only_columns", "name": "with_only_columns", "type": {".class": "CallableType", "arg_kinds": [0, 0, 0, 0, 0, 0, 0], "arg_names": ["self", null, null, null, null, null, null], "arg_types": [{".class": "Instance", "args": [{".class": "TypeVarType", "fullname": "sqlalchemy.sql._typing._TP", "id": 1, "name": "_TP", "upper_bound": {".class": "Instance", "args": [{".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 2}], "type_ref": "builtins.tuple"}, "values": [], "variance": 0}], "type_ref": "sqlalchemy.sql.selectable.Select"}, {".class": "TypeAliasType", "args": [{".class": "TypeVarType", "fullname": "sqlalchemy.sql._typing._T0", "id": -1, "name": "_T0", "upper_bound": {".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 2}, "values": [], "variance": 0}], "type_ref": "sqlalchemy.sql._typing._TypedColumnClauseArgument"}, {".class": "TypeAliasType", "args": [{".class": "TypeVarType", "fullname": "sqlalchemy.sql._typing._T1", "id": -2, "name": "_T1", "upper_bound": {".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 2}, "values": [], "variance": 0}], "type_ref": "sqlalchemy.sql._typing._TypedColumnClauseArgument"}, {".class": "TypeAliasType", "args": [{".class": "TypeVarType", "fullname": "sqlalchemy.sql._typing._T2", "id": -3, "name": "_T2", "upper_bound": {".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 2}, "values": [], "variance": 0}], "type_ref": "sqlalchemy.sql._typing._TypedColumnClauseArgument"}, {".class": "TypeAliasType", "args": [{".class": "TypeVarType", "fullname": "sqlalchemy.sql._typing._T3", "id": -4, "name": "_T3", "upper_bound": {".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 2}, "values": [], "variance": 0}], "type_ref": "sqlalchemy.sql._typing._TypedColumnClauseArgument"}, {".class": "TypeAliasType", "args": [{".class": "TypeVarType", "fullname": "sqlalchemy.sql._typing._T4", "id": -5, "name": "_T4", "upper_bound": {".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 2}, "values": [], "variance": 0}], "type_ref": "sqlalchemy.sql._typing._TypedColumnClauseArgument"}, {".class": "TypeAliasType", "args": [{".class": "TypeVarType", "fullname": "sqlalchemy.sql._typing._T5", "id": -6, "name": "_T5", "upper_bound": {".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 2}, "values": [], "variance": 0}], "type_ref": "sqlalchemy.sql._typing._TypedColumnClauseArgument"}], "bound_args": [], "def_extras": {"first_arg": "self"}, "fallback": "builtins.function", "implicit": false, "is_ellipsis_args": false, "name": "with_only_columns of Select", "ret_type": {".class": "Instance", "args": [{".class": "TupleType", "implicit": false, "items": [{".class": "TypeVarType", "fullname": "sqlalchemy.sql._typing._T0", "id": -1, "name": "_T0", "upper_bound": {".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 2}, "values": [], "variance": 0}, {".class": "TypeVarType", "fullname": "sqlalchemy.sql._typing._T1", "id": -2, "name": "_T1", "upper_bound": {".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 2}, "values": [], "variance": 0}, {".class": "TypeVarType", "fullname": "sqlalchemy.sql._typing._T2", "id": -3, "name": "_T2", "upper_bound": {".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 2}, "values": [], "variance": 0}, {".class": "TypeVarType", "fullname": "sqlalchemy.sql._typing._T3", "id": -4, "name": "_T3", "upper_bound": {".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 2}, "values": [], "variance": 0}, {".class": "TypeVarType", "fullname": "sqlalchemy.sql._typing._T4", "id": -5, "name": "_T4", "upper_bound": {".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 2}, "values": [], "variance": 0}, {".class": "TypeVarType", "fullname": "sqlalchemy.sql._typing._T5", "id": -6, "name": "_T5", "upper_bound": {".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 2}, "values": [], "variance": 0}], "partial_fallback": {".class": "Instance", "args": [{".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 6}], "type_ref": "builtins.tuple"}}], "type_ref": "sqlalchemy.sql.selectable.Select"}, "variables": [{".class": "TypeVarDef", "fullname": "sqlalchemy.sql._typing._T0", "id": -1, "name": "_T0", "upper_bound": {".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 2}, "values": [], "variance": 0}, {".class": "TypeVarDef", "fullname": "sqlalchemy.sql._typing._T1", "id": -2, "name": "_T1", "upper_bound": {".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 2}, "values": [], "variance": 0}, {".class": "TypeVarDef", "fullname": "sqlalchemy.sql._typing._T2", "id": -3, "name": "_T2", "upper_bound": {".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 2}, "values": [], "variance": 0}, {".class": "TypeVarDef", "fullname": "sqlalchemy.sql._typing._T3", "id": -4, "name": "_T3", "upper_bound": {".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 2}, "values": [], "variance": 0}, {".class": "TypeVarDef", "fullname": "sqlalchemy.sql._typing._T4", "id": -5, "name": "_T4", "upper_bound": {".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 2}, "values": [], "variance": 0}, {".class": "TypeVarDef", "fullname": "sqlalchemy.sql._typing._T5", "id": -6, "name": "_T5", "upper_bound": {".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 2}, "values": [], "variance": 0}]}}, "is_overload": true, "var": {".class": "Var", "flags": [], "fullname": null, "name": "with_only_columns", "type": null}}, {".class": "Decorator", "func": {".class": "FuncDef", "arg_kinds": [0, 0, 0, 0, 0, 0, 0, 0], "arg_names": ["self", "__ent0", "__ent1", "__ent2", "__ent3", "__ent4", "__ent5", "__ent6"], "flags": ["is_overload", "is_decorated"], "fullname": "sqlalchemy.sql.selectable.Select.with_only_columns", "name": "with_only_columns", "type": {".class": "CallableType", "arg_kinds": [0, 0, 0, 0, 0, 0, 0, 0], "arg_names": ["self", null, null, null, null, null, null, null], "arg_types": [{".class": "Instance", "args": [{".class": "TypeVarType", "fullname": "sqlalchemy.sql._typing._TP", "id": 1, "name": "_TP", "upper_bound": {".class": "Instance", "args": [{".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 2}], "type_ref": "builtins.tuple"}, "values": [], "variance": 0}], "type_ref": "sqlalchemy.sql.selectable.Select"}, {".class": "TypeAliasType", "args": [{".class": "TypeVarType", "fullname": "sqlalchemy.sql._typing._T0", "id": -1, "name": "_T0", "upper_bound": {".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 2}, "values": [], "variance": 0}], "type_ref": "sqlalchemy.sql._typing._TypedColumnClauseArgument"}, {".class": "TypeAliasType", "args": [{".class": "TypeVarType", "fullname": "sqlalchemy.sql._typing._T1", "id": -2, "name": "_T1", "upper_bound": {".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 2}, "values": [], "variance": 0}], "type_ref": "sqlalchemy.sql._typing._TypedColumnClauseArgument"}, {".class": "TypeAliasType", "args": [{".class": "TypeVarType", "fullname": "sqlalchemy.sql._typing._T2", "id": -3, "name": "_T2", "upper_bound": {".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 2}, "values": [], "variance": 0}], "type_ref": "sqlalchemy.sql._typing._TypedColumnClauseArgument"}, {".class": "TypeAliasType", "args": [{".class": "TypeVarType", "fullname": "sqlalchemy.sql._typing._T3", "id": -4, "name": "_T3", "upper_bound": {".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 2}, "values": [], "variance": 0}], "type_ref": "sqlalchemy.sql._typing._TypedColumnClauseArgument"}, {".class": "TypeAliasType", "args": [{".class": "TypeVarType", "fullname": "sqlalchemy.sql._typing._T4", "id": -5, "name": "_T4", "upper_bound": {".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 2}, "values": [], "variance": 0}], "type_ref": "sqlalchemy.sql._typing._TypedColumnClauseArgument"}, {".class": "TypeAliasType", "args": [{".class": "TypeVarType", "fullname": "sqlalchemy.sql._typing._T5", "id": -6, "name": "_T5", "upper_bound": {".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 2}, "values": [], "variance": 0}], "type_ref": "sqlalchemy.sql._typing._TypedColumnClauseArgument"}, {".class": "TypeAliasType", "args": [{".class": "TypeVarType", "fullname": "sqlalchemy.sql._typing._T6", "id": -7, "name": "_T6", "upper_bound": {".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 2}, "values": [], "variance": 0}], "type_ref": "sqlalchemy.sql._typing._TypedColumnClauseArgument"}], "bound_args": [], "def_extras": {"first_arg": "self"}, "fallback": "builtins.function", "implicit": false, "is_ellipsis_args": false, "name": "with_only_columns of Select", "ret_type": {".class": "Instance", "args": [{".class": "TupleType", "implicit": false, "items": [{".class": "TypeVarType", "fullname": "sqlalchemy.sql._typing._T0", "id": -1, "name": "_T0", "upper_bound": {".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 2}, "values": [], "variance": 0}, {".class": "TypeVarType", "fullname": "sqlalchemy.sql._typing._T1", "id": -2, "name": "_T1", "upper_bound": {".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 2}, "values": [], "variance": 0}, {".class": "TypeVarType", "fullname": "sqlalchemy.sql._typing._T2", "id": -3, "name": "_T2", "upper_bound": {".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 2}, "values": [], "variance": 0}, {".class": "TypeVarType", "fullname": "sqlalchemy.sql._typing._T3", "id": -4, "name": "_T3", "upper_bound": {".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 2}, "values": [], "variance": 0}, {".class": "TypeVarType", "fullname": "sqlalchemy.sql._typing._T4", "id": -5, "name": "_T4", "upper_bound": {".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 2}, "values": [], "variance": 0}, {".class": "TypeVarType", "fullname": "sqlalchemy.sql._typing._T5", "id": -6, "name": "_T5", "upper_bound": {".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 2}, "values": [], "variance": 0}, {".class": "TypeVarType", "fullname": "sqlalchemy.sql._typing._T6", "id": -7, "name": "_T6", "upper_bound": {".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 2}, "values": [], "variance": 0}], "partial_fallback": {".class": "Instance", "args": [{".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 6}], "type_ref": "builtins.tuple"}}], "type_ref": "sqlalchemy.sql.selectable.Select"}, "variables": [{".class": "TypeVarDef", "fullname": "sqlalchemy.sql._typing._T0", "id": -1, "name": "_T0", "upper_bound": {".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 2}, "values": [], "variance": 0}, {".class": "TypeVarDef", "fullname": "sqlalchemy.sql._typing._T1", "id": -2, "name": "_T1", "upper_bound": {".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 2}, "values": [], "variance": 0}, {".class": "TypeVarDef", "fullname": "sqlalchemy.sql._typing._T2", "id": -3, "name": "_T2", "upper_bound": {".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 2}, "values": [], "variance": 0}, {".class": "TypeVarDef", "fullname": "sqlalchemy.sql._typing._T3", "id": -4, "name": "_T3", "upper_bound": {".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 2}, "values": [], "variance": 0}, {".class": "TypeVarDef", "fullname": "sqlalchemy.sql._typing._T4", "id": -5, "name": "_T4", "upper_bound": {".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 2}, "values": [], "variance": 0}, {".class": "TypeVarDef", "fullname": "sqlalchemy.sql._typing._T5", "id": -6, "name": "_T5", "upper_bound": {".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 2}, "values": [], "variance": 0}, {".class": "TypeVarDef", "fullname": "sqlalchemy.sql._typing._T6", "id": -7, "name": "_T6", "upper_bound": {".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 2}, "values": [], "variance": 0}]}}, "is_overload": true, "var": {".class": "Var", "flags": [], "fullname": null, "name": "with_only_columns", "type": null}}, {".class": "Decorator", "func": {".class": "FuncDef", "arg_kinds": [0, 0, 0, 0, 0, 0, 0, 0, 0], "arg_names": ["self", "__ent0", "__ent1", "__ent2", "__ent3", "__ent4", "__ent5", "__ent6", "__ent7"], "flags": ["is_overload", "is_decorated"], "fullname": "sqlalchemy.sql.selectable.Select.with_only_columns", "name": "with_only_columns", "type": {".class": "CallableType", "arg_kinds": [0, 0, 0, 0, 0, 0, 0, 0, 0], "arg_names": ["self", null, null, null, null, null, null, null, null], "arg_types": [{".class": "Instance", "args": [{".class": "TypeVarType", "fullname": "sqlalchemy.sql._typing._TP", "id": 1, "name": "_TP", "upper_bound": {".class": "Instance", "args": [{".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 2}], "type_ref": "builtins.tuple"}, "values": [], "variance": 0}], "type_ref": "sqlalchemy.sql.selectable.Select"}, {".class": "TypeAliasType", "args": [{".class": "TypeVarType", "fullname": "sqlalchemy.sql._typing._T0", "id": -1, "name": "_T0", "upper_bound": {".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 2}, "values": [], "variance": 0}], "type_ref": "sqlalchemy.sql._typing._TypedColumnClauseArgument"}, {".class": "TypeAliasType", "args": [{".class": "TypeVarType", "fullname": "sqlalchemy.sql._typing._T1", "id": -2, "name": "_T1", "upper_bound": {".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 2}, "values": [], "variance": 0}], "type_ref": "sqlalchemy.sql._typing._TypedColumnClauseArgument"}, {".class": "TypeAliasType", "args": [{".class": "TypeVarType", "fullname": "sqlalchemy.sql._typing._T2", "id": -3, "name": "_T2", "upper_bound": {".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 2}, "values": [], "variance": 0}], "type_ref": "sqlalchemy.sql._typing._TypedColumnClauseArgument"}, {".class": "TypeAliasType", "args": [{".class": "TypeVarType", "fullname": "sqlalchemy.sql._typing._T3", "id": -4, "name": "_T3", "upper_bound": {".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 2}, "values": [], "variance": 0}], "type_ref": "sqlalchemy.sql._typing._TypedColumnClauseArgument"}, {".class": "TypeAliasType", "args": [{".class": "TypeVarType", "fullname": "sqlalchemy.sql._typing._T4", "id": -5, "name": "_T4", "upper_bound": {".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 2}, "values": [], "variance": 0}], "type_ref": "sqlalchemy.sql._typing._TypedColumnClauseArgument"}, {".class": "TypeAliasType", "args": [{".class": "TypeVarType", "fullname": "sqlalchemy.sql._typing._T5", "id": -6, "name": "_T5", "upper_bound": {".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 2}, "values": [], "variance": 0}], "type_ref": "sqlalchemy.sql._typing._TypedColumnClauseArgument"}, {".class": "TypeAliasType", "args": [{".class": "TypeVarType", "fullname": "sqlalchemy.sql._typing._T6", "id": -7, "name": "_T6", "upper_bound": {".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 2}, "values": [], "variance": 0}], "type_ref": "sqlalchemy.sql._typing._TypedColumnClauseArgument"}, {".class": "TypeAliasType", "args": [{".class": "TypeVarType", "fullname": "sqlalchemy.sql._typing._T7", "id": -8, "name": "_T7", "upper_bound": {".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 2}, "values": [], "variance": 0}], "type_ref": "sqlalchemy.sql._typing._TypedColumnClauseArgument"}], "bound_args": [], "def_extras": {"first_arg": "self"}, "fallback": "builtins.function", "implicit": false, "is_ellipsis_args": false, "name": "with_only_columns of Select", "ret_type": {".class": "Instance", "args": [{".class": "TupleType", "implicit": false, "items": [{".class": "TypeVarType", "fullname": "sqlalchemy.sql._typing._T0", "id": -1, "name": "_T0", "upper_bound": {".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 2}, "values": [], "variance": 0}, {".class": "TypeVarType", "fullname": "sqlalchemy.sql._typing._T1", "id": -2, "name": "_T1", "upper_bound": {".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 2}, "values": [], "variance": 0}, {".class": "TypeVarType", "fullname": "sqlalchemy.sql._typing._T2", "id": -3, "name": "_T2", "upper_bound": {".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 2}, "values": [], "variance": 0}, {".class": "TypeVarType", "fullname": "sqlalchemy.sql._typing._T3", "id": -4, "name": "_T3", "upper_bound": {".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 2}, "values": [], "variance": 0}, {".class": "TypeVarType", "fullname": "sqlalchemy.sql._typing._T4", "id": -5, "name": "_T4", "upper_bound": {".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 2}, "values": [], "variance": 0}, {".class": "TypeVarType", "fullname": "sqlalchemy.sql._typing._T5", "id": -6, "name": "_T5", "upper_bound": {".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 2}, "values": [], "variance": 0}, {".class": "TypeVarType", "fullname": "sqlalchemy.sql._typing._T6", "id": -7, "name": "_T6", "upper_bound": {".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 2}, "values": [], "variance": 0}, {".class": "TypeVarType", "fullname": "sqlalchemy.sql._typing._T7", "id": -8, "name": "_T7", "upper_bound": {".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 2}, "values": [], "variance": 0}], "partial_fallback": {".class": "Instance", "args": [{".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 6}], "type_ref": "builtins.tuple"}}], "type_ref": "sqlalchemy.sql.selectable.Select"}, "variables": [{".class": "TypeVarDef", "fullname": "sqlalchemy.sql._typing._T0", "id": -1, "name": "_T0", "upper_bound": {".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 2}, "values": [], "variance": 0}, {".class": "TypeVarDef", "fullname": "sqlalchemy.sql._typing._T1", "id": -2, "name": "_T1", "upper_bound": {".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 2}, "values": [], "variance": 0}, {".class": "TypeVarDef", "fullname": "sqlalchemy.sql._typing._T2", "id": -3, "name": "_T2", "upper_bound": {".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 2}, "values": [], "variance": 0}, {".class": "TypeVarDef", "fullname": "sqlalchemy.sql._typing._T3", "id": -4, "name": "_T3", "upper_bound": {".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 2}, "values": [], "variance": 0}, {".class": "TypeVarDef", "fullname": "sqlalchemy.sql._typing._T4", "id": -5, "name": "_T4", "upper_bound": {".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 2}, "values": [], "variance": 0}, {".class": "TypeVarDef", "fullname": "sqlalchemy.sql._typing._T5", "id": -6, "name": "_T5", "upper_bound": {".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 2}, "values": [], "variance": 0}, {".class": "TypeVarDef", "fullname": "sqlalchemy.sql._typing._T6", "id": -7, "name": "_T6", "upper_bound": {".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 2}, "values": [], "variance": 0}, {".class": "TypeVarDef", "fullname": "sqlalchemy.sql._typing._T7", "id": -8, "name": "_T7", "upper_bound": {".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 2}, "values": [], "variance": 0}]}}, "is_overload": true, "var": {".class": "Var", "flags": [], "fullname": null, "name": "with_only_columns", "type": null}}, {".class": "Decorator", "func": {".class": "FuncDef", "arg_kinds": [0, 2, 5, 4], "arg_names": ["self", "entities", "maintain_column_froms", "__kw"], "flags": ["is_overload", "is_decorated"], "fullname": "sqlalchemy.sql.selectable.Select.with_only_columns", "name": "with_only_columns", "type": {".class": "CallableType", "arg_kinds": [0, 2, 5, 4], "arg_names": ["self", "entities", "maintain_column_froms", null], "arg_types": [{".class": "Instance", "args": [{".class": "TypeVarType", "fullname": "sqlalchemy.sql._typing._TP", "id": 1, "name": "_TP", "upper_bound": {".class": "Instance", "args": [{".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 2}], "type_ref": "builtins.tuple"}, "values": [], "variance": 0}], "type_ref": "sqlalchemy.sql.selectable.Select"}, {".class": "TypeAliasType", "args": [{".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 2}], "type_ref": "sqlalchemy.sql._typing._ColumnsClauseArgument"}, "builtins.bool", {".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 2}], "bound_args": [], "def_extras": {"first_arg": "self"}, "fallback": "builtins.function", "implicit": false, "is_ellipsis_args": false, "name": "with_only_columns of Select", "ret_type": {".class": "Instance", "args": [{".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 2}], "type_ref": "sqlalchemy.sql.selectable.Select"}, "variables": []}}, "is_overload": true, "var": {".class": "Var", "flags": [], "fullname": null, "name": "with_only_columns", "type": null}}], "type": {".class": "Overloaded", "items": [{".class": "CallableType", "arg_kinds": [0, 0], "arg_names": ["self", null], "arg_types": [{".class": "Instance", "args": [{".class": "TypeVarType", "fullname": "sqlalchemy.sql._typing._TP", "id": 1, "name": "_TP", "upper_bound": {".class": "Instance", "args": [{".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 2}], "type_ref": "builtins.tuple"}, "values": [], "variance": 0}], "type_ref": "sqlalchemy.sql.selectable.Select"}, {".class": "TypeAliasType", "args": [{".class": "TypeVarType", "fullname": "sqlalchemy.sql._typing._T0", "id": -1, "name": "_T0", "upper_bound": {".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 2}, "values": [], "variance": 0}], "type_ref": "sqlalchemy.sql._typing._TypedColumnClauseArgument"}], "bound_args": [], "def_extras": {"first_arg": "self"}, "fallback": "builtins.function", "implicit": false, "is_ellipsis_args": false, "name": "with_only_columns of Select", "ret_type": {".class": "Instance", "args": [{".class": "TupleType", "implicit": false, "items": [{".class": "TypeVarType", "fullname": "sqlalchemy.sql._typing._T0", "id": -1, "name": "_T0", "upper_bound": {".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 2}, "values": [], "variance": 0}], "partial_fallback": {".class": "Instance", "args": [{".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 6}], "type_ref": "builtins.tuple"}}], "type_ref": "sqlalchemy.sql.selectable.Select"}, "variables": [{".class": "TypeVarDef", "fullname": "sqlalchemy.sql._typing._T0", "id": -1, "name": "_T0", "upper_bound": {".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 2}, "values": [], "variance": 0}]}, {".class": "CallableType", "arg_kinds": [0, 0, 0], "arg_names": ["self", null, null], "arg_types": [{".class": "Instance", "args": [{".class": "TypeVarType", "fullname": "sqlalchemy.sql._typing._TP", "id": 1, "name": "_TP", "upper_bound": {".class": "Instance", "args": [{".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 2}], "type_ref": "builtins.tuple"}, "values": [], "variance": 0}], "type_ref": "sqlalchemy.sql.selectable.Select"}, {".class": "TypeAliasType", "args": [{".class": "TypeVarType", "fullname": "sqlalchemy.sql._typing._T0", "id": -1, "name": "_T0", "upper_bound": {".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 2}, "values": [], "variance": 0}], "type_ref": "sqlalchemy.sql._typing._TypedColumnClauseArgument"}, {".class": "TypeAliasType", "args": [{".class": "TypeVarType", "fullname": "sqlalchemy.sql._typing._T1", "id": -2, "name": "_T1", "upper_bound": {".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 2}, "values": [], "variance": 0}], "type_ref": "sqlalchemy.sql._typing._TypedColumnClauseArgument"}], "bound_args": [], "def_extras": {"first_arg": "self"}, "fallback": "builtins.function", "implicit": false, "is_ellipsis_args": false, "name": "with_only_columns of Select", "ret_type": {".class": "Instance", "args": [{".class": "TupleType", "implicit": false, "items": [{".class": "TypeVarType", "fullname": "sqlalchemy.sql._typing._T0", "id": -1, "name": "_T0", "upper_bound": {".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 2}, "values": [], "variance": 0}, {".class": "TypeVarType", "fullname": "sqlalchemy.sql._typing._T1", "id": -2, "name": "_T1", "upper_bound": {".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 2}, "values": [], "variance": 0}], "partial_fallback": {".class": "Instance", "args": [{".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 6}], "type_ref": "builtins.tuple"}}], "type_ref": "sqlalchemy.sql.selectable.Select"}, "variables": [{".class": "TypeVarDef", "fullname": "sqlalchemy.sql._typing._T0", "id": -1, "name": "_T0", "upper_bound": {".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 2}, "values": [], "variance": 0}, {".class": "TypeVarDef", "fullname": "sqlalchemy.sql._typing._T1", "id": -2, "name": "_T1", "upper_bound": {".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 2}, "values": [], "variance": 0}]}, {".class": "CallableType", "arg_kinds": [0, 0, 0, 0], "arg_names": ["self", null, null, null], "arg_types": [{".class": "Instance", "args": [{".class": "TypeVarType", "fullname": "sqlalchemy.sql._typing._TP", "id": 1, "name": "_TP", "upper_bound": {".class": "Instance", "args": [{".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 2}], "type_ref": "builtins.tuple"}, "values": [], "variance": 0}], "type_ref": "sqlalchemy.sql.selectable.Select"}, {".class": "TypeAliasType", "args": [{".class": "TypeVarType", "fullname": "sqlalchemy.sql._typing._T0", "id": -1, "name": "_T0", "upper_bound": {".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 2}, "values": [], "variance": 0}], "type_ref": "sqlalchemy.sql._typing._TypedColumnClauseArgument"}, {".class": "TypeAliasType", "args": [{".class": "TypeVarType", "fullname": "sqlalchemy.sql._typing._T1", "id": -2, "name": "_T1", "upper_bound": {".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 2}, "values": [], "variance": 0}], "type_ref": "sqlalchemy.sql._typing._TypedColumnClauseArgument"}, {".class": "TypeAliasType", "args": [{".class": "TypeVarType", "fullname": "sqlalchemy.sql._typing._T2", "id": -3, "name": "_T2", "upper_bound": {".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 2}, "values": [], "variance": 0}], "type_ref": "sqlalchemy.sql._typing._TypedColumnClauseArgument"}], "bound_args": [], "def_extras": {"first_arg": "self"}, "fallback": "builtins.function", "implicit": false, "is_ellipsis_args": false, "name": "with_only_columns of Select", "ret_type": {".class": "Instance", "args": [{".class": "TupleType", "implicit": false, "items": [{".class": "TypeVarType", "fullname": "sqlalchemy.sql._typing._T0", "id": -1, "name": "_T0", "upper_bound": {".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 2}, "values": [], "variance": 0}, {".class": "TypeVarType", "fullname": "sqlalchemy.sql._typing._T1", "id": -2, "name": "_T1", "upper_bound": {".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 2}, "values": [], "variance": 0}, {".class": "TypeVarType", "fullname": "sqlalchemy.sql._typing._T2", "id": -3, "name": "_T2", "upper_bound": {".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 2}, "values": [], "variance": 0}], "partial_fallback": {".class": "Instance", "args": [{".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 6}], "type_ref": "builtins.tuple"}}], "type_ref": "sqlalchemy.sql.selectable.Select"}, "variables": [{".class": "TypeVarDef", "fullname": "sqlalchemy.sql._typing._T0", "id": -1, "name": "_T0", "upper_bound": {".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 2}, "values": [], "variance": 0}, {".class": "TypeVarDef", "fullname": "sqlalchemy.sql._typing._T1", "id": -2, "name": "_T1", "upper_bound": {".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 2}, "values": [], "variance": 0}, {".class": "TypeVarDef", "fullname": "sqlalchemy.sql._typing._T2", "id": -3, "name": "_T2", "upper_bound": {".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 2}, "values": [], "variance": 0}]}, {".class": "CallableType", "arg_kinds": [0, 0, 0, 0, 0], "arg_names": ["self", null, null, null, null], "arg_types": [{".class": "Instance", "args": [{".class": "TypeVarType", "fullname": "sqlalchemy.sql._typing._TP", "id": 1, "name": "_TP", "upper_bound": {".class": "Instance", "args": [{".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 2}], "type_ref": "builtins.tuple"}, "values": [], "variance": 0}], "type_ref": "sqlalchemy.sql.selectable.Select"}, {".class": "TypeAliasType", "args": [{".class": "TypeVarType", "fullname": "sqlalchemy.sql._typing._T0", "id": -1, "name": "_T0", "upper_bound": {".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 2}, "values": [], "variance": 0}], "type_ref": "sqlalchemy.sql._typing._TypedColumnClauseArgument"}, {".class": "TypeAliasType", "args": [{".class": "TypeVarType", "fullname": "sqlalchemy.sql._typing._T1", "id": -2, "name": "_T1", "upper_bound": {".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 2}, "values": [], "variance": 0}], "type_ref": "sqlalchemy.sql._typing._TypedColumnClauseArgument"}, {".class": "TypeAliasType", "args": [{".class": "TypeVarType", "fullname": "sqlalchemy.sql._typing._T2", "id": -3, "name": "_T2", "upper_bound": {".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 2}, "values": [], "variance": 0}], "type_ref": "sqlalchemy.sql._typing._TypedColumnClauseArgument"}, {".class": "TypeAliasType", "args": [{".class": "TypeVarType", "fullname": "sqlalchemy.sql._typing._T3", "id": -4, "name": "_T3", "upper_bound": {".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 2}, "values": [], "variance": 0}], "type_ref": "sqlalchemy.sql._typing._TypedColumnClauseArgument"}], "bound_args": [], "def_extras": {"first_arg": "self"}, "fallback": "builtins.function", "implicit": false, "is_ellipsis_args": false, "name": "with_only_columns of Select", "ret_type": {".class": "Instance", "args": [{".class": "TupleType", "implicit": false, "items": [{".class": "TypeVarType", "fullname": "sqlalchemy.sql._typing._T0", "id": -1, "name": "_T0", "upper_bound": {".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 2}, "values": [], "variance": 0}, {".class": "TypeVarType", "fullname": "sqlalchemy.sql._typing._T1", "id": -2, "name": "_T1", "upper_bound": {".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 2}, "values": [], "variance": 0}, {".class": "TypeVarType", "fullname": "sqlalchemy.sql._typing._T2", "id": -3, "name": "_T2", "upper_bound": {".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 2}, "values": [], "variance": 0}, {".class": "TypeVarType", "fullname": "sqlalchemy.sql._typing._T3", "id": -4, "name": "_T3", "upper_bound": {".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 2}, "values": [], "variance": 0}], "partial_fallback": {".class": "Instance", "args": [{".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 6}], "type_ref": "builtins.tuple"}}], "type_ref": "sqlalchemy.sql.selectable.Select"}, "variables": [{".class": "TypeVarDef", "fullname": "sqlalchemy.sql._typing._T0", "id": -1, "name": "_T0", "upper_bound": {".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 2}, "values": [], "variance": 0}, {".class": "TypeVarDef", "fullname": "sqlalchemy.sql._typing._T1", "id": -2, "name": "_T1", "upper_bound": {".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 2}, "values": [], "variance": 0}, {".class": "TypeVarDef", "fullname": "sqlalchemy.sql._typing._T2", "id": -3, "name": "_T2", "upper_bound": {".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 2}, "values": [], "variance": 0}, {".class": "TypeVarDef", "fullname": "sqlalchemy.sql._typing._T3", "id": -4, "name": "_T3", "upper_bound": {".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 2}, "values": [], "variance": 0}]}, {".class": "CallableType", "arg_kinds": [0, 0, 0, 0, 0, 0], "arg_names": ["self", null, null, null, null, null], "arg_types": [{".class": "Instance", "args": [{".class": "TypeVarType", "fullname": "sqlalchemy.sql._typing._TP", "id": 1, "name": "_TP", "upper_bound": {".class": "Instance", "args": [{".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 2}], "type_ref": "builtins.tuple"}, "values": [], "variance": 0}], "type_ref": "sqlalchemy.sql.selectable.Select"}, {".class": "TypeAliasType", "args": [{".class": "TypeVarType", "fullname": "sqlalchemy.sql._typing._T0", "id": -1, "name": "_T0", "upper_bound": {".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 2}, "values": [], "variance": 0}], "type_ref": "sqlalchemy.sql._typing._TypedColumnClauseArgument"}, {".class": "TypeAliasType", "args": [{".class": "TypeVarType", "fullname": "sqlalchemy.sql._typing._T1", "id": -2, "name": "_T1", "upper_bound": {".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 2}, "values": [], "variance": 0}], "type_ref": "sqlalchemy.sql._typing._TypedColumnClauseArgument"}, {".class": "TypeAliasType", "args": [{".class": "TypeVarType", "fullname": "sqlalchemy.sql._typing._T2", "id": -3, "name": "_T2", "upper_bound": {".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 2}, "values": [], "variance": 0}], "type_ref": "sqlalchemy.sql._typing._TypedColumnClauseArgument"}, {".class": "TypeAliasType", "args": [{".class": "TypeVarType", "fullname": "sqlalchemy.sql._typing._T3", "id": -4, "name": "_T3", "upper_bound": {".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 2}, "values": [], "variance": 0}], "type_ref": "sqlalchemy.sql._typing._TypedColumnClauseArgument"}, {".class": "TypeAliasType", "args": [{".class": "TypeVarType", "fullname": "sqlalchemy.sql._typing._T4", "id": -5, "name": "_T4", "upper_bound": {".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 2}, "values": [], "variance": 0}], "type_ref": "sqlalchemy.sql._typing._TypedColumnClauseArgument"}], "bound_args": [], "def_extras": {"first_arg": "self"}, "fallback": "builtins.function", "implicit": false, "is_ellipsis_args": false, "name": "with_only_columns of Select", "ret_type": {".class": "Instance", "args": [{".class": "TupleType", "implicit": false, "items": [{".class": "TypeVarType", "fullname": "sqlalchemy.sql._typing._T0", "id": -1, "name": "_T0", "upper_bound": {".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 2}, "values": [], "variance": 0}, {".class": "TypeVarType", "fullname": "sqlalchemy.sql._typing._T1", "id": -2, "name": "_T1", "upper_bound": {".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 2}, "values": [], "variance": 0}, {".class": "TypeVarType", "fullname": "sqlalchemy.sql._typing._T2", "id": -3, "name": "_T2", "upper_bound": {".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 2}, "values": [], "variance": 0}, {".class": "TypeVarType", "fullname": "sqlalchemy.sql._typing._T3", "id": -4, "name": "_T3", "upper_bound": {".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 2}, "values": [], "variance": 0}, {".class": "TypeVarType", "fullname": "sqlalchemy.sql._typing._T4", "id": -5, "name": "_T4", "upper_bound": {".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 2}, "values": [], "variance": 0}], "partial_fallback": {".class": "Instance", "args": [{".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 6}], "type_ref": "builtins.tuple"}}], "type_ref": "sqlalchemy.sql.selectable.Select"}, "variables": [{".class": "TypeVarDef", "fullname": "sqlalchemy.sql._typing._T0", "id": -1, "name": "_T0", "upper_bound": {".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 2}, "values": [], "variance": 0}, {".class": "TypeVarDef", "fullname": "sqlalchemy.sql._typing._T1", "id": -2, "name": "_T1", "upper_bound": {".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 2}, "values": [], "variance": 0}, {".class": "TypeVarDef", "fullname": "sqlalchemy.sql._typing._T2", "id": -3, "name": "_T2", "upper_bound": {".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 2}, "values": [], "variance": 0}, {".class": "TypeVarDef", "fullname": "sqlalchemy.sql._typing._T3", "id": -4, "name": "_T3", "upper_bound": {".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 2}, "values": [], "variance": 0}, {".class": "TypeVarDef", "fullname": "sqlalchemy.sql._typing._T4", "id": -5, "name": "_T4", "upper_bound": {".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 2}, "values": [], "variance": 0}]}, {".class": "CallableType", "arg_kinds": [0, 0, 0, 0, 0, 0, 0], "arg_names": ["self", null, null, null, null, null, null], "arg_types": [{".class": "Instance", "args": [{".class": "TypeVarType", "fullname": "sqlalchemy.sql._typing._TP", "id": 1, "name": "_TP", "upper_bound": {".class": "Instance", "args": [{".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 2}], "type_ref": "builtins.tuple"}, "values": [], "variance": 0}], "type_ref": "sqlalchemy.sql.selectable.Select"}, {".class": "TypeAliasType", "args": [{".class": "TypeVarType", "fullname": "sqlalchemy.sql._typing._T0", "id": -1, "name": "_T0", "upper_bound": {".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 2}, "values": [], "variance": 0}], "type_ref": "sqlalchemy.sql._typing._TypedColumnClauseArgument"}, {".class": "TypeAliasType", "args": [{".class": "TypeVarType", "fullname": "sqlalchemy.sql._typing._T1", "id": -2, "name": "_T1", "upper_bound": {".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 2}, "values": [], "variance": 0}], "type_ref": "sqlalchemy.sql._typing._TypedColumnClauseArgument"}, {".class": "TypeAliasType", "args": [{".class": "TypeVarType", "fullname": "sqlalchemy.sql._typing._T2", "id": -3, "name": "_T2", "upper_bound": {".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 2}, "values": [], "variance": 0}], "type_ref": "sqlalchemy.sql._typing._TypedColumnClauseArgument"}, {".class": "TypeAliasType", "args": [{".class": "TypeVarType", "fullname": "sqlalchemy.sql._typing._T3", "id": -4, "name": "_T3", "upper_bound": {".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 2}, "values": [], "variance": 0}], "type_ref": "sqlalchemy.sql._typing._TypedColumnClauseArgument"}, {".class": "TypeAliasType", "args": [{".class": "TypeVarType", "fullname": "sqlalchemy.sql._typing._T4", "id": -5, "name": "_T4", "upper_bound": {".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 2}, "values": [], "variance": 0}], "type_ref": "sqlalchemy.sql._typing._TypedColumnClauseArgument"}, {".class": "TypeAliasType", "args": [{".class": "TypeVarType", "fullname": "sqlalchemy.sql._typing._T5", "id": -6, "name": "_T5", "upper_bound": {".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 2}, "values": [], "variance": 0}], "type_ref": "sqlalchemy.sql._typing._TypedColumnClauseArgument"}], "bound_args": [], "def_extras": {"first_arg": "self"}, "fallback": "builtins.function", "implicit": false, "is_ellipsis_args": false, "name": "with_only_columns of Select", "ret_type": {".class": "Instance", "args": [{".class": "TupleType", "implicit": false, "items": [{".class": "TypeVarType", "fullname": "sqlalchemy.sql._typing._T0", "id": -1, "name": "_T0", "upper_bound": {".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 2}, "values": [], "variance": 0}, {".class": "TypeVarType", "fullname": "sqlalchemy.sql._typing._T1", "id": -2, "name": "_T1", "upper_bound": {".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 2}, "values": [], "variance": 0}, {".class": "TypeVarType", "fullname": "sqlalchemy.sql._typing._T2", "id": -3, "name": "_T2", "upper_bound": {".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 2}, "values": [], "variance": 0}, {".class": "TypeVarType", "fullname": "sqlalchemy.sql._typing._T3", "id": -4, "name": "_T3", "upper_bound": {".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 2}, "values": [], "variance": 0}, {".class": "TypeVarType", "fullname": "sqlalchemy.sql._typing._T4", "id": -5, "name": "_T4", "upper_bound": {".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 2}, "values": [], "variance": 0}, {".class": "TypeVarType", "fullname": "sqlalchemy.sql._typing._T5", "id": -6, "name": "_T5", "upper_bound": {".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 2}, "values": [], "variance": 0}], "partial_fallback": {".class": "Instance", "args": [{".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 6}], "type_ref": "builtins.tuple"}}], "type_ref": "sqlalchemy.sql.selectable.Select"}, "variables": [{".class": "TypeVarDef", "fullname": "sqlalchemy.sql._typing._T0", "id": -1, "name": "_T0", "upper_bound": {".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 2}, "values": [], "variance": 0}, {".class": "TypeVarDef", "fullname": "sqlalchemy.sql._typing._T1", "id": -2, "name": "_T1", "upper_bound": {".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 2}, "values": [], "variance": 0}, {".class": "TypeVarDef", "fullname": "sqlalchemy.sql._typing._T2", "id": -3, "name": "_T2", "upper_bound": {".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 2}, "values": [], "variance": 0}, {".class": "TypeVarDef", "fullname": "sqlalchemy.sql._typing._T3", "id": -4, "name": "_T3", "upper_bound": {".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 2}, "values": [], "variance": 0}, {".class": "TypeVarDef", "fullname": "sqlalchemy.sql._typing._T4", "id": -5, "name": "_T4", "upper_bound": {".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 2}, "values": [], "variance": 0}, {".class": "TypeVarDef", "fullname": "sqlalchemy.sql._typing._T5", "id": -6, "name": "_T5", "upper_bound": {".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 2}, "values": [], "variance": 0}]}, {".class": "CallableType", "arg_kinds": [0, 0, 0, 0, 0, 0, 0, 0], "arg_names": ["self", null, null, null, null, null, null, null], "arg_types": [{".class": "Instance", "args": [{".class": "TypeVarType", "fullname": "sqlalchemy.sql._typing._TP", "id": 1, "name": "_TP", "upper_bound": {".class": "Instance", "args": [{".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 2}], "type_ref": "builtins.tuple"}, "values": [], "variance": 0}], "type_ref": "sqlalchemy.sql.selectable.Select"}, {".class": "TypeAliasType", "args": [{".class": "TypeVarType", "fullname": "sqlalchemy.sql._typing._T0", "id": -1, "name": "_T0", "upper_bound": {".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 2}, "values": [], "variance": 0}], "type_ref": "sqlalchemy.sql._typing._TypedColumnClauseArgument"}, {".class": "TypeAliasType", "args": [{".class": "TypeVarType", "fullname": "sqlalchemy.sql._typing._T1", "id": -2, "name": "_T1", "upper_bound": {".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 2}, "values": [], "variance": 0}], "type_ref": "sqlalchemy.sql._typing._TypedColumnClauseArgument"}, {".class": "TypeAliasType", "args": [{".class": "TypeVarType", "fullname": "sqlalchemy.sql._typing._T2", "id": -3, "name": "_T2", "upper_bound": {".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 2}, "values": [], "variance": 0}], "type_ref": "sqlalchemy.sql._typing._TypedColumnClauseArgument"}, {".class": "TypeAliasType", "args": [{".class": "TypeVarType", "fullname": "sqlalchemy.sql._typing._T3", "id": -4, "name": "_T3", "upper_bound": {".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 2}, "values": [], "variance": 0}], "type_ref": "sqlalchemy.sql._typing._TypedColumnClauseArgument"}, {".class": "TypeAliasType", "args": [{".class": "TypeVarType", "fullname": "sqlalchemy.sql._typing._T4", "id": -5, "name": "_T4", "upper_bound": {".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 2}, "values": [], "variance": 0}], "type_ref": "sqlalchemy.sql._typing._TypedColumnClauseArgument"}, {".class": "TypeAliasType", "args": [{".class": "TypeVarType", "fullname": "sqlalchemy.sql._typing._T5", "id": -6, "name": "_T5", "upper_bound": {".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 2}, "values": [], "variance": 0}], "type_ref": "sqlalchemy.sql._typing._TypedColumnClauseArgument"}, {".class": "TypeAliasType", "args": [{".class": "TypeVarType", "fullname": "sqlalchemy.sql._typing._T6", "id": -7, "name": "_T6", "upper_bound": {".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 2}, "values": [], "variance": 0}], "type_ref": "sqlalchemy.sql._typing._TypedColumnClauseArgument"}], "bound_args": [], "def_extras": {"first_arg": "self"}, "fallback": "builtins.function", "implicit": false, "is_ellipsis_args": false, "name": "with_only_columns of Select", "ret_type": {".class": "Instance", "args": [{".class": "TupleType", "implicit": false, "items": [{".class": "TypeVarType", "fullname": "sqlalchemy.sql._typing._T0", "id": -1, "name": "_T0", "upper_bound": {".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 2}, "values": [], "variance": 0}, {".class": "TypeVarType", "fullname": "sqlalchemy.sql._typing._T1", "id": -2, "name": "_T1", "upper_bound": {".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 2}, "values": [], "variance": 0}, {".class": "TypeVarType", "fullname": "sqlalchemy.sql._typing._T2", "id": -3, "name": "_T2", "upper_bound": {".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 2}, "values": [], "variance": 0}, {".class": "TypeVarType", "fullname": "sqlalchemy.sql._typing._T3", "id": -4, "name": "_T3", "upper_bound": {".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 2}, "values": [], "variance": 0}, {".class": "TypeVarType", "fullname": "sqlalchemy.sql._typing._T4", "id": -5, "name": "_T4", "upper_bound": {".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 2}, "values": [], "variance": 0}, {".class": "TypeVarType", "fullname": "sqlalchemy.sql._typing._T5", "id": -6, "name": "_T5", "upper_bound": {".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 2}, "values": [], "variance": 0}, {".class": "TypeVarType", "fullname": "sqlalchemy.sql._typing._T6", "id": -7, "name": "_T6", "upper_bound": {".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 2}, "values": [], "variance": 0}], "partial_fallback": {".class": "Instance", "args": [{".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 6}], "type_ref": "builtins.tuple"}}], "type_ref": "sqlalchemy.sql.selectable.Select"}, "variables": [{".class": "TypeVarDef", "fullname": "sqlalchemy.sql._typing._T0", "id": -1, "name": "_T0", "upper_bound": {".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 2}, "values": [], "variance": 0}, {".class": "TypeVarDef", "fullname": "sqlalchemy.sql._typing._T1", "id": -2, "name": "_T1", "upper_bound": {".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 2}, "values": [], "variance": 0}, {".class": "TypeVarDef", "fullname": "sqlalchemy.sql._typing._T2", "id": -3, "name": "_T2", "upper_bound": {".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 2}, "values": [], "variance": 0}, {".class": "TypeVarDef", "fullname": "sqlalchemy.sql._typing._T3", "id": -4, "name": "_T3", "upper_bound": {".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 2}, "values": [], "variance": 0}, {".class": "TypeVarDef", "fullname": "sqlalchemy.sql._typing._T4", "id": -5, "name": "_T4", "upper_bound": {".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 2}, "values": [], "variance": 0}, {".class": "TypeVarDef", "fullname": "sqlalchemy.sql._typing._T5", "id": -6, "name": "_T5", "upper_bound": {".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 2}, "values": [], "variance": 0}, {".class": "TypeVarDef", "fullname": "sqlalchemy.sql._typing._T6", "id": -7, "name": "_T6", "upper_bound": {".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 2}, "values": [], "variance": 0}]}, {".class": "CallableType", "arg_kinds": [0, 0, 0, 0, 0, 0, 0, 0, 0], "arg_names": ["self", null, null, null, null, null, null, null, null], "arg_types": [{".class": "Instance", "args": [{".class": "TypeVarType", "fullname": "sqlalchemy.sql._typing._TP", "id": 1, "name": "_TP", "upper_bound": {".class": "Instance", "args": [{".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 2}], "type_ref": "builtins.tuple"}, "values": [], "variance": 0}], "type_ref": "sqlalchemy.sql.selectable.Select"}, {".class": "TypeAliasType", "args": [{".class": "TypeVarType", "fullname": "sqlalchemy.sql._typing._T0", "id": -1, "name": "_T0", "upper_bound": {".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 2}, "values": [], "variance": 0}], "type_ref": "sqlalchemy.sql._typing._TypedColumnClauseArgument"}, {".class": "TypeAliasType", "args": [{".class": "TypeVarType", "fullname": "sqlalchemy.sql._typing._T1", "id": -2, "name": "_T1", "upper_bound": {".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 2}, "values": [], "variance": 0}], "type_ref": "sqlalchemy.sql._typing._TypedColumnClauseArgument"}, {".class": "TypeAliasType", "args": [{".class": "TypeVarType", "fullname": "sqlalchemy.sql._typing._T2", "id": -3, "name": "_T2", "upper_bound": {".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 2}, "values": [], "variance": 0}], "type_ref": "sqlalchemy.sql._typing._TypedColumnClauseArgument"}, {".class": "TypeAliasType", "args": [{".class": "TypeVarType", "fullname": "sqlalchemy.sql._typing._T3", "id": -4, "name": "_T3", "upper_bound": {".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 2}, "values": [], "variance": 0}], "type_ref": "sqlalchemy.sql._typing._TypedColumnClauseArgument"}, {".class": "TypeAliasType", "args": [{".class": "TypeVarType", "fullname": "sqlalchemy.sql._typing._T4", "id": -5, "name": "_T4", "upper_bound": {".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 2}, "values": [], "variance": 0}], "type_ref": "sqlalchemy.sql._typing._TypedColumnClauseArgument"}, {".class": "TypeAliasType", "args": [{".class": "TypeVarType", "fullname": "sqlalchemy.sql._typing._T5", "id": -6, "name": "_T5", "upper_bound": {".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 2}, "values": [], "variance": 0}], "type_ref": "sqlalchemy.sql._typing._TypedColumnClauseArgument"}, {".class": "TypeAliasType", "args": [{".class": "TypeVarType", "fullname": "sqlalchemy.sql._typing._T6", "id": -7, "name": "_T6", "upper_bound": {".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 2}, "values": [], "variance": 0}], "type_ref": "sqlalchemy.sql._typing._TypedColumnClauseArgument"}, {".class": "TypeAliasType", "args": [{".class": "TypeVarType", "fullname": "sqlalchemy.sql._typing._T7", "id": -8, "name": "_T7", "upper_bound": {".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 2}, "values": [], "variance": 0}], "type_ref": "sqlalchemy.sql._typing._TypedColumnClauseArgument"}], "bound_args": [], "def_extras": {"first_arg": "self"}, "fallback": "builtins.function", "implicit": false, "is_ellipsis_args": false, "name": "with_only_columns of Select", "ret_type": {".class": "Instance", "args": [{".class": "TupleType", "implicit": false, "items": [{".class": "TypeVarType", "fullname": "sqlalchemy.sql._typing._T0", "id": -1, "name": "_T0", "upper_bound": {".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 2}, "values": [], "variance": 0}, {".class": "TypeVarType", "fullname": "sqlalchemy.sql._typing._T1", "id": -2, "name": "_T1", "upper_bound": {".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 2}, "values": [], "variance": 0}, {".class": "TypeVarType", "fullname": "sqlalchemy.sql._typing._T2", "id": -3, "name": "_T2", "upper_bound": {".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 2}, "values": [], "variance": 0}, {".class": "TypeVarType", "fullname": "sqlalchemy.sql._typing._T3", "id": -4, "name": "_T3", "upper_bound": {".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 2}, "values": [], "variance": 0}, {".class": "TypeVarType", "fullname": "sqlalchemy.sql._typing._T4", "id": -5, "name": "_T4", "upper_bound": {".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 2}, "values": [], "variance": 0}, {".class": "TypeVarType", "fullname": "sqlalchemy.sql._typing._T5", "id": -6, "name": "_T5", "upper_bound": {".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 2}, "values": [], "variance": 0}, {".class": "TypeVarType", "fullname": "sqlalchemy.sql._typing._T6", "id": -7, "name": "_T6", "upper_bound": {".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 2}, "values": [], "variance": 0}, {".class": "TypeVarType", "fullname": "sqlalchemy.sql._typing._T7", "id": -8, "name": "_T7", "upper_bound": {".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 2}, "values": [], "variance": 0}], "partial_fallback": {".class": "Instance", "args": [{".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 6}], "type_ref": "builtins.tuple"}}], "type_ref": "sqlalchemy.sql.selectable.Select"}, "variables": [{".class": "TypeVarDef", "fullname": "sqlalchemy.sql._typing._T0", "id": -1, "name": "_T0", "upper_bound": {".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 2}, "values": [], "variance": 0}, {".class": "TypeVarDef", "fullname": "sqlalchemy.sql._typing._T1", "id": -2, "name": "_T1", "upper_bound": {".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 2}, "values": [], "variance": 0}, {".class": "TypeVarDef", "fullname": "sqlalchemy.sql._typing._T2", "id": -3, "name": "_T2", "upper_bound": {".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 2}, "values": [], "variance": 0}, {".class": "TypeVarDef", "fullname": "sqlalchemy.sql._typing._T3", "id": -4, "name": "_T3", "upper_bound": {".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 2}, "values": [], "variance": 0}, {".class": "TypeVarDef", "fullname": "sqlalchemy.sql._typing._T4", "id": -5, "name": "_T4", "upper_bound": {".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 2}, "values": [], "variance": 0}, {".class": "TypeVarDef", "fullname": "sqlalchemy.sql._typing._T5", "id": -6, "name": "_T5", "upper_bound": {".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 2}, "values": [], "variance": 0}, {".class": "TypeVarDef", "fullname": "sqlalchemy.sql._typing._T6", "id": -7, "name": "_T6", "upper_bound": {".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 2}, "values": [], "variance": 0}, {".class": "TypeVarDef", "fullname": "sqlalchemy.sql._typing._T7", "id": -8, "name": "_T7", "upper_bound": {".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 2}, "values": [], "variance": 0}]}, {".class": "CallableType", "arg_kinds": [0, 2, 5, 4], "arg_names": ["self", "entities", "maintain_column_froms", null], "arg_types": [{".class": "Instance", "args": [{".class": "TypeVarType", "fullname": "sqlalchemy.sql._typing._TP", "id": 1, "name": "_TP", "upper_bound": {".class": "Instance", "args": [{".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 2}], "type_ref": "builtins.tuple"}, "values": [], "variance": 0}], "type_ref": "sqlalchemy.sql.selectable.Select"}, {".class": "TypeAliasType", "args": [{".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 2}], "type_ref": "sqlalchemy.sql._typing._ColumnsClauseArgument"}, "builtins.bool", {".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 2}], "bound_args": [], "def_extras": {"first_arg": "self"}, "fallback": "builtins.function", "implicit": false, "is_ellipsis_args": false, "name": "with_only_columns of Select", "ret_type": {".class": "Instance", "args": [{".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 2}], "type_ref": "sqlalchemy.sql.selectable.Select"}, "variables": []}]}}}}, "tuple_type": null, "type_vars": ["_TP"], "typeddict_type": null}}, "SelectBase": {".class": "SymbolTableNode", "kind": "Gdef", "node": {".class": "TypeInfo", "_promote": null, "abstract_attributes": [], "bases": ["sqlalchemy.sql.roles.SelectStatementRole", "sqlalchemy.sql.roles.DMLSelectRole", "sqlalchemy.sql.roles.CompoundElementRole", "sqlalchemy.sql.roles.InElementRole", "sqlalchemy.sql.selectable.HasCTE", "sqlalchemy.sql.annotation.SupportsCloneAnnotations", "sqlalchemy.sql.selectable.Selectable"], "declared_metaclass": null, "defn": {".class": "ClassDef", "fullname": "sqlalchemy.sql.selectable.SelectBase", "name": "SelectBase", "type_vars": []}, "flags": [], "fullname": "sqlalchemy.sql.selectable.SelectBase", "metaclass_type": null, "metadata": {}, "module_name": "sqlalchemy.sql.selectable", "mro": ["sqlalchemy.sql.selectable.SelectBase", "sqlalchemy.sql.roles.SelectStatementRole", "sqlalchemy.sql.roles.StatementRole", "sqlalchemy.sql.roles.DMLSelectRole", "sqlalchemy.sql.roles.CompoundElementRole", "sqlalchemy.sql.roles.AllowsLambdaRole", "sqlalchemy.sql.roles.InElementRole", "sqlalchemy.sql.selectable.HasCTE", "sqlalchemy.sql.roles.HasCTERole", "sqlalchemy.sql.selectable.SelectsRows", "sqlalchemy.sql.annotation.SupportsCloneAnnotations", "sqlalchemy.sql.selectable.Selectable", "sqlalchemy.sql.selectable.ReturnsRows", "sqlalchemy.sql.roles.ReturnsRowsRole", "sqlalchemy.sql.roles.SQLRole", "sqlalchemy.sql.elements.DQLDMLClauseElement", "sqlalchemy.sql.elements.ClauseElement", "sqlalchemy.sql.annotation.SupportsWrappingAnnotations", "sqlalchemy.sql.annotation.SupportsAnnotations", "sqlalchemy.sql.cache_key.MemoizedHasCacheKey", "sqlalchemy.sql.cache_key.HasCacheKey", "sqlalchemy.util.langhelpers.HasMemoized", "sqlalchemy.sql.traversals.HasCopyInternals", "sqlalchemy.sql.visitors.ExternallyTraversible", "sqlalchemy.sql.visitors.HasTraverseInternals", "sqlalchemy.sql.elements.CompilerElement", "sqlalchemy.sql.visitors.Visitable", "builtins.object"], "names": {".class": "SymbolTable", "_all_selected_columns": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "Decorator", "func": {".class": "FuncDef", "arg_kinds": [0], "arg_names": ["self"], "flags": ["is_property", "is_decorated"], "fullname": "sqlalchemy.sql.selectable.SelectBase._all_selected_columns", "name": "_all_selected_columns", "type": {".class": "CallableType", "arg_kinds": [0], "arg_names": ["self"], "arg_types": ["sqlalchemy.sql.selectable.SelectBase"], "bound_args": [], "def_extras": {"first_arg": "self"}, "fallback": "builtins.function", "implicit": false, "is_ellipsis_args": false, "name": "_all_selected_columns of SelectBase", "ret_type": {".class": "TypeAliasType", "args": [], "type_ref": "sqlalchemy.sql.selectable._SelectIterable"}, "variables": []}}, "is_overload": false, "var": {".class": "Var", "flags": ["is_initialized_in_class", "is_property", "is_ready"], "fullname": null, "name": "_all_selected_columns", "type": {".class": "CallableType", "arg_kinds": [0], "arg_names": ["self"], "arg_types": ["sqlalchemy.sql.selectable.SelectBase"], "bound_args": [], "def_extras": {"first_arg": "self"}, "fallback": "builtins.function", "implicit": false, "is_ellipsis_args": false, "name": "_all_selected_columns of SelectBase", "ret_type": {".class": "TypeAliasType", "args": [], "type_ref": "sqlalchemy.sql.selectable._SelectIterable"}, "variables": []}}}}, "_ensure_disambiguated_names": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "FuncDef", "arg_kinds": [0], "arg_names": ["self"], "flags": [], "fullname": "sqlalchemy.sql.selectable.SelectBase._ensure_disambiguated_names", "name": "_ensure_disambiguated_names", "type": {".class": "CallableType", "arg_kinds": [0], "arg_names": ["self"], "arg_types": ["sqlalchemy.sql.selectable.SelectBase"], "bound_args": [], "def_extras": {"first_arg": "self"}, "fallback": "builtins.function", "implicit": false, "is_ellipsis_args": false, "name": "_ensure_disambiguated_names of SelectBase", "ret_type": {".class": "AnyType", "missing_import_name": "sqlalchemy.util.typing.Self", "source_any": null, "type_of_any": 3}, "variables": []}}}, "_generate_fromclause_column_proxies": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "FuncDef", "arg_kinds": [0, 0, 5], "arg_names": ["self", "subquery", "proxy_compound_columns"], "flags": [], "fullname": "sqlalchemy.sql.selectable.SelectBase._generate_fromclause_column_proxies", "name": "_generate_fromclause_column_proxies", "type": {".class": "CallableType", "arg_kinds": [0, 0, 5], "arg_names": ["self", "subquery", "proxy_compound_columns"], "arg_types": ["sqlalchemy.sql.selectable.SelectBase", "sqlalchemy.sql.selectable.FromClause", {".class": "UnionType", "items": [{".class": "Instance", "args": [{".class": "Instance", "args": [{".class": "Instance", "args": [{".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 2}], "type_ref": "sqlalchemy.sql.elements.ColumnElement"}], "type_ref": "typing.Sequence"}], "type_ref": "typing.Iterable"}, {".class": "NoneType"}]}], "bound_args": [], "def_extras": {"first_arg": "self"}, "fallback": "builtins.function", "implicit": false, "is_ellipsis_args": false, "name": "_generate_fromclause_column_proxies of SelectBase", "ret_type": {".class": "NoneType"}, "variables": []}}}, "_implicit_subquery": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "Decorator", "func": {".class": "FuncDef", "arg_kinds": [0], "arg_names": ["self"], "flags": ["is_decorated"], "fullname": "sqlalchemy.sql.selectable.SelectBase._implicit_subquery", "name": "_implicit_subquery", "type": {".class": "CallableType", "arg_kinds": [0], "arg_names": ["self"], "arg_types": ["sqlalchemy.sql.selectable.SelectBase"], "bound_args": [], "def_extras": {"first_arg": "self"}, "fallback": "builtins.function", "implicit": false, "is_ellipsis_args": false, "name": "_implicit_subquery of SelectBase", "ret_type": "sqlalchemy.sql.selectable.Subquery", "variables": []}}, "is_overload": false, "var": {".class": "Var", "flags": ["is_initialized_in_class", "is_ready"], "fullname": null, "name": "_implicit_subquery", "type": {".class": "Instance", "args": ["sqlalchemy.sql.selectable.Subquery"], "type_ref": "sqlalchemy.util.langhelpers.HasMemoized.memoized_attribute"}}}}, "_is_select_base": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "Var", "flags": ["is_initialized_in_class"], "fullname": "sqlalchemy.sql.selectable.SelectBase._is_select_base", "name": "_is_select_base", "type": "builtins.bool"}}, "_label_style": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "Var", "flags": ["is_initialized_in_class", "is_ready"], "fullname": "sqlalchemy.sql.selectable.SelectBase._label_style", "name": "_label_style", "type": "sqlalchemy.sql.selectable.SelectLabelStyle"}}, "_refresh_for_new_column": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "FuncDef", "arg_kinds": [0, 0], "arg_names": ["self", "column"], "flags": [], "fullname": "sqlalchemy.sql.selectable.SelectBase._refresh_for_new_column", "name": "_refresh_for_new_column", "type": {".class": "CallableType", "arg_kinds": [0, 0], "arg_names": ["self", "column"], "arg_types": ["sqlalchemy.sql.selectable.SelectBase", {".class": "Instance", "args": [{".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 2}], "type_ref": "sqlalchemy.sql.elements.ColumnElement"}], "bound_args": [], "def_extras": {"first_arg": "self"}, "fallback": "builtins.function", "implicit": false, "is_ellipsis_args": false, "name": "_refresh_for_new_column of SelectBase", "ret_type": {".class": "NoneType"}, "variables": []}}}, "_scalar_type": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "FuncDef", "arg_kinds": [0], "arg_names": ["self"], "flags": [], "fullname": "sqlalchemy.sql.selectable.SelectBase._scalar_type", "name": "_scalar_type", "type": {".class": "CallableType", "arg_kinds": [0], "arg_names": ["self"], "arg_types": ["sqlalchemy.sql.selectable.SelectBase"], "bound_args": [], "def_extras": {"first_arg": "self"}, "fallback": "builtins.function", "implicit": false, "is_ellipsis_args": false, "name": "_scalar_type of SelectBase", "ret_type": {".class": "Instance", "args": [{".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 2}], "type_ref": "sqlalchemy.sql.type_api.TypeEngine"}, "variables": []}}}, "alias": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "FuncDef", "arg_kinds": [0, 1, 1], "arg_names": ["self", "name", "flat"], "flags": [], "fullname": "sqlalchemy.sql.selectable.SelectBase.alias", "name": "alias", "type": {".class": "CallableType", "arg_kinds": [0, 1, 1], "arg_names": ["self", "name", "flat"], "arg_types": ["sqlalchemy.sql.selectable.SelectBase", {".class": "UnionType", "items": ["builtins.str", {".class": "NoneType"}]}, "builtins.bool"], "bound_args": [], "def_extras": {"first_arg": "self"}, "fallback": "builtins.function", "implicit": false, "is_ellipsis_args": false, "name": "alias of SelectBase", "ret_type": "sqlalchemy.sql.selectable.Subquery", "variables": []}}}, "as_scalar": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "Decorator", "func": {".class": "FuncDef", "arg_kinds": [0], "arg_names": ["self"], "flags": ["is_decorated"], "fullname": "sqlalchemy.sql.selectable.SelectBase.as_scalar", "name": "as_scalar", "type": {".class": "CallableType", "arg_kinds": [0], "arg_names": ["self"], "arg_types": ["sqlalchemy.sql.selectable.SelectBase"], "bound_args": [], "def_extras": {"first_arg": "self"}, "fallback": "builtins.function", "implicit": false, "is_ellipsis_args": false, "name": "as_scalar of SelectBase", "ret_type": {".class": "Instance", "args": [{".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 2}], "type_ref": "sqlalchemy.sql.selectable.ScalarSelect"}, "variables": []}}, "is_overload": false, "var": {".class": "Var", "flags": ["is_initialized_in_class", "is_ready"], "fullname": null, "name": "as_scalar", "type": {".class": "CallableType", "arg_kinds": [0], "arg_names": ["self"], "arg_types": ["sqlalchemy.sql.selectable.SelectBase"], "bound_args": [], "def_extras": {"first_arg": "self"}, "fallback": "builtins.function", "implicit": false, "is_ellipsis_args": false, "name": "as_scalar of SelectBase", "ret_type": {".class": "Instance", "args": [{".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 2}], "type_ref": "sqlalchemy.sql.selectable.ScalarSelect"}, "variables": []}}}}, "c": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "Decorator", "func": {".class": "FuncDef", "arg_kinds": [0], "arg_names": ["self"], "flags": ["is_property", "is_decorated"], "fullname": "sqlalchemy.sql.selectable.SelectBase.c", "name": "c", "type": {".class": "CallableType", "arg_kinds": [0], "arg_names": ["self"], "arg_types": ["sqlalchemy.sql.selectable.SelectBase"], "bound_args": [], "def_extras": {"first_arg": "self"}, "fallback": "builtins.function", "implicit": false, "is_ellipsis_args": false, "name": "c of SelectBase", "ret_type": {".class": "Instance", "args": ["builtins.str", {".class": "Instance", "args": [{".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 2}], "type_ref": "sqlalchemy.sql.elements.KeyedColumnElement"}], "type_ref": "sqlalchemy.sql.base.ReadOnlyColumnCollection"}, "variables": []}}, "is_overload": false, "var": {".class": "Var", "flags": ["is_initialized_in_class", "is_property", "is_ready"], "fullname": null, "name": "c", "type": {".class": "CallableType", "arg_kinds": [0], "arg_names": ["self"], "arg_types": ["sqlalchemy.sql.selectable.SelectBase"], "bound_args": [], "def_extras": {"first_arg": "self"}, "fallback": "builtins.function", "implicit": false, "is_ellipsis_args": false, "name": "c of SelectBase", "ret_type": {".class": "Instance", "args": ["builtins.str", {".class": "Instance", "args": [{".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 2}], "type_ref": "sqlalchemy.sql.elements.KeyedColumnElement"}], "type_ref": "sqlalchemy.sql.base.ReadOnlyColumnCollection"}, "variables": []}}}}, "columns": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "Decorator", "func": {".class": "FuncDef", "arg_kinds": [0], "arg_names": ["self"], "flags": ["is_property", "is_decorated"], "fullname": "sqlalchemy.sql.selectable.SelectBase.columns", "name": "columns", "type": {".class": "CallableType", "arg_kinds": [0], "arg_names": ["self"], "arg_types": ["sqlalchemy.sql.selectable.SelectBase"], "bound_args": [], "def_extras": {"first_arg": "self"}, "fallback": "builtins.function", "implicit": false, "is_ellipsis_args": false, "name": "columns of SelectBase", "ret_type": {".class": "Instance", "args": ["builtins.str", {".class": "Instance", "args": [{".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 2}], "type_ref": "sqlalchemy.sql.elements.KeyedColumnElement"}], "type_ref": "sqlalchemy.sql.base.ReadOnlyColumnCollection"}, "variables": []}}, "is_overload": false, "var": {".class": "Var", "flags": ["is_initialized_in_class", "is_property", "is_ready"], "fullname": null, "name": "columns", "type": {".class": "CallableType", "arg_kinds": [0], "arg_names": ["self"], "arg_types": ["sqlalchemy.sql.selectable.SelectBase"], "bound_args": [], "def_extras": {"first_arg": "self"}, "fallback": "builtins.function", "implicit": false, "is_ellipsis_args": false, "name": "columns of SelectBase", "ret_type": {".class": "Instance", "args": ["builtins.str", {".class": "Instance", "args": [{".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 2}], "type_ref": "sqlalchemy.sql.elements.KeyedColumnElement"}], "type_ref": "sqlalchemy.sql.base.ReadOnlyColumnCollection"}, "variables": []}}}}, "exists": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "FuncDef", "arg_kinds": [0], "arg_names": ["self"], "flags": [], "fullname": "sqlalchemy.sql.selectable.SelectBase.exists", "name": "exists", "type": {".class": "CallableType", "arg_kinds": [0], "arg_names": ["self"], "arg_types": ["sqlalchemy.sql.selectable.SelectBase"], "bound_args": [], "def_extras": {"first_arg": "self"}, "fallback": "builtins.function", "implicit": false, "is_ellipsis_args": false, "name": "exists of SelectBase", "ret_type": "sqlalchemy.sql.selectable.Exists", "variables": []}}}, "exported_columns": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "Decorator", "func": {".class": "FuncDef", "arg_kinds": [0], "arg_names": ["self"], "flags": ["is_property", "is_decorated"], "fullname": "sqlalchemy.sql.selectable.SelectBase.exported_columns", "name": "exported_columns", "type": {".class": "CallableType", "arg_kinds": [0], "arg_names": ["self"], "arg_types": ["sqlalchemy.sql.selectable.SelectBase"], "bound_args": [], "def_extras": {"first_arg": "self"}, "fallback": "builtins.function", "implicit": false, "is_ellipsis_args": false, "name": "exported_columns of SelectBase", "ret_type": {".class": "Instance", "args": ["builtins.str", {".class": "Instance", "args": [{".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 2}], "type_ref": "sqlalchemy.sql.elements.ColumnElement"}], "type_ref": "sqlalchemy.sql.base.ReadOnlyColumnCollection"}, "variables": []}}, "is_overload": false, "var": {".class": "Var", "flags": ["is_initialized_in_class", "is_property", "is_ready"], "fullname": null, "name": "exported_columns", "type": {".class": "CallableType", "arg_kinds": [0], "arg_names": ["self"], "arg_types": ["sqlalchemy.sql.selectable.SelectBase"], "bound_args": [], "def_extras": {"first_arg": "self"}, "fallback": "builtins.function", "implicit": false, "is_ellipsis_args": false, "name": "exported_columns of SelectBase", "ret_type": {".class": "Instance", "args": ["builtins.str", {".class": "Instance", "args": [{".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 2}], "type_ref": "sqlalchemy.sql.elements.ColumnElement"}], "type_ref": "sqlalchemy.sql.base.ReadOnlyColumnCollection"}, "variables": []}}}}, "get_label_style": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "FuncDef", "arg_kinds": [0], "arg_names": ["self"], "flags": [], "fullname": "sqlalchemy.sql.selectable.SelectBase.get_label_style", "name": "get_label_style", "type": {".class": "CallableType", "arg_kinds": [0], "arg_names": ["self"], "arg_types": ["sqlalchemy.sql.selectable.SelectBase"], "bound_args": [], "def_extras": {"first_arg": "self"}, "fallback": "builtins.function", "implicit": false, "is_ellipsis_args": false, "name": "get_label_style of SelectBase", "ret_type": "sqlalchemy.sql.selectable.SelectLabelStyle", "variables": []}}}, "is_select": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "Var", "flags": ["is_initialized_in_class"], "fullname": "sqlalchemy.sql.selectable.SelectBase.is_select", "name": "is_select", "type": "builtins.bool"}}, "label": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "FuncDef", "arg_kinds": [0, 0], "arg_names": ["self", "name"], "flags": [], "fullname": "sqlalchemy.sql.selectable.SelectBase.label", "name": "label", "type": {".class": "CallableType", "arg_kinds": [0, 0], "arg_names": ["self", "name"], "arg_types": ["sqlalchemy.sql.selectable.SelectBase", {".class": "UnionType", "items": ["builtins.str", {".class": "NoneType"}]}], "bound_args": [], "def_extras": {"first_arg": "self"}, "fallback": "builtins.function", "implicit": false, "is_ellipsis_args": false, "name": "label of SelectBase", "ret_type": {".class": "Instance", "args": [{".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 2}], "type_ref": "sqlalchemy.sql.elements.Label"}, "variables": []}}}, "lateral": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "FuncDef", "arg_kinds": [0, 1], "arg_names": ["self", "name"], "flags": [], "fullname": "sqlalchemy.sql.selectable.SelectBase.lateral", "name": "lateral", "type": {".class": "CallableType", "arg_kinds": [0, 1], "arg_names": ["self", "name"], "arg_types": ["sqlalchemy.sql.selectable.SelectBase", {".class": "UnionType", "items": ["builtins.str", {".class": "NoneType"}]}], "bound_args": [], "def_extras": {"first_arg": "self"}, "fallback": "builtins.function", "implicit": false, "is_ellipsis_args": false, "name": "lateral of SelectBase", "ret_type": "sqlalchemy.sql.selectable.LateralFromClause", "variables": []}}}, "scalar_subquery": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "FuncDef", "arg_kinds": [0], "arg_names": ["self"], "flags": [], "fullname": "sqlalchemy.sql.selectable.SelectBase.scalar_subquery", "name": "scalar_subquery", "type": {".class": "CallableType", "arg_kinds": [0], "arg_names": ["self"], "arg_types": ["sqlalchemy.sql.selectable.SelectBase"], "bound_args": [], "def_extras": {"first_arg": "self"}, "fallback": "builtins.function", "implicit": false, "is_ellipsis_args": false, "name": "scalar_subquery of SelectBase", "ret_type": {".class": "Instance", "args": [{".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 2}], "type_ref": "sqlalchemy.sql.selectable.ScalarSelect"}, "variables": []}}}, "select": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "Decorator", "func": {".class": "FuncDef", "arg_kinds": [0, 2, 4], "arg_names": ["self", "arg", "kw"], "flags": ["is_decorated"], "fullname": "sqlalchemy.sql.selectable.SelectBase.select", "name": "select", "type": {".class": "CallableType", "arg_kinds": [0, 2, 4], "arg_names": ["self", "arg", "kw"], "arg_types": ["sqlalchemy.sql.selectable.SelectBase", {".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 2}, {".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 2}], "bound_args": [], "def_extras": {"first_arg": "self"}, "fallback": "builtins.function", "implicit": false, "is_ellipsis_args": false, "name": "select of SelectBase", "ret_type": {".class": "Instance", "args": [{".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 2}], "type_ref": "sqlalchemy.sql.selectable.Select"}, "variables": []}}, "is_overload": false, "var": {".class": "Var", "flags": ["is_initialized_in_class", "is_ready"], "fullname": null, "name": "select", "type": {".class": "CallableType", "arg_kinds": [0, 2, 4], "arg_names": ["self", "arg", "kw"], "arg_types": ["sqlalchemy.sql.selectable.SelectBase", {".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 2}, {".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 2}], "bound_args": [], "def_extras": {"first_arg": "self"}, "fallback": "builtins.function", "implicit": false, "is_ellipsis_args": false, "name": "select of SelectBase", "ret_type": {".class": "Instance", "args": [{".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 2}], "type_ref": "sqlalchemy.sql.selectable.Select"}, "variables": []}}}}, "selected_columns": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "Decorator", "func": {".class": "FuncDef", "arg_kinds": [0], "arg_names": ["self"], "flags": ["is_property", "is_decorated"], "fullname": "sqlalchemy.sql.selectable.SelectBase.selected_columns", "name": "selected_columns", "type": {".class": "CallableType", "arg_kinds": [0], "arg_names": ["self"], "arg_types": ["sqlalchemy.sql.selectable.SelectBase"], "bound_args": [], "def_extras": {"first_arg": "self"}, "fallback": "builtins.function", "implicit": false, "is_ellipsis_args": false, "name": "selected_columns of SelectBase", "ret_type": {".class": "Instance", "args": ["builtins.str", {".class": "Instance", "args": [{".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 2}], "type_ref": "sqlalchemy.sql.elements.ColumnElement"}], "type_ref": "sqlalchemy.sql.base.ColumnCollection"}, "variables": []}}, "is_overload": false, "var": {".class": "Var", "flags": ["is_initialized_in_class", "is_property", "is_ready"], "fullname": null, "name": "selected_columns", "type": {".class": "CallableType", "arg_kinds": [0], "arg_names": ["self"], "arg_types": ["sqlalchemy.sql.selectable.SelectBase"], "bound_args": [], "def_extras": {"first_arg": "self"}, "fallback": "builtins.function", "implicit": false, "is_ellipsis_args": false, "name": "selected_columns of SelectBase", "ret_type": {".class": "Instance", "args": ["builtins.str", {".class": "Instance", "args": [{".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 2}], "type_ref": "sqlalchemy.sql.elements.ColumnElement"}], "type_ref": "sqlalchemy.sql.base.ColumnCollection"}, "variables": []}}}}, "set_label_style": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "FuncDef", "arg_kinds": [0, 0], "arg_names": ["self", "style"], "flags": [], "fullname": "sqlalchemy.sql.selectable.SelectBase.set_label_style", "name": "set_label_style", "type": {".class": "CallableType", "arg_kinds": [0, 0], "arg_names": ["self", "style"], "arg_types": ["sqlalchemy.sql.selectable.SelectBase", "sqlalchemy.sql.selectable.SelectLabelStyle"], "bound_args": [], "def_extras": {"first_arg": "self"}, "fallback": "builtins.function", "implicit": false, "is_ellipsis_args": false, "name": "set_label_style of SelectBase", "ret_type": {".class": "AnyType", "missing_import_name": "sqlalchemy.util.typing.Self", "source_any": null, "type_of_any": 3}, "variables": []}}}, "subquery": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "FuncDef", "arg_kinds": [0, 1], "arg_names": ["self", "name"], "flags": [], "fullname": "sqlalchemy.sql.selectable.SelectBase.subquery", "name": "subquery", "type": {".class": "CallableType", "arg_kinds": [0, 1], "arg_names": ["self", "name"], "arg_types": ["sqlalchemy.sql.selectable.SelectBase", {".class": "UnionType", "items": ["builtins.str", {".class": "NoneType"}]}], "bound_args": [], "def_extras": {"first_arg": "self"}, "fallback": "builtins.function", "implicit": false, "is_ellipsis_args": false, "name": "subquery of SelectBase", "ret_type": "sqlalchemy.sql.selectable.Subquery", "variables": []}}}}, "tuple_type": null, "type_vars": [], "typeddict_type": null}}, "SelectLabelStyle": {".class": "SymbolTableNode", "kind": "Gdef", "node": {".class": "TypeInfo", "_promote": null, "abstract_attributes": [], "bases": ["enum.Enum"], "declared_metaclass": null, "defn": {".class": "ClassDef", "fullname": "sqlalchemy.sql.selectable.SelectLabelStyle", "name": "SelectLabelStyle", "type_vars": []}, "flags": ["is_enum"], "fullname": "sqlalchemy.sql.selectable.SelectLabelStyle", "metaclass_type": "enum.EnumMeta", "metadata": {}, "module_name": "sqlalchemy.sql.selectable", "mro": ["sqlalchemy.sql.selectable.SelectLabelStyle", "enum.Enum", "builtins.object"], "names": {".class": "SymbolTable", "LABEL_STYLE_DEFAULT": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "Var", "flags": ["is_initialized_in_class"], "fullname": "sqlalchemy.sql.selectable.SelectLabelStyle.LABEL_STYLE_DEFAULT", "name": "LABEL_STYLE_DEFAULT", "type": "builtins.int"}}, "LABEL_STYLE_DISAMBIGUATE_ONLY": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "Var", "flags": ["is_initialized_in_class", "is_ready"], "fullname": "sqlalchemy.sql.selectable.SelectLabelStyle.LABEL_STYLE_DISAMBIGUATE_ONLY", "name": "LABEL_STYLE_DISAMBIGUATE_ONLY", "type": "builtins.int"}}, "LABEL_STYLE_LEGACY_ORM": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "Var", "flags": ["is_initialized_in_class", "is_ready"], "fullname": "sqlalchemy.sql.selectable.SelectLabelStyle.LABEL_STYLE_LEGACY_ORM", "name": "LABEL_STYLE_LEGACY_ORM", "type": "builtins.int"}}, "LABEL_STYLE_NONE": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "Var", "flags": ["is_initialized_in_class", "is_ready"], "fullname": "sqlalchemy.sql.selectable.SelectLabelStyle.LABEL_STYLE_NONE", "name": "LABEL_STYLE_NONE", "type": "builtins.int"}}, "LABEL_STYLE_TABLENAME_PLUS_COL": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "Var", "flags": ["is_initialized_in_class", "is_ready"], "fullname": "sqlalchemy.sql.selectable.SelectLabelStyle.LABEL_STYLE_TABLENAME_PLUS_COL", "name": "LABEL_STYLE_TABLENAME_PLUS_COL", "type": "builtins.int"}}}, "tuple_type": null, "type_vars": [], "typeddict_type": null}}, "SelectState": {".class": "SymbolTableNode", "kind": "Gdef", "node": {".class": "TypeInfo", "_promote": null, "abstract_attributes": [], "bases": ["sqlalchemy.util.langhelpers.MemoizedSlots", "sqlalchemy.sql.base.CompileState"], "declared_metaclass": null, "defn": {".class": "ClassDef", "fullname": "sqlalchemy.sql.selectable.SelectState", "name": "SelectState", "type_vars": []}, "flags": [], "fullname": "sqlalchemy.sql.selectable.SelectState", "metaclass_type": null, "metadata": {}, "module_name": "sqlalchemy.sql.selectable", "mro": ["sqlalchemy.sql.selectable.SelectState", "sqlalchemy.util.langhelpers.MemoizedSlots", "sqlalchemy.sql.base.CompileState", "builtins.object"], "names": {".class": "SymbolTable", "__init__": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "FuncDef", "arg_kinds": [0, 0, 0, 4], "arg_names": ["self", "statement", "compiler", "kw"], "flags": [], "fullname": "sqlalchemy.sql.selectable.SelectState.__init__", "name": "__init__", "type": {".class": "CallableType", "arg_kinds": [0, 0, 0, 4], "arg_names": ["self", "statement", "compiler", "kw"], "arg_types": ["sqlalchemy.sql.selectable.SelectState", {".class": "Instance", "args": [{".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 2}], "type_ref": "sqlalchemy.sql.selectable.Select"}, {".class": "UnionType", "items": ["sqlalchemy.sql.compiler.SQLCompiler", {".class": "NoneType"}]}, {".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 2}], "bound_args": [], "def_extras": {"first_arg": "self"}, "fallback": "builtins.function", "implicit": false, "is_ellipsis_args": false, "name": "__init__ of SelectState", "ret_type": {".class": "NoneType"}, "variables": []}}}, "__slots__": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "Var", "flags": ["is_initialized_in_class"], "fullname": "sqlalchemy.sql.selectable.SelectState.__slots__", "name": "__slots__", "type": {".class": "TupleType", "implicit": false, "items": ["builtins.str", "builtins.str", "builtins.str", "builtins.str"], "partial_fallback": {".class": "Instance", "args": [{".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 6}], "type_ref": "builtins.tuple"}}}}, "_column_naming_convention": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "Decorator", "func": {".class": "FuncDef", "arg_kinds": [0, 0], "arg_names": ["cls", "label_style"], "flags": ["is_class", "is_decorated"], "fullname": "sqlalchemy.sql.selectable.SelectState._column_naming_convention", "name": "_column_naming_convention", "type": {".class": "CallableType", "arg_kinds": [0, 0], "arg_names": ["cls", "label_style"], "arg_types": [{".class": "TypeType", "item": "sqlalchemy.sql.selectable.SelectState"}, "sqlalchemy.sql.selectable.SelectLabelStyle"], "bound_args": [], "def_extras": {"first_arg": "cls"}, "fallback": "builtins.function", "implicit": false, "is_ellipsis_args": false, "name": "_column_naming_convention of SelectState", "ret_type": {".class": "TypeAliasType", "args": [], "type_ref": "sqlalchemy.sql.selectable._LabelConventionCallable"}, "variables": []}}, "is_overload": false, "var": {".class": "Var", "flags": ["is_initialized_in_class", "is_classmethod", "is_ready"], "fullname": null, "name": "_column_naming_convention", "type": {".class": "CallableType", "arg_kinds": [0, 0], "arg_names": ["cls", "label_style"], "arg_types": [{".class": "TypeType", "item": "sqlalchemy.sql.selectable.SelectState"}, "sqlalchemy.sql.selectable.SelectLabelStyle"], "bound_args": [], "def_extras": {"first_arg": "cls"}, "fallback": "builtins.function", "implicit": false, "is_ellipsis_args": false, "name": "_column_naming_convention of SelectState", "ret_type": {".class": "TypeAliasType", "args": [], "type_ref": "sqlalchemy.sql.selectable._LabelConventionCallable"}, "variables": []}}}}, "_get_display_froms": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "FuncDef", "arg_kinds": [0, 1, 1], "arg_names": ["self", "explicit_correlate_froms", "implicit_correlate_froms"], "flags": [], "fullname": "sqlalchemy.sql.selectable.SelectState._get_display_froms", "name": "_get_display_froms", "type": {".class": "CallableType", "arg_kinds": [0, 1, 1], "arg_names": ["self", "explicit_correlate_froms", "implicit_correlate_froms"], "arg_types": ["sqlalchemy.sql.selectable.SelectState", {".class": "UnionType", "items": [{".class": "Instance", "args": ["sqlalchemy.sql.selectable.FromClause"], "type_ref": "typing.Sequence"}, {".class": "NoneType"}]}, {".class": "UnionType", "items": [{".class": "Instance", "args": ["sqlalchemy.sql.selectable.FromClause"], "type_ref": "typing.Sequence"}, {".class": "NoneType"}]}], "bound_args": [], "def_extras": {"first_arg": "self"}, "fallback": "builtins.function", "implicit": false, "is_ellipsis_args": false, "name": "_get_display_froms of SelectState", "ret_type": {".class": "Instance", "args": ["sqlalchemy.sql.selectable.FromClause"], "type_ref": "builtins.list"}, "variables": []}}}, "_get_froms": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "FuncDef", "arg_kinds": [0, 0], "arg_names": ["self", "statement"], "flags": [], "fullname": "sqlalchemy.sql.selectable.SelectState._get_froms", "name": "_get_froms", "type": {".class": "CallableType", "arg_kinds": [0, 0], "arg_names": ["self", "statement"], "arg_types": ["sqlalchemy.sql.selectable.SelectState", {".class": "Instance", "args": [{".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 2}], "type_ref": "sqlalchemy.sql.selectable.Select"}], "bound_args": [], "def_extras": {"first_arg": "self"}, "fallback": "builtins.function", "implicit": false, "is_ellipsis_args": false, "name": "_get_froms of SelectState", "ret_type": {".class": "Instance", "args": ["sqlalchemy.sql.selectable.FromClause"], "type_ref": "builtins.list"}, "variables": []}}}, "_join_determine_implicit_left_side": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "Decorator", "func": {".class": "FuncDef", "arg_kinds": [0, 0, 0, 0, 0], "arg_names": ["self", "raw_columns", "left", "right", "onclause"], "flags": ["is_decorated"], "fullname": "sqlalchemy.sql.selectable.SelectState._join_determine_implicit_left_side", "name": "_join_determine_implicit_left_side", "type": {".class": "CallableType", "arg_kinds": [0, 0, 0, 0, 0], "arg_names": ["self", "raw_columns", "left", "right", "onclause"], "arg_types": ["sqlalchemy.sql.selectable.SelectState", {".class": "Instance", "args": [{".class": "TypeAliasType", "args": [], "type_ref": "sqlalchemy.sql.selectable._ColumnsClauseElement"}], "type_ref": "builtins.list"}, {".class": "UnionType", "items": ["sqlalchemy.sql.selectable.FromClause", {".class": "NoneType"}]}, {".class": "TypeAliasType", "args": [], "type_ref": "sqlalchemy.sql.selectable._JoinTargetElement"}, {".class": "UnionType", "items": [{".class": "Instance", "args": [{".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 2}], "type_ref": "sqlalchemy.sql.elements.ColumnElement"}, {".class": "NoneType"}]}], "bound_args": [], "def_extras": {"first_arg": "self"}, "fallback": "builtins.function", "implicit": false, "is_ellipsis_args": false, "name": "_join_determine_implicit_left_side of SelectState", "ret_type": {".class": "TupleType", "implicit": false, "items": [{".class": "UnionType", "items": ["sqlalchemy.sql.selectable.FromClause", {".class": "NoneType"}]}, {".class": "UnionType", "items": ["builtins.int", {".class": "NoneType"}]}], "partial_fallback": {".class": "Instance", "args": [{".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 6}], "type_ref": "builtins.tuple"}}, "variables": []}}, "is_overload": false, "var": {".class": "Var", "flags": ["is_initialized_in_class", "is_ready"], "fullname": null, "name": "_join_determine_implicit_left_side", "type": {".class": "CallableType", "arg_kinds": [0, 0, 0, 0, 0], "arg_names": ["self", "raw_columns", "left", "right", "onclause"], "arg_types": ["sqlalchemy.sql.selectable.SelectState", {".class": "Instance", "args": [{".class": "TypeAliasType", "args": [], "type_ref": "sqlalchemy.sql.selectable._ColumnsClauseElement"}], "type_ref": "builtins.list"}, {".class": "UnionType", "items": ["sqlalchemy.sql.selectable.FromClause", {".class": "NoneType"}]}, {".class": "TypeAliasType", "args": [], "type_ref": "sqlalchemy.sql.selectable._JoinTargetElement"}, {".class": "UnionType", "items": [{".class": "Instance", "args": [{".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 2}], "type_ref": "sqlalchemy.sql.elements.ColumnElement"}, {".class": "NoneType"}]}], "bound_args": [], "def_extras": {"first_arg": "self"}, "fallback": "builtins.function", "implicit": false, "is_ellipsis_args": false, "name": "_join_determine_implicit_left_side of SelectState", "ret_type": {".class": "TupleType", "implicit": false, "items": [{".class": "UnionType", "items": ["sqlalchemy.sql.selectable.FromClause", {".class": "NoneType"}]}, {".class": "UnionType", "items": ["builtins.int", {".class": "NoneType"}]}], "partial_fallback": {".class": "Instance", "args": [{".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 6}], "type_ref": "builtins.tuple"}}, "variables": []}}}}, "_join_place_explicit_left_side": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "Decorator", "func": {".class": "FuncDef", "arg_kinds": [0, 0], "arg_names": ["self", "left"], "flags": ["is_decorated"], "fullname": "sqlalchemy.sql.selectable.SelectState._join_place_explicit_left_side", "name": "_join_place_explicit_left_side", "type": {".class": "CallableType", "arg_kinds": [0, 0], "arg_names": ["self", "left"], "arg_types": ["sqlalchemy.sql.selectable.SelectState", "sqlalchemy.sql.selectable.FromClause"], "bound_args": [], "def_extras": {"first_arg": "self"}, "fallback": "builtins.function", "implicit": false, "is_ellipsis_args": false, "name": "_join_place_explicit_left_side of SelectState", "ret_type": {".class": "UnionType", "items": ["builtins.int", {".class": "NoneType"}]}, "variables": []}}, "is_overload": false, "var": {".class": "Var", "flags": ["is_initialized_in_class", "is_ready"], "fullname": null, "name": "_join_place_explicit_left_side", "type": {".class": "CallableType", "arg_kinds": [0, 0], "arg_names": ["self", "left"], "arg_types": ["sqlalchemy.sql.selectable.SelectState", "sqlalchemy.sql.selectable.FromClause"], "bound_args": [], "def_extras": {"first_arg": "self"}, "fallback": "builtins.function", "implicit": false, "is_ellipsis_args": false, "name": "_join_place_explicit_left_side of SelectState", "ret_type": {".class": "UnionType", "items": ["builtins.int", {".class": "NoneType"}]}, "variables": []}}}}, "_memoized_attr__label_resolve_dict": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "FuncDef", "arg_kinds": [0], "arg_names": ["self"], "flags": [], "fullname": "sqlalchemy.sql.selectable.SelectState._memoized_attr__label_resolve_dict", "name": "_memoized_attr__label_resolve_dict", "type": {".class": "CallableType", "arg_kinds": [0], "arg_names": ["self"], "arg_types": ["sqlalchemy.sql.selectable.SelectState"], "bound_args": [], "def_extras": {"first_arg": "self"}, "fallback": "builtins.function", "implicit": false, "is_ellipsis_args": false, "name": "_memoized_attr__label_resolve_dict of SelectState", "ret_type": {".class": "TupleType", "implicit": false, "items": [{".class": "Instance", "args": ["builtins.str", {".class": "Instance", "args": [{".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 2}], "type_ref": "sqlalchemy.sql.elements.ColumnElement"}], "type_ref": "builtins.dict"}, {".class": "Instance", "args": ["builtins.str", {".class": "Instance", "args": [{".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 2}], "type_ref": "sqlalchemy.sql.elements.ColumnElement"}], "type_ref": "builtins.dict"}, {".class": "Instance", "args": ["builtins.str", {".class": "Instance", "args": [{".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 2}], "type_ref": "sqlalchemy.sql.elements.ColumnElement"}], "type_ref": "builtins.dict"}], "partial_fallback": {".class": "Instance", "args": [{".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 6}], "type_ref": "builtins.tuple"}}, "variables": []}}}, "_normalize_froms": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "Decorator", "func": {".class": "FuncDef", "arg_kinds": [0, 0, 1, 1], "arg_names": ["cls", "iterable_of_froms", "check_statement", "ambiguous_table_name_map"], "flags": ["is_class", "is_decorated"], "fullname": "sqlalchemy.sql.selectable.SelectState._normalize_froms", "name": "_normalize_froms", "type": {".class": "CallableType", "arg_kinds": [0, 0, 1, 1], "arg_names": ["cls", "iterable_of_froms", "check_statement", "ambiguous_table_name_map"], "arg_types": [{".class": "TypeType", "item": "sqlalchemy.sql.selectable.SelectState"}, {".class": "Instance", "args": ["sqlalchemy.sql.selectable.FromClause"], "type_ref": "typing.Iterable"}, {".class": "UnionType", "items": [{".class": "Instance", "args": [{".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 2}], "type_ref": "sqlalchemy.sql.selectable.Select"}, {".class": "NoneType"}]}, {".class": "UnionType", "items": [{".class": "Instance", "args": ["builtins.str", "builtins.str"], "type_ref": "typing.MutableMapping"}, {".class": "NoneType"}]}], "bound_args": [], "def_extras": {"first_arg": "cls"}, "fallback": "builtins.function", "implicit": false, "is_ellipsis_args": false, "name": "_normalize_froms of SelectState", "ret_type": {".class": "Instance", "args": ["sqlalchemy.sql.selectable.FromClause"], "type_ref": "builtins.list"}, "variables": []}}, "is_overload": false, "var": {".class": "Var", "flags": ["is_initialized_in_class", "is_classmethod", "is_ready"], "fullname": null, "name": "_normalize_froms", "type": {".class": "CallableType", "arg_kinds": [0, 0, 1, 1], "arg_names": ["cls", "iterable_of_froms", "check_statement", "ambiguous_table_name_map"], "arg_types": [{".class": "TypeType", "item": "sqlalchemy.sql.selectable.SelectState"}, {".class": "Instance", "args": ["sqlalchemy.sql.selectable.FromClause"], "type_ref": "typing.Iterable"}, {".class": "UnionType", "items": [{".class": "Instance", "args": [{".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 2}], "type_ref": "sqlalchemy.sql.selectable.Select"}, {".class": "NoneType"}]}, {".class": "UnionType", "items": [{".class": "Instance", "args": ["builtins.str", "builtins.str"], "type_ref": "typing.MutableMapping"}, {".class": "NoneType"}]}], "bound_args": [], "def_extras": {"first_arg": "cls"}, "fallback": "builtins.function", "implicit": false, "is_ellipsis_args": false, "name": "_normalize_froms of SelectState", "ret_type": {".class": "Instance", "args": ["sqlalchemy.sql.selectable.FromClause"], "type_ref": "builtins.list"}, "variables": []}}}}, "_plugin_not_implemented": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "Decorator", "func": {".class": "FuncDef", "arg_kinds": [0], "arg_names": ["cls"], "flags": ["is_class", "is_decorated"], "fullname": "sqlalchemy.sql.selectable.SelectState._plugin_not_implemented", "name": "_plugin_not_implemented", "type": {".class": "CallableType", "arg_kinds": [0], "arg_names": ["cls"], "arg_types": [{".class": "TypeType", "item": "sqlalchemy.sql.selectable.SelectState"}], "bound_args": [], "def_extras": {"first_arg": "cls"}, "fallback": "builtins.function", "implicit": false, "is_ellipsis_args": false, "name": "_plugin_not_implemented of SelectState", "ret_type": {".class": "UninhabitedType", "is_noreturn": true}, "variables": []}}, "is_overload": false, "var": {".class": "Var", "flags": ["is_initialized_in_class", "is_classmethod", "is_ready"], "fullname": null, "name": "_plugin_not_implemented", "type": {".class": "CallableType", "arg_kinds": [0], "arg_names": ["cls"], "arg_types": [{".class": "TypeType", "item": "sqlalchemy.sql.selectable.SelectState"}], "bound_args": [], "def_extras": {"first_arg": "cls"}, "fallback": "builtins.function", "implicit": false, "is_ellipsis_args": false, "name": "_plugin_not_implemented of SelectState", "ret_type": {".class": "UninhabitedType", "is_noreturn": true}, "variables": []}}}}, "_setup_joins": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "FuncDef", "arg_kinds": [0, 0, 0], "arg_names": ["self", "args", "raw_columns"], "flags": [], "fullname": "sqlalchemy.sql.selectable.SelectState._setup_joins", "name": "_setup_joins", "type": {".class": "CallableType", "arg_kinds": [0, 0, 0], "arg_names": ["self", "args", "raw_columns"], "arg_types": ["sqlalchemy.sql.selectable.SelectState", {".class": "Instance", "args": [{".class": "TypeAliasType", "args": [], "type_ref": "sqlalchemy.sql.selectable._SetupJoinsElement"}], "type_ref": "builtins.tuple"}, {".class": "Instance", "args": [{".class": "TypeAliasType", "args": [], "type_ref": "sqlalchemy.sql.selectable._ColumnsClauseElement"}], "type_ref": "builtins.list"}], "bound_args": [], "def_extras": {"first_arg": "self"}, "fallback": "builtins.function", "implicit": false, "is_ellipsis_args": false, "name": "_setup_joins of SelectState", "ret_type": {".class": "NoneType"}, "variables": []}}}, "all_selected_columns": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "Decorator", "func": {".class": "FuncDef", "arg_kinds": [0, 0], "arg_names": ["cls", "statement"], "flags": ["is_class", "is_decorated"], "fullname": "sqlalchemy.sql.selectable.SelectState.all_selected_columns", "name": "all_selected_columns", "type": {".class": "CallableType", "arg_kinds": [0, 0], "arg_names": ["cls", "statement"], "arg_types": [{".class": "TypeType", "item": "sqlalchemy.sql.selectable.SelectState"}, {".class": "Instance", "args": [{".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 2}], "type_ref": "sqlalchemy.sql.selectable.Select"}], "bound_args": [], "def_extras": {"first_arg": "cls"}, "fallback": "builtins.function", "implicit": false, "is_ellipsis_args": false, "name": "all_selected_columns of SelectState", "ret_type": {".class": "TypeAliasType", "args": [], "type_ref": "sqlalchemy.sql.selectable._SelectIterable"}, "variables": []}}, "is_overload": false, "var": {".class": "Var", "flags": ["is_initialized_in_class", "is_classmethod", "is_ready"], "fullname": null, "name": "all_selected_columns", "type": {".class": "CallableType", "arg_kinds": [0, 0], "arg_names": ["cls", "statement"], "arg_types": [{".class": "TypeType", "item": "sqlalchemy.sql.selectable.SelectState"}, {".class": "Instance", "args": [{".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 2}], "type_ref": "sqlalchemy.sql.selectable.Select"}], "bound_args": [], "def_extras": {"first_arg": "cls"}, "fallback": "builtins.function", "implicit": false, "is_ellipsis_args": false, "name": "all_selected_columns of SelectState", "ret_type": {".class": "TypeAliasType", "args": [], "type_ref": "sqlalchemy.sql.selectable._SelectIterable"}, "variables": []}}}}, "columns_plus_names": {".class": "SymbolTableNode", "implicit": true, "kind": "Mdef", "node": {".class": "Var", "flags": [], "fullname": "sqlalchemy.sql.selectable.SelectState.columns_plus_names", "name": "columns_plus_names", "type": {".class": "Instance", "args": [{".class": "TupleType", "implicit": false, "items": [{".class": "UnionType", "items": ["builtins.str", {".class": "NoneType"}]}, {".class": "UnionType", "items": ["builtins.str", {".class": "NoneType"}]}, {".class": "UnionType", "items": ["builtins.str", {".class": "NoneType"}]}, {".class": "UnionType", "items": [{".class": "Instance", "args": [{".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 2}], "type_ref": "sqlalchemy.sql.elements.ColumnElement"}, "sqlalchemy.sql.elements.TextClause"]}, "builtins.bool"], "partial_fallback": "sqlalchemy.sql.selectable._ColumnsPlusNames"}], "type_ref": "builtins.list"}}}, "default_select_compile_options": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "Var", "flags": ["is_initialized_in_class", "is_ready"], "fullname": "sqlalchemy.sql.selectable.SelectState.default_select_compile_options", "name": "default_select_compile_options", "type": "sqlalchemy.sql.base.CacheableOptions"}}, "determine_last_joined_entity": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "Decorator", "func": {".class": "FuncDef", "arg_kinds": [0, 0], "arg_names": ["cls", "stmt"], "flags": ["is_class", "is_decorated"], "fullname": "sqlalchemy.sql.selectable.SelectState.determine_last_joined_entity", "name": "determine_last_joined_entity", "type": {".class": "CallableType", "arg_kinds": [0, 0], "arg_names": ["cls", "stmt"], "arg_types": [{".class": "TypeType", "item": "sqlalchemy.sql.selectable.SelectState"}, {".class": "Instance", "args": [{".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 2}], "type_ref": "sqlalchemy.sql.selectable.Select"}], "bound_args": [], "def_extras": {"first_arg": "cls"}, "fallback": "builtins.function", "implicit": false, "is_ellipsis_args": false, "name": "determine_last_joined_entity of SelectState", "ret_type": {".class": "UnionType", "items": ["sqlalchemy.sql.selectable.FromClause", "sqlalchemy.sql.selectable._JoinTargetProtocol", {".class": "NoneType"}]}, "variables": []}}, "is_overload": false, "var": {".class": "Var", "flags": ["is_initialized_in_class", "is_classmethod", "is_ready"], "fullname": null, "name": "determine_last_joined_entity", "type": {".class": "CallableType", "arg_kinds": [0, 0], "arg_names": ["cls", "stmt"], "arg_types": [{".class": "TypeType", "item": "sqlalchemy.sql.selectable.SelectState"}, {".class": "Instance", "args": [{".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 2}], "type_ref": "sqlalchemy.sql.selectable.Select"}], "bound_args": [], "def_extras": {"first_arg": "cls"}, "fallback": "builtins.function", "implicit": false, "is_ellipsis_args": false, "name": "determine_last_joined_entity of SelectState", "ret_type": {".class": "UnionType", "items": ["sqlalchemy.sql.selectable.FromClause", "sqlalchemy.sql.selectable._JoinTargetProtocol", {".class": "NoneType"}]}, "variables": []}}}}, "from_clauses": {".class": "SymbolTableNode", "implicit": true, "kind": "Mdef", "node": {".class": "Var", "flags": [], "fullname": "sqlalchemy.sql.selectable.SelectState.from_clauses", "name": "from_clauses", "type": {".class": "Instance", "args": ["sqlalchemy.sql.selectable.FromClause"], "type_ref": "builtins.tuple"}}}, "from_statement": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "Decorator", "func": {".class": "FuncDef", "arg_kinds": [0, 0, 0], "arg_names": ["cls", "statement", "from_statement"], "flags": ["is_class", "is_decorated"], "fullname": "sqlalchemy.sql.selectable.SelectState.from_statement", "name": "from_statement", "type": {".class": "CallableType", "arg_kinds": [0, 0, 0], "arg_names": ["cls", "statement", "from_statement"], "arg_types": [{".class": "TypeType", "item": "sqlalchemy.sql.selectable.SelectState"}, {".class": "Instance", "args": [{".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 2}], "type_ref": "sqlalchemy.sql.selectable.Select"}, "sqlalchemy.sql.roles.ReturnsRowsRole"], "bound_args": [], "def_extras": {"first_arg": "cls"}, "fallback": "builtins.function", "implicit": false, "is_ellipsis_args": false, "name": "from_statement of SelectState", "ret_type": "sqlalchemy.sql.selectable.ExecutableReturnsRows", "variables": []}}, "is_overload": false, "var": {".class": "Var", "flags": ["is_initialized_in_class", "is_classmethod", "is_ready"], "fullname": null, "name": "from_statement", "type": {".class": "CallableType", "arg_kinds": [0, 0, 0], "arg_names": ["cls", "statement", "from_statement"], "arg_types": [{".class": "TypeType", "item": "sqlalchemy.sql.selectable.SelectState"}, {".class": "Instance", "args": [{".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 2}], "type_ref": "sqlalchemy.sql.selectable.Select"}, "sqlalchemy.sql.roles.ReturnsRowsRole"], "bound_args": [], "def_extras": {"first_arg": "cls"}, "fallback": "builtins.function", "implicit": false, "is_ellipsis_args": false, "name": "from_statement of SelectState", "ret_type": "sqlalchemy.sql.selectable.ExecutableReturnsRows", "variables": []}}}}, "froms": {".class": "SymbolTableNode", "implicit": true, "kind": "Mdef", "node": {".class": "Var", "flags": [], "fullname": "sqlalchemy.sql.selectable.SelectState.froms", "name": "froms", "type": {".class": "Instance", "args": ["sqlalchemy.sql.selectable.FromClause"], "type_ref": "builtins.list"}}}, "get_column_descriptions": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "Decorator", "func": {".class": "FuncDef", "arg_kinds": [0, 0], "arg_names": ["cls", "statement"], "flags": ["is_class", "is_decorated"], "fullname": "sqlalchemy.sql.selectable.SelectState.get_column_descriptions", "name": "get_column_descriptions", "type": {".class": "CallableType", "arg_kinds": [0, 0], "arg_names": ["cls", "statement"], "arg_types": [{".class": "TypeType", "item": "sqlalchemy.sql.selectable.SelectState"}, {".class": "Instance", "args": [{".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 2}], "type_ref": "sqlalchemy.sql.selectable.Select"}], "bound_args": [], "def_extras": {"first_arg": "cls"}, "fallback": "builtins.function", "implicit": false, "is_ellipsis_args": false, "name": "get_column_descriptions of SelectState", "ret_type": {".class": "Instance", "args": [{".class": "Instance", "args": ["builtins.str", {".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 2}], "type_ref": "builtins.dict"}], "type_ref": "builtins.list"}, "variables": []}}, "is_overload": false, "var": {".class": "Var", "flags": ["is_initialized_in_class", "is_classmethod", "is_ready"], "fullname": null, "name": "get_column_descriptions", "type": {".class": "CallableType", "arg_kinds": [0, 0], "arg_names": ["cls", "statement"], "arg_types": [{".class": "TypeType", "item": "sqlalchemy.sql.selectable.SelectState"}, {".class": "Instance", "args": [{".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 2}], "type_ref": "sqlalchemy.sql.selectable.Select"}], "bound_args": [], "def_extras": {"first_arg": "cls"}, "fallback": "builtins.function", "implicit": false, "is_ellipsis_args": false, "name": "get_column_descriptions of SelectState", "ret_type": {".class": "Instance", "args": [{".class": "Instance", "args": ["builtins.str", {".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 2}], "type_ref": "builtins.dict"}], "type_ref": "builtins.list"}, "variables": []}}}}, "get_columns_clause_froms": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "Decorator", "func": {".class": "FuncDef", "arg_kinds": [0, 0], "arg_names": ["cls", "statement"], "flags": ["is_class", "is_decorated"], "fullname": "sqlalchemy.sql.selectable.SelectState.get_columns_clause_froms", "name": "get_columns_clause_froms", "type": {".class": "CallableType", "arg_kinds": [0, 0], "arg_names": ["cls", "statement"], "arg_types": [{".class": "TypeType", "item": "sqlalchemy.sql.selectable.SelectState"}, {".class": "Instance", "args": [{".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 2}], "type_ref": "sqlalchemy.sql.selectable.Select"}], "bound_args": [], "def_extras": {"first_arg": "cls"}, "fallback": "builtins.function", "implicit": false, "is_ellipsis_args": false, "name": "get_columns_clause_froms of SelectState", "ret_type": {".class": "Instance", "args": ["sqlalchemy.sql.selectable.FromClause"], "type_ref": "builtins.list"}, "variables": []}}, "is_overload": false, "var": {".class": "Var", "flags": ["is_initialized_in_class", "is_classmethod", "is_ready"], "fullname": null, "name": "get_columns_clause_froms", "type": {".class": "CallableType", "arg_kinds": [0, 0], "arg_names": ["cls", "statement"], "arg_types": [{".class": "TypeType", "item": "sqlalchemy.sql.selectable.SelectState"}, {".class": "Instance", "args": [{".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 2}], "type_ref": "sqlalchemy.sql.selectable.Select"}], "bound_args": [], "def_extras": {"first_arg": "cls"}, "fallback": "builtins.function", "implicit": false, "is_ellipsis_args": false, "name": "get_columns_clause_froms of SelectState", "ret_type": {".class": "Instance", "args": ["sqlalchemy.sql.selectable.FromClause"], "type_ref": "builtins.list"}, "variables": []}}}}, "get_plugin_class": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "Decorator", "func": {".class": "FuncDef", "arg_kinds": [0, 0], "arg_names": ["cls", "statement"], "flags": ["is_class", "is_decorated"], "fullname": "sqlalchemy.sql.selectable.SelectState.get_plugin_class", "name": "get_plugin_class", "type": {".class": "CallableType", "arg_kinds": [0, 0], "arg_names": ["cls", "statement"], "arg_types": [{".class": "TypeType", "item": "sqlalchemy.sql.selectable.SelectState"}, "sqlalchemy.sql.base.Executable"], "bound_args": [], "def_extras": {"first_arg": "cls"}, "fallback": "builtins.function", "implicit": false, "is_ellipsis_args": false, "name": "get_plugin_class of SelectState", "ret_type": {".class": "TypeType", "item": "sqlalchemy.sql.selectable.SelectState"}, "variables": []}}, "is_overload": false, "var": {".class": "Var", "flags": ["is_initialized_in_class", "is_classmethod", "is_ready"], "fullname": null, "name": "get_plugin_class", "type": {".class": "CallableType", "arg_kinds": [0, 0], "arg_names": ["cls", "statement"], "arg_types": [{".class": "TypeType", "item": "sqlalchemy.sql.selectable.SelectState"}, "sqlalchemy.sql.base.Executable"], "bound_args": [], "def_extras": {"first_arg": "cls"}, "fallback": "builtins.function", "implicit": false, "is_ellipsis_args": false, "name": "get_plugin_class of SelectState", "ret_type": {".class": "TypeType", "item": "sqlalchemy.sql.selectable.SelectState"}, "variables": []}}}}}, "tuple_type": null, "type_vars": [], "typeddict_type": null}}, "SelectStatementGrouping": {".class": "SymbolTableNode", "kind": "Gdef", "node": {".class": "TypeInfo", "_promote": null, "abstract_attributes": [], "bases": ["sqlalchemy.sql.elements.GroupedElement", "sqlalchemy.sql.selectable.SelectBase"], "declared_metaclass": null, "defn": {".class": "ClassDef", "fullname": "sqlalchemy.sql.selectable.SelectStatementGrouping", "name": "SelectStatementGrouping", "type_vars": [{".class": "TypeVarDef", "fullname": "sqlalchemy.sql.selectable._SB", "id": 1, "name": "_SB", "upper_bound": "sqlalchemy.sql.selectable.SelectBase", "values": [], "variance": 0}]}, "flags": [], "fullname": "sqlalchemy.sql.selectable.SelectStatementGrouping", "metaclass_type": null, "metadata": {}, "module_name": "sqlalchemy.sql.selectable", "mro": ["sqlalchemy.sql.selectable.SelectStatementGrouping", "sqlalchemy.sql.elements.GroupedElement", "sqlalchemy.sql.selectable.SelectBase", "sqlalchemy.sql.roles.SelectStatementRole", "sqlalchemy.sql.roles.StatementRole", "sqlalchemy.sql.roles.DMLSelectRole", "sqlalchemy.sql.roles.CompoundElementRole", "sqlalchemy.sql.roles.AllowsLambdaRole", "sqlalchemy.sql.roles.InElementRole", "sqlalchemy.sql.selectable.HasCTE", "sqlalchemy.sql.roles.HasCTERole", "sqlalchemy.sql.selectable.SelectsRows", "sqlalchemy.sql.annotation.SupportsCloneAnnotations", "sqlalchemy.sql.selectable.Selectable", "sqlalchemy.sql.selectable.ReturnsRows", "sqlalchemy.sql.roles.ReturnsRowsRole", "sqlalchemy.sql.roles.SQLRole", "sqlalchemy.sql.elements.DQLDMLClauseElement", "sqlalchemy.sql.elements.ClauseElement", "sqlalchemy.sql.annotation.SupportsWrappingAnnotations", "sqlalchemy.sql.annotation.SupportsAnnotations", "sqlalchemy.sql.cache_key.MemoizedHasCacheKey", "sqlalchemy.sql.cache_key.HasCacheKey", "sqlalchemy.util.langhelpers.HasMemoized", "sqlalchemy.sql.traversals.HasCopyInternals", "sqlalchemy.sql.visitors.ExternallyTraversible", "sqlalchemy.sql.visitors.HasTraverseInternals", "sqlalchemy.sql.elements.CompilerElement", "sqlalchemy.sql.visitors.Visitable", "builtins.object"], "names": {".class": "SymbolTable", "__init__": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "FuncDef", "arg_kinds": [0, 0], "arg_names": ["self", "element"], "flags": [], "fullname": "sqlalchemy.sql.selectable.SelectStatementGrouping.__init__", "name": "__init__", "type": {".class": "CallableType", "arg_kinds": [0, 0], "arg_names": ["self", "element"], "arg_types": [{".class": "Instance", "args": [{".class": "TypeVarType", "fullname": "sqlalchemy.sql.selectable._SB", "id": 1, "name": "_SB", "upper_bound": "sqlalchemy.sql.selectable.SelectBase", "values": [], "variance": 0}], "type_ref": "sqlalchemy.sql.selectable.SelectStatementGrouping"}, {".class": "TypeVarType", "fullname": "sqlalchemy.sql.selectable._SB", "id": 1, "name": "_SB", "upper_bound": "sqlalchemy.sql.selectable.SelectBase", "values": [], "variance": 0}], "bound_args": [], "def_extras": {"first_arg": "self"}, "fallback": "builtins.function", "implicit": false, "is_ellipsis_args": false, "name": "__init__ of SelectStatementGrouping", "ret_type": {".class": "NoneType"}, "variables": []}}}, "__visit_name__": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "Var", "flags": ["is_initialized_in_class", "is_ready"], "fullname": "sqlalchemy.sql.selectable.SelectStatementGrouping.__visit_name__", "name": "__visit_name__", "type": "builtins.str"}}, "_all_selected_columns": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "Decorator", "func": {".class": "FuncDef", "arg_kinds": [0], "arg_names": ["self"], "flags": ["is_property", "is_decorated"], "fullname": "sqlalchemy.sql.selectable.SelectStatementGrouping._all_selected_columns", "name": "_all_selected_columns", "type": {".class": "CallableType", "arg_kinds": [0], "arg_names": ["self"], "arg_types": [{".class": "Instance", "args": [{".class": "TypeVarType", "fullname": "sqlalchemy.sql.selectable._SB", "id": 1, "name": "_SB", "upper_bound": "sqlalchemy.sql.selectable.SelectBase", "values": [], "variance": 0}], "type_ref": "sqlalchemy.sql.selectable.SelectStatementGrouping"}], "bound_args": [], "def_extras": {"first_arg": "self"}, "fallback": "builtins.function", "implicit": false, "is_ellipsis_args": false, "name": "_all_selected_columns of SelectStatementGrouping", "ret_type": {".class": "TypeAliasType", "args": [], "type_ref": "sqlalchemy.sql.selectable._SelectIterable"}, "variables": []}}, "is_overload": false, "var": {".class": "Var", "flags": ["is_initialized_in_class", "is_property", "is_ready"], "fullname": null, "name": "_all_selected_columns", "type": {".class": "CallableType", "arg_kinds": [0], "arg_names": ["self"], "arg_types": [{".class": "Instance", "args": [{".class": "TypeVarType", "fullname": "sqlalchemy.sql.selectable._SB", "id": 1, "name": "_SB", "upper_bound": "sqlalchemy.sql.selectable.SelectBase", "values": [], "variance": 0}], "type_ref": "sqlalchemy.sql.selectable.SelectStatementGrouping"}], "bound_args": [], "def_extras": {"first_arg": "self"}, "fallback": "builtins.function", "implicit": false, "is_ellipsis_args": false, "name": "_all_selected_columns of SelectStatementGrouping", "ret_type": {".class": "TypeAliasType", "args": [], "type_ref": "sqlalchemy.sql.selectable._SelectIterable"}, "variables": []}}}}, "_ensure_disambiguated_names": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "FuncDef", "arg_kinds": [0], "arg_names": ["self"], "flags": [], "fullname": "sqlalchemy.sql.selectable.SelectStatementGrouping._ensure_disambiguated_names", "name": "_ensure_disambiguated_names", "type": {".class": "CallableType", "arg_kinds": [0], "arg_names": ["self"], "arg_types": [{".class": "Instance", "args": [{".class": "TypeVarType", "fullname": "sqlalchemy.sql.selectable._SB", "id": 1, "name": "_SB", "upper_bound": "sqlalchemy.sql.selectable.SelectBase", "values": [], "variance": 0}], "type_ref": "sqlalchemy.sql.selectable.SelectStatementGrouping"}], "bound_args": [], "def_extras": {"first_arg": "self"}, "fallback": "builtins.function", "implicit": false, "is_ellipsis_args": false, "name": "_ensure_disambiguated_names of SelectStatementGrouping", "ret_type": {".class": "Instance", "args": [{".class": "TypeVarType", "fullname": "sqlalchemy.sql.selectable._SB", "id": 1, "name": "_SB", "upper_bound": "sqlalchemy.sql.selectable.SelectBase", "values": [], "variance": 0}], "type_ref": "sqlalchemy.sql.selectable.SelectStatementGrouping"}, "variables": []}}}, "_from_objects": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "Decorator", "func": {".class": "FuncDef", "arg_kinds": [0], "arg_names": ["self"], "flags": ["is_property", "is_decorated"], "fullname": "sqlalchemy.sql.selectable.SelectStatementGrouping._from_objects", "name": "_from_objects", "type": {".class": "CallableType", "arg_kinds": [0], "arg_names": ["self"], "arg_types": [{".class": "Instance", "args": [{".class": "TypeVarType", "fullname": "sqlalchemy.sql.selectable._SB", "id": 1, "name": "_SB", "upper_bound": "sqlalchemy.sql.selectable.SelectBase", "values": [], "variance": 0}], "type_ref": "sqlalchemy.sql.selectable.SelectStatementGrouping"}], "bound_args": [], "def_extras": {"first_arg": "self"}, "fallback": "builtins.function", "implicit": false, "is_ellipsis_args": false, "name": "_from_objects of SelectStatementGrouping", "ret_type": {".class": "Instance", "args": ["sqlalchemy.sql.selectable.FromClause"], "type_ref": "builtins.list"}, "variables": []}}, "is_overload": false, "var": {".class": "Var", "flags": ["is_initialized_in_class", "is_property", "is_ready"], "fullname": null, "name": "_from_objects", "type": {".class": "CallableType", "arg_kinds": [0], "arg_names": ["self"], "arg_types": [{".class": "Instance", "args": [{".class": "TypeVarType", "fullname": "sqlalchemy.sql.selectable._SB", "id": 1, "name": "_SB", "upper_bound": "sqlalchemy.sql.selectable.SelectBase", "values": [], "variance": 0}], "type_ref": "sqlalchemy.sql.selectable.SelectStatementGrouping"}], "bound_args": [], "def_extras": {"first_arg": "self"}, "fallback": "builtins.function", "implicit": false, "is_ellipsis_args": false, "name": "_from_objects of SelectStatementGrouping", "ret_type": {".class": "Instance", "args": ["sqlalchemy.sql.selectable.FromClause"], "type_ref": "builtins.list"}, "variables": []}}}}, "_generate_fromclause_column_proxies": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "FuncDef", "arg_kinds": [0, 0, 5], "arg_names": ["self", "subquery", "proxy_compound_columns"], "flags": [], "fullname": "sqlalchemy.sql.selectable.SelectStatementGrouping._generate_fromclause_column_proxies", "name": "_generate_fromclause_column_proxies", "type": {".class": "CallableType", "arg_kinds": [0, 0, 5], "arg_names": ["self", "subquery", "proxy_compound_columns"], "arg_types": [{".class": "Instance", "args": [{".class": "TypeVarType", "fullname": "sqlalchemy.sql.selectable._SB", "id": 1, "name": "_SB", "upper_bound": "sqlalchemy.sql.selectable.SelectBase", "values": [], "variance": 0}], "type_ref": "sqlalchemy.sql.selectable.SelectStatementGrouping"}, "sqlalchemy.sql.selectable.FromClause", {".class": "UnionType", "items": [{".class": "Instance", "args": [{".class": "Instance", "args": [{".class": "Instance", "args": [{".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 2}], "type_ref": "sqlalchemy.sql.elements.ColumnElement"}], "type_ref": "typing.Sequence"}], "type_ref": "typing.Iterable"}, {".class": "NoneType"}]}], "bound_args": [], "def_extras": {"first_arg": "self"}, "fallback": "builtins.function", "implicit": false, "is_ellipsis_args": false, "name": "_generate_fromclause_column_proxies of SelectStatementGrouping", "ret_type": {".class": "NoneType"}, "variables": []}}}, "_is_select_container": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "Var", "flags": ["is_initialized_in_class"], "fullname": "sqlalchemy.sql.selectable.SelectStatementGrouping._is_select_container", "name": "_is_select_container", "type": "builtins.bool"}}, "_traverse_internals": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "Var", "flags": ["is_initialized_in_class", "is_ready"], "fullname": "sqlalchemy.sql.selectable.SelectStatementGrouping._traverse_internals", "name": "_traverse_internals", "type": {".class": "TypeAliasType", "args": [], "type_ref": "sqlalchemy.sql.visitors._TraverseInternalsType"}}}, "_ungroup": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "FuncDef", "arg_kinds": [0], "arg_names": ["self"], "flags": [], "fullname": "sqlalchemy.sql.selectable.SelectStatementGrouping._ungroup", "name": "_ungroup", "type": {".class": "CallableType", "arg_kinds": [0], "arg_names": ["self"], "arg_types": [{".class": "Instance", "args": [{".class": "TypeVarType", "fullname": "sqlalchemy.sql.selectable._SB", "id": 1, "name": "_SB", "upper_bound": "sqlalchemy.sql.selectable.SelectBase", "values": [], "variance": 0}], "type_ref": "sqlalchemy.sql.selectable.SelectStatementGrouping"}], "bound_args": [], "def_extras": {"first_arg": "self"}, "fallback": "builtins.function", "implicit": false, "is_ellipsis_args": false, "name": "_ungroup of SelectStatementGrouping", "ret_type": {".class": "TypeVarType", "fullname": "sqlalchemy.sql.selectable._SB", "id": 1, "name": "_SB", "upper_bound": "sqlalchemy.sql.selectable.SelectBase", "values": [], "variance": 0}, "variables": []}}}, "element": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "Var", "flags": ["is_initialized_in_class", "is_ready"], "fullname": "sqlalchemy.sql.selectable.SelectStatementGrouping.element", "name": "element", "type": {".class": "TypeVarType", "fullname": "sqlalchemy.sql.selectable._SB", "id": 1, "name": "_SB", "upper_bound": "sqlalchemy.sql.selectable.SelectBase", "values": [], "variance": 0}}}, "get_label_style": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "FuncDef", "arg_kinds": [0], "arg_names": ["self"], "flags": [], "fullname": "sqlalchemy.sql.selectable.SelectStatementGrouping.get_label_style", "name": "get_label_style", "type": {".class": "CallableType", "arg_kinds": [0], "arg_names": ["self"], "arg_types": [{".class": "Instance", "args": [{".class": "TypeVarType", "fullname": "sqlalchemy.sql.selectable._SB", "id": 1, "name": "_SB", "upper_bound": "sqlalchemy.sql.selectable.SelectBase", "values": [], "variance": 0}], "type_ref": "sqlalchemy.sql.selectable.SelectStatementGrouping"}], "bound_args": [], "def_extras": {"first_arg": "self"}, "fallback": "builtins.function", "implicit": false, "is_ellipsis_args": false, "name": "get_label_style of SelectStatementGrouping", "ret_type": "sqlalchemy.sql.selectable.SelectLabelStyle", "variables": []}}}, "select_statement": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "Decorator", "func": {".class": "FuncDef", "arg_kinds": [0], "arg_names": ["self"], "flags": ["is_property", "is_decorated"], "fullname": "sqlalchemy.sql.selectable.SelectStatementGrouping.select_statement", "name": "select_statement", "type": {".class": "CallableType", "arg_kinds": [0], "arg_names": ["self"], "arg_types": [{".class": "Instance", "args": [{".class": "TypeVarType", "fullname": "sqlalchemy.sql.selectable._SB", "id": 1, "name": "_SB", "upper_bound": "sqlalchemy.sql.selectable.SelectBase", "values": [], "variance": 0}], "type_ref": "sqlalchemy.sql.selectable.SelectStatementGrouping"}], "bound_args": [], "def_extras": {"first_arg": "self"}, "fallback": "builtins.function", "implicit": false, "is_ellipsis_args": false, "name": "select_statement of SelectStatementGrouping", "ret_type": {".class": "TypeVarType", "fullname": "sqlalchemy.sql.selectable._SB", "id": 1, "name": "_SB", "upper_bound": "sqlalchemy.sql.selectable.SelectBase", "values": [], "variance": 0}, "variables": []}}, "is_overload": false, "var": {".class": "Var", "flags": ["is_initialized_in_class", "is_property", "is_ready"], "fullname": null, "name": "select_statement", "type": {".class": "CallableType", "arg_kinds": [0], "arg_names": ["self"], "arg_types": [{".class": "Instance", "args": [{".class": "TypeVarType", "fullname": "sqlalchemy.sql.selectable._SB", "id": 1, "name": "_SB", "upper_bound": "sqlalchemy.sql.selectable.SelectBase", "values": [], "variance": 0}], "type_ref": "sqlalchemy.sql.selectable.SelectStatementGrouping"}], "bound_args": [], "def_extras": {"first_arg": "self"}, "fallback": "builtins.function", "implicit": false, "is_ellipsis_args": false, "name": "select_statement of SelectStatementGrouping", "ret_type": {".class": "TypeVarType", "fullname": "sqlalchemy.sql.selectable._SB", "id": 1, "name": "_SB", "upper_bound": "sqlalchemy.sql.selectable.SelectBase", "values": [], "variance": 0}, "variables": []}}}}, "selected_columns": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "Decorator", "func": {".class": "FuncDef", "arg_kinds": [0], "arg_names": ["self"], "flags": ["is_property", "is_decorated"], "fullname": "sqlalchemy.sql.selectable.SelectStatementGrouping.selected_columns", "name": "selected_columns", "type": {".class": "CallableType", "arg_kinds": [0], "arg_names": ["self"], "arg_types": [{".class": "Instance", "args": [{".class": "TypeVarType", "fullname": "sqlalchemy.sql.selectable._SB", "id": 1, "name": "_SB", "upper_bound": "sqlalchemy.sql.selectable.SelectBase", "values": [], "variance": 0}], "type_ref": "sqlalchemy.sql.selectable.SelectStatementGrouping"}], "bound_args": [], "def_extras": {"first_arg": "self"}, "fallback": "builtins.function", "implicit": false, "is_ellipsis_args": false, "name": "selected_columns of SelectStatementGrouping", "ret_type": {".class": "Instance", "args": ["builtins.str", {".class": "Instance", "args": [{".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 2}], "type_ref": "sqlalchemy.sql.elements.ColumnElement"}], "type_ref": "sqlalchemy.sql.base.ColumnCollection"}, "variables": []}}, "is_overload": false, "var": {".class": "Var", "flags": ["is_initialized_in_class", "is_property", "is_ready"], "fullname": null, "name": "selected_columns", "type": {".class": "CallableType", "arg_kinds": [0], "arg_names": ["self"], "arg_types": [{".class": "Instance", "args": [{".class": "TypeVarType", "fullname": "sqlalchemy.sql.selectable._SB", "id": 1, "name": "_SB", "upper_bound": "sqlalchemy.sql.selectable.SelectBase", "values": [], "variance": 0}], "type_ref": "sqlalchemy.sql.selectable.SelectStatementGrouping"}], "bound_args": [], "def_extras": {"first_arg": "self"}, "fallback": "builtins.function", "implicit": false, "is_ellipsis_args": false, "name": "selected_columns of SelectStatementGrouping", "ret_type": {".class": "Instance", "args": ["builtins.str", {".class": "Instance", "args": [{".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 2}], "type_ref": "sqlalchemy.sql.elements.ColumnElement"}], "type_ref": "sqlalchemy.sql.base.ColumnCollection"}, "variables": []}}}}, "self_group": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "FuncDef", "arg_kinds": [0, 1], "arg_names": ["self", "against"], "flags": [], "fullname": "sqlalchemy.sql.selectable.SelectStatementGrouping.self_group", "name": "self_group", "type": {".class": "CallableType", "arg_kinds": [0, 1], "arg_names": ["self", "against"], "arg_types": [{".class": "Instance", "args": [{".class": "TypeVarType", "fullname": "sqlalchemy.sql.selectable._SB", "id": 1, "name": "_SB", "upper_bound": "sqlalchemy.sql.selectable.SelectBase", "values": [], "variance": 0}], "type_ref": "sqlalchemy.sql.selectable.SelectStatementGrouping"}, {".class": "UnionType", "items": ["sqlalchemy.sql.operators.OperatorType", {".class": "NoneType"}]}], "bound_args": [], "def_extras": {"first_arg": "self"}, "fallback": "builtins.function", "implicit": false, "is_ellipsis_args": false, "name": "self_group of SelectStatementGrouping", "ret_type": {".class": "AnyType", "missing_import_name": "sqlalchemy.util.typing.Self", "source_any": null, "type_of_any": 3}, "variables": []}}}, "set_label_style": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "FuncDef", "arg_kinds": [0, 0], "arg_names": ["self", "label_style"], "flags": [], "fullname": "sqlalchemy.sql.selectable.SelectStatementGrouping.set_label_style", "name": "set_label_style", "type": {".class": "CallableType", "arg_kinds": [0, 0], "arg_names": ["self", "label_style"], "arg_types": [{".class": "Instance", "args": [{".class": "TypeVarType", "fullname": "sqlalchemy.sql.selectable._SB", "id": 1, "name": "_SB", "upper_bound": "sqlalchemy.sql.selectable.SelectBase", "values": [], "variance": 0}], "type_ref": "sqlalchemy.sql.selectable.SelectStatementGrouping"}, "sqlalchemy.sql.selectable.SelectLabelStyle"], "bound_args": [], "def_extras": {"first_arg": "self"}, "fallback": "builtins.function", "implicit": false, "is_ellipsis_args": false, "name": "set_label_style of SelectStatementGrouping", "ret_type": {".class": "Instance", "args": [{".class": "TypeVarType", "fullname": "sqlalchemy.sql.selectable._SB", "id": 1, "name": "_SB", "upper_bound": "sqlalchemy.sql.selectable.SelectBase", "values": [], "variance": 0}], "type_ref": "sqlalchemy.sql.selectable.SelectStatementGrouping"}, "variables": []}}}}, "tuple_type": null, "type_vars": ["_SB"], "typeddict_type": null}}, "Selectable": {".class": "SymbolTableNode", "kind": "Gdef", "node": {".class": "TypeInfo", "_promote": null, "abstract_attributes": [], "bases": ["sqlalchemy.sql.selectable.ReturnsRows"], "declared_metaclass": null, "defn": {".class": "ClassDef", "fullname": "sqlalchemy.sql.selectable.Selectable", "name": "Selectable", "type_vars": []}, "flags": [], "fullname": "sqlalchemy.sql.selectable.Selectable", "metaclass_type": null, "metadata": {}, "module_name": "sqlalchemy.sql.selectable", "mro": ["sqlalchemy.sql.selectable.Selectable", "sqlalchemy.sql.selectable.ReturnsRows", "sqlalchemy.sql.roles.ReturnsRowsRole", "sqlalchemy.sql.roles.SQLRole", "sqlalchemy.sql.elements.DQLDMLClauseElement", "sqlalchemy.sql.elements.ClauseElement", "sqlalchemy.sql.annotation.SupportsWrappingAnnotations", "sqlalchemy.sql.annotation.SupportsAnnotations", "sqlalchemy.sql.cache_key.MemoizedHasCacheKey", "sqlalchemy.sql.cache_key.HasCacheKey", "sqlalchemy.util.langhelpers.HasMemoized", "sqlalchemy.sql.traversals.HasCopyInternals", "sqlalchemy.sql.visitors.ExternallyTraversible", "sqlalchemy.sql.visitors.HasTraverseInternals", "sqlalchemy.sql.elements.CompilerElement", "sqlalchemy.sql.visitors.Visitable", "builtins.object"], "names": {".class": "SymbolTable", "__visit_name__": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "Var", "flags": ["is_initialized_in_class", "is_ready"], "fullname": "sqlalchemy.sql.selectable.Selectable.__visit_name__", "name": "__visit_name__", "type": "builtins.str"}}, "_refresh_for_new_column": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "FuncDef", "arg_kinds": [0, 0], "arg_names": ["self", "column"], "flags": [], "fullname": "sqlalchemy.sql.selectable.Selectable._refresh_for_new_column", "name": "_refresh_for_new_column", "type": {".class": "CallableType", "arg_kinds": [0, 0], "arg_names": ["self", "column"], "arg_types": ["sqlalchemy.sql.selectable.Selectable", {".class": "Instance", "args": [{".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 2}], "type_ref": "sqlalchemy.sql.elements.ColumnElement"}], "bound_args": [], "def_extras": {"first_arg": "self"}, "fallback": "builtins.function", "implicit": false, "is_ellipsis_args": false, "name": "_refresh_for_new_column of Selectable", "ret_type": {".class": "NoneType"}, "variables": []}}}, "corresponding_column": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "FuncDef", "arg_kinds": [0, 0, 1], "arg_names": ["self", "column", "require_embedded"], "flags": [], "fullname": "sqlalchemy.sql.selectable.Selectable.corresponding_column", "name": "corresponding_column", "type": {".class": "CallableType", "arg_kinds": [0, 0, 1], "arg_names": ["self", "column", "require_embedded"], "arg_types": ["sqlalchemy.sql.selectable.Selectable", {".class": "Instance", "args": [{".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 2}], "type_ref": "sqlalchemy.sql.elements.KeyedColumnElement"}, "builtins.bool"], "bound_args": [], "def_extras": {"first_arg": "self"}, "fallback": "builtins.function", "implicit": false, "is_ellipsis_args": false, "name": "corresponding_column of Selectable", "ret_type": {".class": "UnionType", "items": [{".class": "Instance", "args": [{".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 2}], "type_ref": "sqlalchemy.sql.elements.KeyedColumnElement"}, {".class": "NoneType"}]}, "variables": []}}}, "is_selectable": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "Var", "flags": ["is_initialized_in_class"], "fullname": "sqlalchemy.sql.selectable.Selectable.is_selectable", "name": "is_selectable", "type": "builtins.bool"}}, "lateral": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "FuncDef", "arg_kinds": [0, 1], "arg_names": ["self", "name"], "flags": [], "fullname": "sqlalchemy.sql.selectable.Selectable.lateral", "name": "lateral", "type": {".class": "CallableType", "arg_kinds": [0, 1], "arg_names": ["self", "name"], "arg_types": ["sqlalchemy.sql.selectable.Selectable", {".class": "UnionType", "items": ["builtins.str", {".class": "NoneType"}]}], "bound_args": [], "def_extras": {"first_arg": "self"}, "fallback": "builtins.function", "implicit": false, "is_ellipsis_args": false, "name": "lateral of Selectable", "ret_type": "sqlalchemy.sql.selectable.LateralFromClause", "variables": []}}}, "replace_selectable": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "Decorator", "func": {".class": "FuncDef", "arg_kinds": [0, 0, 0], "arg_names": ["self", "old", "alias"], "flags": ["is_decorated"], "fullname": "sqlalchemy.sql.selectable.Selectable.replace_selectable", "name": "replace_selectable", "type": {".class": "CallableType", "arg_kinds": [0, 0, 0], "arg_names": ["self", "old", "alias"], "arg_types": ["sqlalchemy.sql.selectable.Selectable", "sqlalchemy.sql.selectable.FromClause", "sqlalchemy.sql.selectable.Alias"], "bound_args": [], "def_extras": {"first_arg": "self"}, "fallback": "builtins.function", "implicit": false, "is_ellipsis_args": false, "name": "replace_selectable of Selectable", "ret_type": {".class": "AnyType", "missing_import_name": "sqlalchemy.util.typing.Self", "source_any": null, "type_of_any": 3}, "variables": []}}, "is_overload": false, "var": {".class": "Var", "flags": ["is_initialized_in_class", "is_ready"], "fullname": null, "name": "replace_selectable", "type": {".class": "CallableType", "arg_kinds": [0, 0, 0], "arg_names": ["self", "old", "alias"], "arg_types": ["sqlalchemy.sql.selectable.Selectable", "sqlalchemy.sql.selectable.FromClause", "sqlalchemy.sql.selectable.Alias"], "bound_args": [], "def_extras": {"first_arg": "self"}, "fallback": "builtins.function", "implicit": false, "is_ellipsis_args": false, "name": "replace_selectable of Selectable", "ret_type": {".class": "AnyType", "missing_import_name": "sqlalchemy.util.typing.Self", "source_any": null, "type_of_any": 3}, "variables": []}}}}}, "tuple_type": null, "type_vars": [], "typeddict_type": null}}, "SelectsRows": {".class": "SymbolTableNode", "kind": "Gdef", "node": {".class": "TypeInfo", "_promote": null, "abstract_attributes": [], "bases": ["sqlalchemy.sql.selectable.ReturnsRows"], "declared_metaclass": null, "defn": {".class": "ClassDef", "fullname": "sqlalchemy.sql.selectable.SelectsRows", "name": "SelectsRows", "type_vars": []}, "flags": [], "fullname": "sqlalchemy.sql.selectable.SelectsRows", "metaclass_type": null, "metadata": {}, "module_name": "sqlalchemy.sql.selectable", "mro": ["sqlalchemy.sql.selectable.SelectsRows", "sqlalchemy.sql.selectable.ReturnsRows", "sqlalchemy.sql.roles.ReturnsRowsRole", "sqlalchemy.sql.roles.SQLRole", "sqlalchemy.sql.elements.DQLDMLClauseElement", "sqlalchemy.sql.elements.ClauseElement", "sqlalchemy.sql.annotation.SupportsWrappingAnnotations", "sqlalchemy.sql.annotation.SupportsAnnotations", "sqlalchemy.sql.cache_key.MemoizedHasCacheKey", "sqlalchemy.sql.cache_key.HasCacheKey", "sqlalchemy.util.langhelpers.HasMemoized", "sqlalchemy.sql.traversals.HasCopyInternals", "sqlalchemy.sql.visitors.ExternallyTraversible", "sqlalchemy.sql.visitors.HasTraverseInternals", "sqlalchemy.sql.elements.CompilerElement", "sqlalchemy.sql.visitors.Visitable", "builtins.object"], "names": {".class": "SymbolTable", "_generate_columns_plus_names": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "FuncDef", "arg_kinds": [0, 0, 1], "arg_names": ["self", "anon_for_dupe_key", "cols"], "flags": [], "fullname": "sqlalchemy.sql.selectable.SelectsRows._generate_columns_plus_names", "name": "_generate_columns_plus_names", "type": {".class": "CallableType", "arg_kinds": [0, 0, 1], "arg_names": ["self", "anon_for_dupe_key", "cols"], "arg_types": ["sqlalchemy.sql.selectable.SelectsRows", "builtins.bool", {".class": "UnionType", "items": [{".class": "Instance", "args": [{".class": "UnionType", "items": [{".class": "Instance", "args": [{".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 6}], "type_ref": "sqlalchemy.sql.elements.ColumnElement"}, "sqlalchemy.sql.elements.TextClause"]}], "type_ref": "typing.Iterable"}, {".class": "NoneType"}]}], "bound_args": [], "def_extras": {"first_arg": "self"}, "fallback": "builtins.function", "implicit": false, "is_ellipsis_args": false, "name": "_generate_columns_plus_names of SelectsRows", "ret_type": {".class": "Instance", "args": [{".class": "TupleType", "implicit": false, "items": [{".class": "UnionType", "items": ["builtins.str", {".class": "NoneType"}]}, {".class": "UnionType", "items": ["builtins.str", {".class": "NoneType"}]}, {".class": "UnionType", "items": ["builtins.str", {".class": "NoneType"}]}, {".class": "UnionType", "items": [{".class": "Instance", "args": [{".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 2}], "type_ref": "sqlalchemy.sql.elements.ColumnElement"}, "sqlalchemy.sql.elements.TextClause"]}, "builtins.bool"], "partial_fallback": "sqlalchemy.sql.selectable._ColumnsPlusNames"}], "type_ref": "builtins.list"}, "variables": []}}}, "_label_style": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "Var", "flags": ["is_initialized_in_class", "is_ready"], "fullname": "sqlalchemy.sql.selectable.SelectsRows._label_style", "name": "_label_style", "type": "sqlalchemy.sql.selectable.SelectLabelStyle"}}}, "tuple_type": null, "type_vars": [], "typeddict_type": null}}, "Self": {".class": "SymbolTableNode", "cross_ref": "sqlalchemy.util.typing.Self", "kind": "Gdef"}, "Sequence": {".class": "SymbolTableNode", "cross_ref": "typing.Sequence", "kind": "Gdef"}, "Set": {".class": "SymbolTableNode", "cross_ref": "typing.Set", "kind": "Gdef"}, "Subquery": {".class": "SymbolTableNode", "kind": "Gdef", "node": {".class": "TypeInfo", "_promote": null, "abstract_attributes": [], "bases": ["sqlalchemy.sql.selectable.AliasedReturnsRows"], "declared_metaclass": null, "defn": {".class": "ClassDef", "fullname": "sqlalchemy.sql.selectable.Subquery", "name": "Subquery", "type_vars": []}, "flags": [], "fullname": "sqlalchemy.sql.selectable.Subquery", "metaclass_type": null, "metadata": {}, "module_name": "sqlalchemy.sql.selectable", "mro": ["sqlalchemy.sql.selectable.Subquery", "sqlalchemy.sql.selectable.AliasedReturnsRows", "sqlalchemy.sql.selectable.NoInit", "sqlalchemy.sql.selectable.NamedFromClause", "sqlalchemy.sql.selectable.FromClause", "sqlalchemy.sql.roles.AnonymizedFromClauseRole", "sqlalchemy.sql.roles.StrictFromClauseRole", "sqlalchemy.sql.roles.FromClauseRole", "sqlalchemy.sql.roles.ColumnsClauseRole", "sqlalchemy.sql.roles.JoinTargetRole", "sqlalchemy.sql.roles.AllowsLambdaRole", "sqlalchemy.sql.roles.UsesInspection", "sqlalchemy.sql.roles.ColumnListRole", "sqlalchemy.sql.roles.StructuralRole", "sqlalchemy.sql.selectable.Selectable", "sqlalchemy.sql.selectable.ReturnsRows", "sqlalchemy.sql.roles.ReturnsRowsRole", "sqlalchemy.sql.roles.SQLRole", "sqlalchemy.sql.elements.DQLDMLClauseElement", "sqlalchemy.sql.elements.ClauseElement", "sqlalchemy.sql.annotation.SupportsWrappingAnnotations", "sqlalchemy.sql.annotation.SupportsAnnotations", "sqlalchemy.sql.cache_key.MemoizedHasCacheKey", "sqlalchemy.sql.cache_key.HasCacheKey", "sqlalchemy.util.langhelpers.HasMemoized", "sqlalchemy.sql.traversals.HasCopyInternals", "sqlalchemy.sql.visitors.ExternallyTraversible", "sqlalchemy.sql.visitors.HasTraverseInternals", "sqlalchemy.sql.elements.CompilerElement", "sqlalchemy.sql.visitors.Visitable", "builtins.object"], "names": {".class": "SymbolTable", "__visit_name__": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "Var", "flags": ["is_initialized_in_class", "is_ready"], "fullname": "sqlalchemy.sql.selectable.Subquery.__visit_name__", "name": "__visit_name__", "type": "builtins.str"}}, "_factory": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "Decorator", "func": {".class": "FuncDef", "arg_kinds": [0, 0, 1], "arg_names": ["cls", "selectable", "name"], "flags": ["is_class", "is_decorated"], "fullname": "sqlalchemy.sql.selectable.Subquery._factory", "name": "_factory", "type": {".class": "CallableType", "arg_kinds": [0, 0, 1], "arg_names": ["cls", "selectable", "name"], "arg_types": [{".class": "TypeType", "item": "sqlalchemy.sql.selectable.Subquery"}, "sqlalchemy.sql.selectable.SelectBase", {".class": "UnionType", "items": ["builtins.str", {".class": "NoneType"}]}], "bound_args": [], "def_extras": {"first_arg": "cls"}, "fallback": "builtins.function", "implicit": false, "is_ellipsis_args": false, "name": "_factory of Subquery", "ret_type": "sqlalchemy.sql.selectable.Subquery", "variables": []}}, "is_overload": false, "var": {".class": "Var", "flags": ["is_initialized_in_class", "is_classmethod", "is_ready"], "fullname": null, "name": "_factory", "type": {".class": "CallableType", "arg_kinds": [0, 0, 1], "arg_names": ["cls", "selectable", "name"], "arg_types": [{".class": "TypeType", "item": "sqlalchemy.sql.selectable.Subquery"}, "sqlalchemy.sql.selectable.SelectBase", {".class": "UnionType", "items": ["builtins.str", {".class": "NoneType"}]}], "bound_args": [], "def_extras": {"first_arg": "cls"}, "fallback": "builtins.function", "implicit": false, "is_ellipsis_args": false, "name": "_factory of Subquery", "ret_type": "sqlalchemy.sql.selectable.Subquery", "variables": []}}}}, "_is_subquery": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "Var", "flags": ["is_initialized_in_class"], "fullname": "sqlalchemy.sql.selectable.Subquery._is_subquery", "name": "_is_subquery", "type": "builtins.bool"}}, "as_scalar": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "Decorator", "func": {".class": "FuncDef", "arg_kinds": [0], "arg_names": ["self"], "flags": ["is_decorated"], "fullname": "sqlalchemy.sql.selectable.Subquery.as_scalar", "name": "as_scalar", "type": {".class": "CallableType", "arg_kinds": [0], "arg_names": ["self"], "arg_types": ["sqlalchemy.sql.selectable.Subquery"], "bound_args": [], "def_extras": {"first_arg": "self"}, "fallback": "builtins.function", "implicit": false, "is_ellipsis_args": false, "name": "as_scalar of Subquery", "ret_type": {".class": "Instance", "args": [{".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 2}], "type_ref": "sqlalchemy.sql.selectable.ScalarSelect"}, "variables": []}}, "is_overload": false, "var": {".class": "Var", "flags": ["is_initialized_in_class", "is_ready"], "fullname": null, "name": "as_scalar", "type": {".class": "CallableType", "arg_kinds": [0], "arg_names": ["self"], "arg_types": ["sqlalchemy.sql.selectable.Subquery"], "bound_args": [], "def_extras": {"first_arg": "self"}, "fallback": "builtins.function", "implicit": false, "is_ellipsis_args": false, "name": "as_scalar of Subquery", "ret_type": {".class": "Instance", "args": [{".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 2}], "type_ref": "sqlalchemy.sql.selectable.ScalarSelect"}, "variables": []}}}}, "element": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "Var", "flags": ["is_initialized_in_class", "is_ready"], "fullname": "sqlalchemy.sql.selectable.Subquery.element", "name": "element", "type": "sqlalchemy.sql.selectable.SelectBase"}}, "inherit_cache": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "Var", "flags": ["is_initialized_in_class"], "fullname": "sqlalchemy.sql.selectable.Subquery.inherit_cache", "name": "inherit_cache", "type": "builtins.bool"}}}, "tuple_type": null, "type_vars": [], "typeddict_type": null}}, "SupportsCloneAnnotations": {".class": "SymbolTableNode", "cross_ref": "sqlalchemy.sql.annotation.SupportsCloneAnnotations", "kind": "Gdef"}, "TODO_Any": {".class": "SymbolTableNode", "cross_ref": "typing.Any", "kind": "Gdef"}, "TYPE_CHECKING": {".class": "SymbolTableNode", "cross_ref": "typing.TYPE_CHECKING", "kind": "Gdef"}, "TableClause": {".class": "SymbolTableNode", "kind": "Gdef", "node": {".class": "TypeInfo", "_promote": null, "abstract_attributes": [], "bases": ["sqlalchemy.sql.roles.DMLTableRole", "sqlalchemy.sql.base.Immutable", "sqlalchemy.sql.selectable.NamedFromClause"], "declared_metaclass": null, "defn": {".class": "ClassDef", "fullname": "sqlalchemy.sql.selectable.TableClause", "name": "TableClause", "type_vars": []}, "flags": [], "fullname": "sqlalchemy.sql.selectable.TableClause", "metaclass_type": null, "metadata": {}, "module_name": "sqlalchemy.sql.selectable", "mro": ["sqlalchemy.sql.selectable.TableClause", "sqlalchemy.sql.roles.DMLTableRole", "sqlalchemy.sql.base.Immutable", "sqlalchemy.sql.selectable.NamedFromClause", "sqlalchemy.sql.selectable.FromClause", "sqlalchemy.sql.roles.AnonymizedFromClauseRole", "sqlalchemy.sql.roles.StrictFromClauseRole", "sqlalchemy.sql.roles.FromClauseRole", "sqlalchemy.sql.roles.ColumnsClauseRole", "sqlalchemy.sql.roles.JoinTargetRole", "sqlalchemy.sql.roles.AllowsLambdaRole", "sqlalchemy.sql.roles.UsesInspection", "sqlalchemy.sql.roles.ColumnListRole", "sqlalchemy.sql.roles.StructuralRole", "sqlalchemy.sql.selectable.Selectable", "sqlalchemy.sql.selectable.ReturnsRows", "sqlalchemy.sql.roles.ReturnsRowsRole", "sqlalchemy.sql.roles.SQLRole", "sqlalchemy.sql.elements.DQLDMLClauseElement", "sqlalchemy.sql.elements.ClauseElement", "sqlalchemy.sql.annotation.SupportsWrappingAnnotations", "sqlalchemy.sql.annotation.SupportsAnnotations", "sqlalchemy.sql.cache_key.MemoizedHasCacheKey", "sqlalchemy.sql.cache_key.HasCacheKey", "sqlalchemy.util.langhelpers.HasMemoized", "sqlalchemy.sql.traversals.HasCopyInternals", "sqlalchemy.sql.visitors.ExternallyTraversible", "sqlalchemy.sql.visitors.HasTraverseInternals", "sqlalchemy.sql.elements.CompilerElement", "sqlalchemy.sql.visitors.Visitable", "builtins.object"], "names": {".class": "SymbolTable", "__init__": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "FuncDef", "arg_kinds": [0, 0, 2, 4], "arg_names": ["self", "name", "columns", "kw"], "flags": [], "fullname": "sqlalchemy.sql.selectable.TableClause.__init__", "name": "__init__", "type": {".class": "CallableType", "arg_kinds": [0, 0, 2, 4], "arg_names": ["self", "name", "columns", "kw"], "arg_types": ["sqlalchemy.sql.selectable.TableClause", "builtins.str", {".class": "Instance", "args": [{".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 2}], "type_ref": "sqlalchemy.sql.elements.ColumnClause"}, {".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 2}], "bound_args": [], "def_extras": {"first_arg": "self"}, "fallback": "builtins.function", "implicit": false, "is_ellipsis_args": false, "name": "__init__ of TableClause", "ret_type": {".class": "NoneType"}, "variables": []}}}, "__str__": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "FuncDef", "arg_kinds": [0], "arg_names": ["self"], "flags": [], "fullname": "sqlalchemy.sql.selectable.TableClause.__str__", "name": "__str__", "type": {".class": "CallableType", "arg_kinds": [0], "arg_names": [null], "arg_types": ["sqlalchemy.sql.selectable.TableClause"], "bound_args": [], "def_extras": {"first_arg": "self"}, "fallback": "builtins.function", "implicit": false, "is_ellipsis_args": false, "name": "__str__ of TableClause", "ret_type": "builtins.str", "variables": []}}}, "__visit_name__": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "Var", "flags": ["is_initialized_in_class", "is_ready"], "fullname": "sqlalchemy.sql.selectable.TableClause.__visit_name__", "name": "__visit_name__", "type": "builtins.str"}}, "_autoincrement_column": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "Decorator", "func": {".class": "FuncDef", "arg_kinds": [0], "arg_names": ["self"], "flags": ["is_property", "is_decorated"], "fullname": "sqlalchemy.sql.selectable.TableClause._autoincrement_column", "name": "_autoincrement_column", "type": {".class": "CallableType", "arg_kinds": [0], "arg_names": ["self"], "arg_types": ["sqlalchemy.sql.selectable.TableClause"], "bound_args": [], "def_extras": {"first_arg": "self"}, "fallback": "builtins.function", "implicit": false, "is_ellipsis_args": false, "name": "_autoincrement_column of TableClause", "ret_type": {".class": "UnionType", "items": [{".class": "Instance", "args": [{".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 2}], "type_ref": "sqlalchemy.sql.elements.ColumnClause"}, {".class": "NoneType"}]}, "variables": []}}, "is_overload": false, "var": {".class": "Var", "flags": ["is_initialized_in_class", "is_property", "is_ready"], "fullname": null, "name": "_autoincrement_column", "type": {".class": "CallableType", "arg_kinds": [0], "arg_names": ["self"], "arg_types": ["sqlalchemy.sql.selectable.TableClause"], "bound_args": [], "def_extras": {"first_arg": "self"}, "fallback": "builtins.function", "implicit": false, "is_ellipsis_args": false, "name": "_autoincrement_column of TableClause", "ret_type": {".class": "UnionType", "items": [{".class": "Instance", "args": [{".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 2}], "type_ref": "sqlalchemy.sql.elements.ColumnClause"}, {".class": "NoneType"}]}, "variables": []}}}}, "_from_objects": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "Decorator", "func": {".class": "FuncDef", "arg_kinds": [0], "arg_names": ["self"], "flags": ["is_property", "is_decorated"], "fullname": "sqlalchemy.sql.selectable.TableClause._from_objects", "name": "_from_objects", "type": {".class": "CallableType", "arg_kinds": [0], "arg_names": ["self"], "arg_types": ["sqlalchemy.sql.selectable.TableClause"], "bound_args": [], "def_extras": {"first_arg": "self"}, "fallback": "builtins.function", "implicit": false, "is_ellipsis_args": false, "name": "_from_objects of TableClause", "ret_type": {".class": "Instance", "args": ["sqlalchemy.sql.selectable.FromClause"], "type_ref": "builtins.list"}, "variables": []}}, "is_overload": false, "var": {".class": "Var", "flags": ["is_initialized_in_class", "is_property", "is_ready"], "fullname": null, "name": "_from_objects", "type": {".class": "CallableType", "arg_kinds": [0], "arg_names": ["self"], "arg_types": ["sqlalchemy.sql.selectable.TableClause"], "bound_args": [], "def_extras": {"first_arg": "self"}, "fallback": "builtins.function", "implicit": false, "is_ellipsis_args": false, "name": "_from_objects of TableClause", "ret_type": {".class": "Instance", "args": ["sqlalchemy.sql.selectable.FromClause"], "type_ref": "builtins.list"}, "variables": []}}}}, "_init_collections": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "FuncDef", "arg_kinds": [0], "arg_names": ["self"], "flags": [], "fullname": "sqlalchemy.sql.selectable.TableClause._init_collections", "name": "_init_collections", "type": {".class": "CallableType", "arg_kinds": [0], "arg_names": ["self"], "arg_types": ["sqlalchemy.sql.selectable.TableClause"], "bound_args": [], "def_extras": {"first_arg": "self"}, "fallback": "builtins.function", "implicit": false, "is_ellipsis_args": false, "name": "_init_collections of TableClause", "ret_type": {".class": "NoneType"}, "variables": []}}}, "_is_table": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "Var", "flags": ["is_initialized_in_class"], "fullname": "sqlalchemy.sql.selectable.TableClause._is_table", "name": "_is_table", "type": "builtins.bool"}}, "_refresh_for_new_column": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "FuncDef", "arg_kinds": [0, 0], "arg_names": ["self", "column"], "flags": [], "fullname": "sqlalchemy.sql.selectable.TableClause._refresh_for_new_column", "name": "_refresh_for_new_column", "type": {".class": "CallableType", "arg_kinds": [0, 0], "arg_names": ["self", "column"], "arg_types": ["sqlalchemy.sql.selectable.TableClause", {".class": "Instance", "args": [{".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 2}], "type_ref": "sqlalchemy.sql.elements.ColumnElement"}], "bound_args": [], "def_extras": {"first_arg": "self"}, "fallback": "builtins.function", "implicit": false, "is_ellipsis_args": false, "name": "_refresh_for_new_column of TableClause", "ret_type": {".class": "NoneType"}, "variables": []}}}, "_traverse_internals": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "Var", "flags": ["is_initialized_in_class", "is_ready"], "fullname": "sqlalchemy.sql.selectable.TableClause._traverse_internals", "name": "_traverse_internals", "type": {".class": "TypeAliasType", "args": [], "type_ref": "sqlalchemy.sql.visitors._TraverseInternalsType"}}}, "append_column": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "FuncDef", "arg_kinds": [0, 0], "arg_names": ["self", "c"], "flags": [], "fullname": "sqlalchemy.sql.selectable.TableClause.append_column", "name": "append_column", "type": {".class": "CallableType", "arg_kinds": [0, 0], "arg_names": ["self", "c"], "arg_types": ["sqlalchemy.sql.selectable.TableClause", {".class": "Instance", "args": [{".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 2}], "type_ref": "sqlalchemy.sql.elements.ColumnClause"}], "bound_args": [], "def_extras": {"first_arg": "self"}, "fallback": "builtins.function", "implicit": false, "is_ellipsis_args": false, "name": "append_column of TableClause", "ret_type": {".class": "NoneType"}, "variables": []}}}, "c": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "Decorator", "func": {".class": "FuncDef", "arg_kinds": [0], "arg_names": ["self"], "flags": ["is_property", "is_decorated"], "fullname": "sqlalchemy.sql.selectable.TableClause.c", "name": "c", "type": {".class": "CallableType", "arg_kinds": [0], "arg_names": ["self"], "arg_types": ["sqlalchemy.sql.selectable.TableClause"], "bound_args": [], "def_extras": {"first_arg": "self"}, "fallback": "builtins.function", "implicit": false, "is_ellipsis_args": false, "name": "c of TableClause", "ret_type": {".class": "Instance", "args": ["builtins.str", {".class": "Instance", "args": [{".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 2}], "type_ref": "sqlalchemy.sql.elements.ColumnClause"}], "type_ref": "sqlalchemy.sql.base.ReadOnlyColumnCollection"}, "variables": []}}, "is_overload": false, "var": {".class": "Var", "flags": ["is_initialized_in_class", "is_property", "is_ready"], "fullname": null, "name": "c", "type": {".class": "CallableType", "arg_kinds": [0], "arg_names": ["self"], "arg_types": ["sqlalchemy.sql.selectable.TableClause"], "bound_args": [], "def_extras": {"first_arg": "self"}, "fallback": "builtins.function", "implicit": false, "is_ellipsis_args": false, "name": "c of TableClause", "ret_type": {".class": "Instance", "args": ["builtins.str", {".class": "Instance", "args": [{".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 2}], "type_ref": "sqlalchemy.sql.elements.ColumnClause"}], "type_ref": "sqlalchemy.sql.base.ReadOnlyColumnCollection"}, "variables": []}}}}, "columns": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "Decorator", "func": {".class": "FuncDef", "arg_kinds": [0], "arg_names": ["self"], "flags": ["is_property", "is_decorated"], "fullname": "sqlalchemy.sql.selectable.TableClause.columns", "name": "columns", "type": {".class": "CallableType", "arg_kinds": [0], "arg_names": ["self"], "arg_types": ["sqlalchemy.sql.selectable.TableClause"], "bound_args": [], "def_extras": {"first_arg": "self"}, "fallback": "builtins.function", "implicit": false, "is_ellipsis_args": false, "name": "columns of TableClause", "ret_type": {".class": "Instance", "args": ["builtins.str", {".class": "Instance", "args": [{".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 2}], "type_ref": "sqlalchemy.sql.elements.ColumnClause"}], "type_ref": "sqlalchemy.sql.base.ReadOnlyColumnCollection"}, "variables": []}}, "is_overload": false, "var": {".class": "Var", "flags": ["is_initialized_in_class", "is_property", "is_ready"], "fullname": null, "name": "columns", "type": {".class": "CallableType", "arg_kinds": [0], "arg_names": ["self"], "arg_types": ["sqlalchemy.sql.selectable.TableClause"], "bound_args": [], "def_extras": {"first_arg": "self"}, "fallback": "builtins.function", "implicit": false, "is_ellipsis_args": false, "name": "columns of TableClause", "ret_type": {".class": "Instance", "args": ["builtins.str", {".class": "Instance", "args": [{".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 2}], "type_ref": "sqlalchemy.sql.elements.ColumnClause"}], "type_ref": "sqlalchemy.sql.base.ReadOnlyColumnCollection"}, "variables": []}}}}, "delete": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "Decorator", "func": {".class": "FuncDef", "arg_kinds": [0], "arg_names": ["self"], "flags": ["is_decorated"], "fullname": "sqlalchemy.sql.selectable.TableClause.delete", "name": "delete", "type": {".class": "CallableType", "arg_kinds": [0], "arg_names": ["self"], "arg_types": ["sqlalchemy.sql.selectable.TableClause"], "bound_args": [], "def_extras": {"first_arg": "self"}, "fallback": "builtins.function", "implicit": false, "is_ellipsis_args": false, "name": "delete of TableClause", "ret_type": "sqlalchemy.sql.dml.Delete", "variables": []}}, "is_overload": false, "var": {".class": "Var", "flags": ["is_initialized_in_class", "is_ready"], "fullname": null, "name": "delete", "type": {".class": "CallableType", "arg_kinds": [0], "arg_names": ["self"], "arg_types": ["sqlalchemy.sql.selectable.TableClause"], "bound_args": [], "def_extras": {"first_arg": "self"}, "fallback": "builtins.function", "implicit": false, "is_ellipsis_args": false, "name": "delete of TableClause", "ret_type": "sqlalchemy.sql.dml.Delete", "variables": []}}}}, "description": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "Decorator", "func": {".class": "FuncDef", "arg_kinds": [0], "arg_names": ["self"], "flags": ["is_property", "is_decorated"], "fullname": "sqlalchemy.sql.selectable.TableClause.description", "name": "description", "type": {".class": "CallableType", "arg_kinds": [0], "arg_names": ["self"], "arg_types": ["sqlalchemy.sql.selectable.TableClause"], "bound_args": [], "def_extras": {"first_arg": "self"}, "fallback": "builtins.function", "implicit": false, "is_ellipsis_args": false, "name": "description of TableClause", "ret_type": "builtins.str", "variables": []}}, "is_overload": false, "var": {".class": "Var", "flags": ["is_initialized_in_class", "is_property", "is_ready"], "fullname": null, "name": "description", "type": {".class": "CallableType", "arg_kinds": [0], "arg_names": ["self"], "arg_types": ["sqlalchemy.sql.selectable.TableClause"], "bound_args": [], "def_extras": {"first_arg": "self"}, "fallback": "builtins.function", "implicit": false, "is_ellipsis_args": false, "name": "description of TableClause", "ret_type": "builtins.str", "variables": []}}}}, "fullname": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "Var", "flags": ["is_initialized_in_class", "is_ready"], "fullname": "sqlalchemy.sql.selectable.TableClause.fullname", "name": "fullname", "type": "builtins.str"}}, "implicit_returning": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "Var", "flags": ["is_initialized_in_class"], "fullname": "sqlalchemy.sql.selectable.TableClause.implicit_returning", "name": "implicit_returning", "type": "builtins.bool"}}, "insert": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "Decorator", "func": {".class": "FuncDef", "arg_kinds": [0], "arg_names": ["self"], "flags": ["is_decorated"], "fullname": "sqlalchemy.sql.selectable.TableClause.insert", "name": "insert", "type": {".class": "CallableType", "arg_kinds": [0], "arg_names": ["self"], "arg_types": ["sqlalchemy.sql.selectable.TableClause"], "bound_args": [], "def_extras": {"first_arg": "self"}, "fallback": "builtins.function", "implicit": false, "is_ellipsis_args": false, "name": "insert of TableClause", "ret_type": "sqlalchemy.sql.dml.Insert", "variables": []}}, "is_overload": false, "var": {".class": "Var", "flags": ["is_initialized_in_class", "is_ready"], "fullname": null, "name": "insert", "type": {".class": "CallableType", "arg_kinds": [0], "arg_names": ["self"], "arg_types": ["sqlalchemy.sql.selectable.TableClause"], "bound_args": [], "def_extras": {"first_arg": "self"}, "fallback": "builtins.function", "implicit": false, "is_ellipsis_args": false, "name": "insert of TableClause", "ret_type": "sqlalchemy.sql.dml.Insert", "variables": []}}}}, "update": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "Decorator", "func": {".class": "FuncDef", "arg_kinds": [0], "arg_names": ["self"], "flags": ["is_decorated"], "fullname": "sqlalchemy.sql.selectable.TableClause.update", "name": "update", "type": {".class": "CallableType", "arg_kinds": [0], "arg_names": ["self"], "arg_types": ["sqlalchemy.sql.selectable.TableClause"], "bound_args": [], "def_extras": {"first_arg": "self"}, "fallback": "builtins.function", "implicit": false, "is_ellipsis_args": false, "name": "update of TableClause", "ret_type": "sqlalchemy.sql.dml.Update", "variables": []}}, "is_overload": false, "var": {".class": "Var", "flags": ["is_initialized_in_class", "is_ready"], "fullname": null, "name": "update", "type": {".class": "CallableType", "arg_kinds": [0], "arg_names": ["self"], "arg_types": ["sqlalchemy.sql.selectable.TableClause"], "bound_args": [], "def_extras": {"first_arg": "self"}, "fallback": "builtins.function", "implicit": false, "is_ellipsis_args": false, "name": "update of TableClause", "ret_type": "sqlalchemy.sql.dml.Update", "variables": []}}}}}, "tuple_type": null, "type_vars": [], "typeddict_type": null}}, "TableSample": {".class": "SymbolTableNode", "kind": "Gdef", "node": {".class": "TypeInfo", "_promote": null, "abstract_attributes": [], "bases": ["sqlalchemy.sql.selectable.FromClauseAlias"], "declared_metaclass": null, "defn": {".class": "ClassDef", "fullname": "sqlalchemy.sql.selectable.TableSample", "name": "TableSample", "type_vars": []}, "flags": [], "fullname": "sqlalchemy.sql.selectable.TableSample", "metaclass_type": null, "metadata": {}, "module_name": "sqlalchemy.sql.selectable", "mro": ["sqlalchemy.sql.selectable.TableSample", "sqlalchemy.sql.selectable.FromClauseAlias", "sqlalchemy.sql.selectable.AliasedReturnsRows", "sqlalchemy.sql.selectable.NoInit", "sqlalchemy.sql.selectable.NamedFromClause", "sqlalchemy.sql.selectable.FromClause", "sqlalchemy.sql.roles.AnonymizedFromClauseRole", "sqlalchemy.sql.roles.StrictFromClauseRole", "sqlalchemy.sql.roles.FromClauseRole", "sqlalchemy.sql.roles.ColumnsClauseRole", "sqlalchemy.sql.roles.JoinTargetRole", "sqlalchemy.sql.roles.AllowsLambdaRole", "sqlalchemy.sql.roles.UsesInspection", "sqlalchemy.sql.roles.ColumnListRole", "sqlalchemy.sql.roles.StructuralRole", "sqlalchemy.sql.selectable.Selectable", "sqlalchemy.sql.selectable.ReturnsRows", "sqlalchemy.sql.roles.ReturnsRowsRole", "sqlalchemy.sql.roles.SQLRole", "sqlalchemy.sql.elements.DQLDMLClauseElement", "sqlalchemy.sql.elements.ClauseElement", "sqlalchemy.sql.annotation.SupportsWrappingAnnotations", "sqlalchemy.sql.annotation.SupportsAnnotations", "sqlalchemy.sql.cache_key.MemoizedHasCacheKey", "sqlalchemy.sql.cache_key.HasCacheKey", "sqlalchemy.util.langhelpers.HasMemoized", "sqlalchemy.sql.traversals.HasCopyInternals", "sqlalchemy.sql.visitors.ExternallyTraversible", "sqlalchemy.sql.visitors.HasTraverseInternals", "sqlalchemy.sql.elements.CompilerElement", "sqlalchemy.sql.visitors.Visitable", "builtins.object"], "names": {".class": "SymbolTable", "__visit_name__": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "Var", "flags": ["is_initialized_in_class", "is_ready"], "fullname": "sqlalchemy.sql.selectable.TableSample.__visit_name__", "name": "__visit_name__", "type": "builtins.str"}}, "_factory": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "Decorator", "func": {".class": "FuncDef", "arg_kinds": [0, 0, 0, 1, 1], "arg_names": ["cls", "selectable", "sampling", "name", "seed"], "flags": ["is_class", "is_decorated"], "fullname": "sqlalchemy.sql.selectable.TableSample._factory", "name": "_factory", "type": {".class": "CallableType", "arg_kinds": [0, 0, 0, 1, 1], "arg_names": ["cls", "selectable", "sampling", "name", "seed"], "arg_types": [{".class": "TypeType", "item": "sqlalchemy.sql.selectable.TableSample"}, {".class": "TypeAliasType", "args": [], "type_ref": "sqlalchemy.sql._typing._FromClauseArgument"}, {".class": "UnionType", "items": ["builtins.float", {".class": "Instance", "args": [{".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 2}], "type_ref": "sqlalchemy.sql.functions.Function"}]}, {".class": "UnionType", "items": ["builtins.str", {".class": "NoneType"}]}, {".class": "UnionType", "items": [{".class": "Instance", "args": [{".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 2}], "type_ref": "sqlalchemy.sql.roles.ExpressionElementRole"}, {".class": "NoneType"}]}], "bound_args": [], "def_extras": {"first_arg": "cls"}, "fallback": "builtins.function", "implicit": false, "is_ellipsis_args": false, "name": "_factory of TableSample", "ret_type": "sqlalchemy.sql.selectable.TableSample", "variables": []}}, "is_overload": false, "var": {".class": "Var", "flags": ["is_initialized_in_class", "is_classmethod", "is_ready"], "fullname": null, "name": "_factory", "type": {".class": "CallableType", "arg_kinds": [0, 0, 0, 1, 1], "arg_names": ["cls", "selectable", "sampling", "name", "seed"], "arg_types": [{".class": "TypeType", "item": "sqlalchemy.sql.selectable.TableSample"}, {".class": "TypeAliasType", "args": [], "type_ref": "sqlalchemy.sql._typing._FromClauseArgument"}, {".class": "UnionType", "items": ["builtins.float", {".class": "Instance", "args": [{".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 2}], "type_ref": "sqlalchemy.sql.functions.Function"}]}, {".class": "UnionType", "items": ["builtins.str", {".class": "NoneType"}]}, {".class": "UnionType", "items": [{".class": "Instance", "args": [{".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 2}], "type_ref": "sqlalchemy.sql.roles.ExpressionElementRole"}, {".class": "NoneType"}]}], "bound_args": [], "def_extras": {"first_arg": "cls"}, "fallback": "builtins.function", "implicit": false, "is_ellipsis_args": false, "name": "_factory of TableSample", "ret_type": "sqlalchemy.sql.selectable.TableSample", "variables": []}}}}, "_get_method": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "FuncDef", "arg_kinds": [0], "arg_names": ["self"], "flags": [], "fullname": "sqlalchemy.sql.selectable.TableSample._get_method", "name": "_get_method", "type": {".class": "CallableType", "arg_kinds": [0], "arg_names": ["self"], "arg_types": ["sqlalchemy.sql.selectable.TableSample"], "bound_args": [], "def_extras": {"first_arg": "self"}, "fallback": "builtins.function", "implicit": false, "is_ellipsis_args": false, "name": "_get_method of TableSample", "ret_type": {".class": "Instance", "args": [{".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 2}], "type_ref": "sqlalchemy.sql.functions.Function"}, "variables": []}}}, "_init": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "Decorator", "func": {".class": "FuncDef", "arg_kinds": [0, 0, 5, 3, 5], "arg_names": ["self", "selectable", "name", "sampling", "seed"], "flags": ["is_decorated"], "fullname": "sqlalchemy.sql.selectable.TableSample._init", "name": "_init", "type": {".class": "CallableType", "arg_kinds": [0, 0, 5, 3, 5], "arg_names": ["self", "selectable", "name", "sampling", "seed"], "arg_types": ["sqlalchemy.sql.selectable.TableSample", {".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 2}, {".class": "UnionType", "items": ["builtins.str", {".class": "NoneType"}]}, {".class": "UnionType", "items": ["builtins.float", {".class": "Instance", "args": [{".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 2}], "type_ref": "sqlalchemy.sql.functions.Function"}]}, {".class": "UnionType", "items": [{".class": "Instance", "args": [{".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 2}], "type_ref": "sqlalchemy.sql.roles.ExpressionElementRole"}, {".class": "NoneType"}]}], "bound_args": [], "def_extras": {"first_arg": "self"}, "fallback": "builtins.function", "implicit": false, "is_ellipsis_args": false, "name": "_init of TableSample", "ret_type": {".class": "NoneType"}, "variables": []}}, "is_overload": false, "var": {".class": "Var", "flags": ["is_initialized_in_class", "is_ready"], "fullname": null, "name": "_init", "type": {".class": "CallableType", "arg_kinds": [0, 0, 5, 3, 5], "arg_names": ["self", "selectable", "name", "sampling", "seed"], "arg_types": ["sqlalchemy.sql.selectable.TableSample", {".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 2}, {".class": "UnionType", "items": ["builtins.str", {".class": "NoneType"}]}, {".class": "UnionType", "items": ["builtins.float", {".class": "Instance", "args": [{".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 2}], "type_ref": "sqlalchemy.sql.functions.Function"}]}, {".class": "UnionType", "items": [{".class": "Instance", "args": [{".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 2}], "type_ref": "sqlalchemy.sql.roles.ExpressionElementRole"}, {".class": "NoneType"}]}], "bound_args": [], "def_extras": {"first_arg": "self"}, "fallback": "builtins.function", "implicit": false, "is_ellipsis_args": false, "name": "_init of TableSample", "ret_type": {".class": "NoneType"}, "variables": []}}}}, "_traverse_internals": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "Var", "flags": ["is_initialized_in_class", "is_ready"], "fullname": "sqlalchemy.sql.selectable.TableSample._traverse_internals", "name": "_traverse_internals", "type": {".class": "TypeAliasType", "args": [], "type_ref": "sqlalchemy.sql.visitors._TraverseInternalsType"}}}, "sampling": {".class": "SymbolTableNode", "implicit": true, "kind": "Mdef", "node": {".class": "Var", "flags": ["explicit_self_type", "is_ready"], "fullname": "sqlalchemy.sql.selectable.TableSample.sampling", "name": "sampling", "type": {".class": "Instance", "args": [{".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 2}], "type_ref": "sqlalchemy.sql.functions.Function"}}}, "seed": {".class": "SymbolTableNode", "implicit": true, "kind": "Mdef", "node": {".class": "Var", "flags": [], "fullname": "sqlalchemy.sql.selectable.TableSample.seed", "name": "seed", "type": {".class": "UnionType", "items": [{".class": "Instance", "args": [{".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 2}], "type_ref": "sqlalchemy.sql.roles.ExpressionElementRole"}, {".class": "NoneType"}]}}}}, "tuple_type": null, "type_vars": [], "typeddict_type": null}}, "TableValueType": {".class": "SymbolTableNode", "cross_ref": "sqlalchemy.sql.sqltypes.TableValueType", "kind": "Gdef"}, "TableValuedAlias": {".class": "SymbolTableNode", "kind": "Gdef", "node": {".class": "TypeInfo", "_promote": null, "abstract_attributes": [], "bases": ["sqlalchemy.sql.selectable.LateralFromClause", "sqlalchemy.sql.selectable.Alias"], "declared_metaclass": null, "defn": {".class": "ClassDef", "fullname": "sqlalchemy.sql.selectable.TableValuedAlias", "name": "TableValuedAlias", "type_vars": []}, "flags": [], "fullname": "sqlalchemy.sql.selectable.TableValuedAlias", "metaclass_type": null, "metadata": {}, "module_name": "sqlalchemy.sql.selectable", "mro": ["sqlalchemy.sql.selectable.TableValuedAlias", "sqlalchemy.sql.selectable.LateralFromClause", "sqlalchemy.sql.selectable.Alias", "sqlalchemy.sql.roles.DMLTableRole", "sqlalchemy.sql.selectable.FromClauseAlias", "sqlalchemy.sql.selectable.AliasedReturnsRows", "sqlalchemy.sql.selectable.NoInit", "sqlalchemy.sql.selectable.NamedFromClause", "sqlalchemy.sql.selectable.FromClause", "sqlalchemy.sql.roles.AnonymizedFromClauseRole", "sqlalchemy.sql.roles.StrictFromClauseRole", "sqlalchemy.sql.roles.FromClauseRole", "sqlalchemy.sql.roles.ColumnsClauseRole", "sqlalchemy.sql.roles.JoinTargetRole", "sqlalchemy.sql.roles.AllowsLambdaRole", "sqlalchemy.sql.roles.UsesInspection", "sqlalchemy.sql.roles.ColumnListRole", "sqlalchemy.sql.roles.StructuralRole", "sqlalchemy.sql.selectable.Selectable", "sqlalchemy.sql.selectable.ReturnsRows", "sqlalchemy.sql.roles.ReturnsRowsRole", "sqlalchemy.sql.roles.SQLRole", "sqlalchemy.sql.elements.DQLDMLClauseElement", "sqlalchemy.sql.elements.ClauseElement", "sqlalchemy.sql.annotation.SupportsWrappingAnnotations", "sqlalchemy.sql.annotation.SupportsAnnotations", "sqlalchemy.sql.cache_key.MemoizedHasCacheKey", "sqlalchemy.sql.cache_key.HasCacheKey", "sqlalchemy.util.langhelpers.HasMemoized", "sqlalchemy.sql.traversals.HasCopyInternals", "sqlalchemy.sql.visitors.ExternallyTraversible", "sqlalchemy.sql.visitors.HasTraverseInternals", "sqlalchemy.sql.elements.CompilerElement", "sqlalchemy.sql.visitors.Visitable", "builtins.object"], "names": {".class": "SymbolTable", "__visit_name__": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "Var", "flags": ["is_initialized_in_class", "is_ready"], "fullname": "sqlalchemy.sql.selectable.TableValuedAlias.__visit_name__", "name": "__visit_name__", "type": "builtins.str"}}, "_init": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "FuncDef", "arg_kinds": [0, 0, 5, 5, 5], "arg_names": ["self", "selectable", "name", "table_value_type", "joins_implicitly"], "flags": [], "fullname": "sqlalchemy.sql.selectable.TableValuedAlias._init", "name": "_init", "type": {".class": "CallableType", "arg_kinds": [0, 0, 5, 5, 5], "arg_names": ["self", "selectable", "name", "table_value_type", "joins_implicitly"], "arg_types": ["sqlalchemy.sql.selectable.TableValuedAlias", {".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 2}, {".class": "UnionType", "items": ["builtins.str", {".class": "NoneType"}]}, {".class": "UnionType", "items": ["sqlalchemy.sql.sqltypes.TableValueType", {".class": "NoneType"}]}, "builtins.bool"], "bound_args": [], "def_extras": {"first_arg": "self"}, "fallback": "builtins.function", "implicit": false, "is_ellipsis_args": false, "name": "_init of TableValuedAlias", "ret_type": {".class": "NoneType"}, "variables": []}}}, "_render_derived": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "Var", "flags": ["is_initialized_in_class"], "fullname": "sqlalchemy.sql.selectable.TableValuedAlias._render_derived", "name": "_render_derived", "type": "builtins.bool"}}, "_render_derived_w_types": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "Var", "flags": ["is_initialized_in_class"], "fullname": "sqlalchemy.sql.selectable.TableValuedAlias._render_derived_w_types", "name": "_render_derived_w_types", "type": "builtins.bool"}}, "_supports_derived_columns": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "Var", "flags": ["is_initialized_in_class"], "fullname": "sqlalchemy.sql.selectable.TableValuedAlias._supports_derived_columns", "name": "_supports_derived_columns", "type": "builtins.bool"}}, "_tableval_type": {".class": "SymbolTableNode", "implicit": true, "kind": "Mdef", "node": {".class": "Var", "flags": [], "fullname": "sqlalchemy.sql.selectable.TableValuedAlias._tableval_type", "name": "_tableval_type", "type": "sqlalchemy.sql.sqltypes.TableValueType"}}, "_traverse_internals": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "Var", "flags": ["is_initialized_in_class", "is_ready"], "fullname": "sqlalchemy.sql.selectable.TableValuedAlias._traverse_internals", "name": "_traverse_internals", "type": {".class": "TypeAliasType", "args": [], "type_ref": "sqlalchemy.sql.visitors._TraverseInternalsType"}}}, "alias": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "FuncDef", "arg_kinds": [0, 1, 1], "arg_names": ["self", "name", "flat"], "flags": [], "fullname": "sqlalchemy.sql.selectable.TableValuedAlias.alias", "name": "alias", "type": {".class": "CallableType", "arg_kinds": [0, 1, 1], "arg_names": ["self", "name", "flat"], "arg_types": ["sqlalchemy.sql.selectable.TableValuedAlias", {".class": "UnionType", "items": ["builtins.str", {".class": "NoneType"}]}, "builtins.bool"], "bound_args": [], "def_extras": {"first_arg": "self"}, "fallback": "builtins.function", "implicit": false, "is_ellipsis_args": false, "name": "alias of TableValuedAlias", "ret_type": "sqlalchemy.sql.selectable.TableValuedAlias", "variables": []}}}, "column": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "Decorator", "func": {".class": "FuncDef", "arg_kinds": [0], "arg_names": ["self"], "flags": ["is_decorated"], "fullname": "sqlalchemy.sql.selectable.TableValuedAlias.column", "name": "column", "type": {".class": "CallableType", "arg_kinds": [0], "arg_names": ["self"], "arg_types": ["sqlalchemy.sql.selectable.TableValuedAlias"], "bound_args": [], "def_extras": {"first_arg": "self"}, "fallback": "builtins.function", "implicit": false, "is_ellipsis_args": false, "name": "column of TableValuedAlias", "ret_type": {".class": "Instance", "args": [{".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 2}], "type_ref": "sqlalchemy.sql.elements.TableValuedColumn"}, "variables": []}}, "is_overload": false, "var": {".class": "Var", "flags": ["is_initialized_in_class", "is_ready"], "fullname": null, "name": "column", "type": {".class": "Instance", "args": [{".class": "Instance", "args": [{".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 2}], "type_ref": "sqlalchemy.sql.elements.TableValuedColumn"}], "type_ref": "sqlalchemy.util.langhelpers.HasMemoized.memoized_attribute"}}}}, "joins_implicitly": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "Var", "flags": ["is_initialized_in_class"], "fullname": "sqlalchemy.sql.selectable.TableValuedAlias.joins_implicitly", "name": "joins_implicitly", "type": "builtins.bool"}}, "lateral": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "FuncDef", "arg_kinds": [0, 1], "arg_names": ["self", "name"], "flags": [], "fullname": "sqlalchemy.sql.selectable.TableValuedAlias.lateral", "name": "lateral", "type": {".class": "CallableType", "arg_kinds": [0, 1], "arg_names": ["self", "name"], "arg_types": ["sqlalchemy.sql.selectable.TableValuedAlias", {".class": "UnionType", "items": ["builtins.str", {".class": "NoneType"}]}], "bound_args": [], "def_extras": {"first_arg": "self"}, "fallback": "builtins.function", "implicit": false, "is_ellipsis_args": false, "name": "lateral of TableValuedAlias", "ret_type": "sqlalchemy.sql.selectable.LateralFromClause", "variables": []}}}, "render_derived": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "FuncDef", "arg_kinds": [0, 1, 1], "arg_names": ["self", "name", "with_types"], "flags": [], "fullname": "sqlalchemy.sql.selectable.TableValuedAlias.render_derived", "name": "render_derived", "type": {".class": "CallableType", "arg_kinds": [0, 1, 1], "arg_names": ["self", "name", "with_types"], "arg_types": ["sqlalchemy.sql.selectable.TableValuedAlias", {".class": "UnionType", "items": ["builtins.str", {".class": "NoneType"}]}, "builtins.bool"], "bound_args": [], "def_extras": {"first_arg": "self"}, "fallback": "builtins.function", "implicit": false, "is_ellipsis_args": false, "name": "render_derived of TableValuedAlias", "ret_type": "sqlalchemy.sql.selectable.TableValuedAlias", "variables": []}}}}, "tuple_type": null, "type_vars": [], "typeddict_type": null}}, "TableValuedColumn": {".class": "SymbolTableNode", "cross_ref": "sqlalchemy.sql.elements.TableValuedColumn", "kind": "Gdef"}, "TextAsFrom": {".class": "SymbolTableNode", "kind": "Gdef", "node": {".class": "TypeAlias", "alias_tvars": [], "column": 0, "fullname": "sqlalchemy.sql.selectable.TextAsFrom", "line": 6919, "no_args": true, "normalized": false, "target": "sqlalchemy.sql.selectable.TextualSelect"}}, "TextClause": {".class": "SymbolTableNode", "cross_ref": "sqlalchemy.sql.elements.TextClause", "kind": "Gdef"}, "TextualSelect": {".class": "SymbolTableNode", "kind": "Gdef", "node": {".class": "TypeInfo", "_promote": null, "abstract_attributes": [], "bases": ["sqlalchemy.sql.selectable.SelectBase", "sqlalchemy.sql.selectable.ExecutableReturnsRows", "sqlalchemy.sql.base.Generative"], "declared_metaclass": null, "defn": {".class": "ClassDef", "fullname": "sqlalchemy.sql.selectable.TextualSelect", "name": "TextualSelect", "type_vars": []}, "flags": [], "fullname": "sqlalchemy.sql.selectable.TextualSelect", "metaclass_type": null, "metadata": {}, "module_name": "sqlalchemy.sql.selectable", "mro": ["sqlalchemy.sql.selectable.TextualSelect", "sqlalchemy.sql.selectable.SelectBase", "sqlalchemy.sql.roles.SelectStatementRole", "sqlalchemy.sql.selectable.ExecutableReturnsRows", "sqlalchemy.sql.base.Executable", "sqlalchemy.sql.roles.StatementRole", "sqlalchemy.sql.roles.DMLSelectRole", "sqlalchemy.sql.roles.CompoundElementRole", "sqlalchemy.sql.roles.AllowsLambdaRole", "sqlalchemy.sql.roles.InElementRole", "sqlalchemy.sql.selectable.HasCTE", "sqlalchemy.sql.roles.HasCTERole", "sqlalchemy.sql.selectable.SelectsRows", "sqlalchemy.sql.annotation.SupportsCloneAnnotations", "sqlalchemy.sql.selectable.Selectable", "sqlalchemy.sql.selectable.ReturnsRows", "sqlalchemy.sql.roles.ReturnsRowsRole", "sqlalchemy.sql.roles.SQLRole", "sqlalchemy.sql.elements.DQLDMLClauseElement", "sqlalchemy.sql.elements.ClauseElement", "sqlalchemy.sql.annotation.SupportsWrappingAnnotations", "sqlalchemy.sql.annotation.SupportsAnnotations", "sqlalchemy.sql.cache_key.MemoizedHasCacheKey", "sqlalchemy.sql.cache_key.HasCacheKey", "sqlalchemy.sql.base.Generative", "sqlalchemy.util.langhelpers.HasMemoized", "sqlalchemy.sql.traversals.HasCopyInternals", "sqlalchemy.sql.visitors.ExternallyTraversible", "sqlalchemy.sql.visitors.HasTraverseInternals", "sqlalchemy.sql.elements.CompilerElement", "sqlalchemy.sql.visitors.Visitable", "builtins.object"], "names": {".class": "SymbolTable", "__init__": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "FuncDef", "arg_kinds": [0, 0, 0, 1], "arg_names": ["self", "text", "columns", "positional"], "flags": [], "fullname": "sqlalchemy.sql.selectable.TextualSelect.__init__", "name": "__init__", "type": {".class": "CallableType", "arg_kinds": [0, 0, 0, 1], "arg_names": ["self", "text", "columns", "positional"], "arg_types": ["sqlalchemy.sql.selectable.TextualSelect", "sqlalchemy.sql.elements.TextClause", {".class": "Instance", "args": [{".class": "TypeAliasType", "args": [{".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 2}], "type_ref": "sqlalchemy.sql._typing._ColumnExpressionArgument"}], "type_ref": "builtins.list"}, "builtins.bool"], "bound_args": [], "def_extras": {"first_arg": "self"}, "fallback": "builtins.function", "implicit": false, "is_ellipsis_args": false, "name": "__init__ of TextualSelect", "ret_type": {".class": "NoneType"}, "variables": []}}}, "__visit_name__": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "Var", "flags": ["is_initialized_in_class", "is_ready"], "fullname": "sqlalchemy.sql.selectable.TextualSelect.__visit_name__", "name": "__visit_name__", "type": "builtins.str"}}, "_all_selected_columns": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "Decorator", "func": {".class": "FuncDef", "arg_kinds": [0], "arg_names": ["self"], "flags": ["is_property", "is_decorated"], "fullname": "sqlalchemy.sql.selectable.TextualSelect._all_selected_columns", "name": "_all_selected_columns", "type": {".class": "CallableType", "arg_kinds": [0], "arg_names": ["self"], "arg_types": ["sqlalchemy.sql.selectable.TextualSelect"], "bound_args": [], "def_extras": {"first_arg": "self"}, "fallback": "builtins.function", "implicit": false, "is_ellipsis_args": false, "name": "_all_selected_columns of TextualSelect", "ret_type": {".class": "TypeAliasType", "args": [], "type_ref": "sqlalchemy.sql.selectable._SelectIterable"}, "variables": []}}, "is_overload": false, "var": {".class": "Var", "flags": ["is_initialized_in_class", "is_property", "is_ready"], "fullname": null, "name": "_all_selected_columns", "type": {".class": "CallableType", "arg_kinds": [0], "arg_names": ["self"], "arg_types": ["sqlalchemy.sql.selectable.TextualSelect"], "bound_args": [], "def_extras": {"first_arg": "self"}, "fallback": "builtins.function", "implicit": false, "is_ellipsis_args": false, "name": "_all_selected_columns of TextualSelect", "ret_type": {".class": "TypeAliasType", "args": [], "type_ref": "sqlalchemy.sql.selectable._SelectIterable"}, "variables": []}}}}, "_ensure_disambiguated_names": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "FuncDef", "arg_kinds": [0], "arg_names": ["self"], "flags": [], "fullname": "sqlalchemy.sql.selectable.TextualSelect._ensure_disambiguated_names", "name": "_ensure_disambiguated_names", "type": {".class": "CallableType", "arg_kinds": [0], "arg_names": ["self"], "arg_types": ["sqlalchemy.sql.selectable.TextualSelect"], "bound_args": [], "def_extras": {"first_arg": "self"}, "fallback": "builtins.function", "implicit": false, "is_ellipsis_args": false, "name": "_ensure_disambiguated_names of TextualSelect", "ret_type": "sqlalchemy.sql.selectable.TextualSelect", "variables": []}}}, "_generate_fromclause_column_proxies": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "FuncDef", "arg_kinds": [0, 0, 5], "arg_names": ["self", "fromclause", "proxy_compound_columns"], "flags": [], "fullname": "sqlalchemy.sql.selectable.TextualSelect._generate_fromclause_column_proxies", "name": "_generate_fromclause_column_proxies", "type": {".class": "CallableType", "arg_kinds": [0, 0, 5], "arg_names": ["self", "fromclause", "proxy_compound_columns"], "arg_types": ["sqlalchemy.sql.selectable.TextualSelect", "sqlalchemy.sql.selectable.FromClause", {".class": "UnionType", "items": [{".class": "Instance", "args": [{".class": "Instance", "args": [{".class": "Instance", "args": [{".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 2}], "type_ref": "sqlalchemy.sql.elements.ColumnElement"}], "type_ref": "typing.Sequence"}], "type_ref": "typing.Iterable"}, {".class": "NoneType"}]}], "bound_args": [], "def_extras": {"first_arg": "self"}, "fallback": "builtins.function", "implicit": false, "is_ellipsis_args": false, "name": "_generate_fromclause_column_proxies of TextualSelect", "ret_type": {".class": "NoneType"}, "variables": []}}}, "_init": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "FuncDef", "arg_kinds": [0, 0, 0, 1], "arg_names": ["self", "text", "columns", "positional"], "flags": [], "fullname": "sqlalchemy.sql.selectable.TextualSelect._init", "name": "_init", "type": {".class": "CallableType", "arg_kinds": [0, 0, 0, 1], "arg_names": ["self", "text", "columns", "positional"], "arg_types": ["sqlalchemy.sql.selectable.TextualSelect", "sqlalchemy.sql.elements.TextClause", {".class": "Instance", "args": [{".class": "Instance", "args": [{".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 2}], "type_ref": "sqlalchemy.sql.elements.NamedColumn"}], "type_ref": "builtins.list"}, "builtins.bool"], "bound_args": [], "def_extras": {"first_arg": "self"}, "fallback": "builtins.function", "implicit": false, "is_ellipsis_args": false, "name": "_init of TextualSelect", "ret_type": {".class": "NoneType"}, "variables": []}}}, "_is_textual": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "Var", "flags": ["is_initialized_in_class"], "fullname": "sqlalchemy.sql.selectable.TextualSelect._is_textual", "name": "_is_textual", "type": "builtins.bool"}}, "_label_style": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "Var", "flags": ["is_initialized_in_class"], "fullname": "sqlalchemy.sql.selectable.TextualSelect._label_style", "name": "_label_style", "type": "sqlalchemy.sql.selectable.SelectLabelStyle"}}, "_scalar_type": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "FuncDef", "arg_kinds": [0], "arg_names": ["self"], "flags": [], "fullname": "sqlalchemy.sql.selectable.TextualSelect._scalar_type", "name": "_scalar_type", "type": {".class": "CallableType", "arg_kinds": [0], "arg_names": ["self"], "arg_types": ["sqlalchemy.sql.selectable.TextualSelect"], "bound_args": [], "def_extras": {"first_arg": "self"}, "fallback": "builtins.function", "implicit": false, "is_ellipsis_args": false, "name": "_scalar_type of TextualSelect", "ret_type": {".class": "UnionType", "items": [{".class": "Instance", "args": [{".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 2}], "type_ref": "sqlalchemy.sql.type_api.TypeEngine"}, {".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 2}]}, "variables": []}}}, "_traverse_internals": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "Var", "flags": ["is_initialized_in_class", "is_ready"], "fullname": "sqlalchemy.sql.selectable.TextualSelect._traverse_internals", "name": "_traverse_internals", "type": {".class": "TypeAliasType", "args": [], "type_ref": "sqlalchemy.sql.visitors._TraverseInternalsType"}}}, "bindparams": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "Decorator", "func": {".class": "FuncDef", "arg_kinds": [0, 2, 4], "arg_names": ["self", "binds", "bind_as_values"], "flags": ["is_decorated"], "fullname": "sqlalchemy.sql.selectable.TextualSelect.bindparams", "name": "bindparams", "type": {".class": "CallableType", "arg_kinds": [0, 2, 4], "arg_names": ["self", "binds", "bind_as_values"], "arg_types": ["sqlalchemy.sql.selectable.TextualSelect", {".class": "Instance", "args": [{".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 2}], "type_ref": "sqlalchemy.sql.elements.BindParameter"}, {".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 2}], "bound_args": [], "def_extras": {"first_arg": "self"}, "fallback": "builtins.function", "implicit": false, "is_ellipsis_args": false, "name": "bindparams of TextualSelect", "ret_type": {".class": "AnyType", "missing_import_name": "sqlalchemy.util.typing.Self", "source_any": null, "type_of_any": 3}, "variables": []}}, "is_overload": false, "var": {".class": "Var", "flags": ["is_initialized_in_class", "is_ready"], "fullname": null, "name": "bindparams", "type": {".class": "CallableType", "arg_kinds": [0, 2, 4], "arg_names": ["self", "binds", "bind_as_values"], "arg_types": ["sqlalchemy.sql.selectable.TextualSelect", {".class": "Instance", "args": [{".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 2}], "type_ref": "sqlalchemy.sql.elements.BindParameter"}, {".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 2}], "bound_args": [], "def_extras": {"first_arg": "self"}, "fallback": "builtins.function", "implicit": false, "is_ellipsis_args": false, "name": "bindparams of TextualSelect", "ret_type": {".class": "AnyType", "missing_import_name": "sqlalchemy.util.typing.Self", "source_any": null, "type_of_any": 3}, "variables": []}}}}, "column_args": {".class": "SymbolTableNode", "implicit": true, "kind": "Mdef", "node": {".class": "Var", "flags": [], "fullname": "sqlalchemy.sql.selectable.TextualSelect.column_args", "name": "column_args", "type": {".class": "Instance", "args": [{".class": "Instance", "args": [{".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 2}], "type_ref": "sqlalchemy.sql.elements.NamedColumn"}], "type_ref": "builtins.list"}}}, "element": {".class": "SymbolTableNode", "implicit": true, "kind": "Mdef", "node": {".class": "Var", "flags": [], "fullname": "sqlalchemy.sql.selectable.TextualSelect.element", "name": "element", "type": "sqlalchemy.sql.elements.TextClause"}}, "is_select": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "Var", "flags": ["is_initialized_in_class"], "fullname": "sqlalchemy.sql.selectable.TextualSelect.is_select", "name": "is_select", "type": "builtins.bool"}}, "is_text": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "Var", "flags": ["is_initialized_in_class"], "fullname": "sqlalchemy.sql.selectable.TextualSelect.is_text", "name": "is_text", "type": "builtins.bool"}}, "positional": {".class": "SymbolTableNode", "implicit": true, "kind": "Mdef", "node": {".class": "Var", "flags": [], "fullname": "sqlalchemy.sql.selectable.TextualSelect.positional", "name": "positional", "type": "builtins.bool"}}, "selected_columns": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "Decorator", "func": {".class": "FuncDef", "arg_kinds": [0], "arg_names": ["self"], "flags": ["is_property", "is_decorated"], "fullname": "sqlalchemy.sql.selectable.TextualSelect.selected_columns", "name": "selected_columns", "type": {".class": "CallableType", "arg_kinds": [0], "arg_names": ["self"], "arg_types": ["sqlalchemy.sql.selectable.TextualSelect"], "bound_args": [], "def_extras": {"first_arg": "self"}, "fallback": "builtins.function", "implicit": false, "is_ellipsis_args": false, "name": "selected_columns of TextualSelect", "ret_type": {".class": "Instance", "args": ["builtins.str", {".class": "Instance", "args": [{".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 2}], "type_ref": "sqlalchemy.sql.elements.KeyedColumnElement"}], "type_ref": "sqlalchemy.sql.base.ColumnCollection"}, "variables": []}}, "is_overload": false, "var": {".class": "Var", "flags": ["is_initialized_in_class", "is_property", "is_ready"], "fullname": null, "name": "selected_columns", "type": {".class": "CallableType", "arg_kinds": [0], "arg_names": ["self"], "arg_types": ["sqlalchemy.sql.selectable.TextualSelect"], "bound_args": [], "def_extras": {"first_arg": "self"}, "fallback": "builtins.function", "implicit": false, "is_ellipsis_args": false, "name": "selected_columns of TextualSelect", "ret_type": {".class": "Instance", "args": ["builtins.str", {".class": "Instance", "args": [{".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 2}], "type_ref": "sqlalchemy.sql.elements.KeyedColumnElement"}], "type_ref": "sqlalchemy.sql.base.ColumnCollection"}, "variables": []}}}}, "set_label_style": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "FuncDef", "arg_kinds": [0, 0], "arg_names": ["self", "style"], "flags": [], "fullname": "sqlalchemy.sql.selectable.TextualSelect.set_label_style", "name": "set_label_style", "type": {".class": "CallableType", "arg_kinds": [0, 0], "arg_names": ["self", "style"], "arg_types": ["sqlalchemy.sql.selectable.TextualSelect", "sqlalchemy.sql.selectable.SelectLabelStyle"], "bound_args": [], "def_extras": {"first_arg": "self"}, "fallback": "builtins.function", "implicit": false, "is_ellipsis_args": false, "name": "set_label_style of TextualSelect", "ret_type": "sqlalchemy.sql.selectable.TextualSelect", "variables": []}}}}, "tuple_type": null, "type_vars": [], "typeddict_type": null}}, "Tuple": {".class": "SymbolTableNode", "cross_ref": "typing.Tuple", "kind": "Gdef"}, "Type": {".class": "SymbolTableNode", "cross_ref": "typing.Type", "kind": "Gdef"}, "TypeEngine": {".class": "SymbolTableNode", "cross_ref": "sqlalchemy.sql.type_api.TypeEngine", "kind": "Gdef"}, "TypeVar": {".class": "SymbolTableNode", "cross_ref": "typing.TypeVar", "kind": "Gdef"}, "TypedReturnsRows": {".class": "SymbolTableNode", "kind": "Gdef", "node": {".class": "TypeInfo", "_promote": null, "abstract_attributes": [], "bases": ["sqlalchemy.sql.selectable.ExecutableReturnsRows"], "declared_metaclass": null, "defn": {".class": "ClassDef", "fullname": "sqlalchemy.sql.selectable.TypedReturnsRows", "name": "TypedReturnsRows", "type_vars": [{".class": "TypeVarDef", "fullname": "sqlalchemy.sql._typing._TP", "id": 1, "name": "_TP", "upper_bound": {".class": "Instance", "args": [{".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 2}], "type_ref": "builtins.tuple"}, "values": [], "variance": 0}]}, "flags": [], "fullname": "sqlalchemy.sql.selectable.TypedReturnsRows", "metaclass_type": null, "metadata": {}, "module_name": "sqlalchemy.sql.selectable", "mro": ["sqlalchemy.sql.selectable.TypedReturnsRows", "sqlalchemy.sql.selectable.ExecutableReturnsRows", "sqlalchemy.sql.base.Executable", "sqlalchemy.sql.roles.StatementRole", "sqlalchemy.sql.selectable.ReturnsRows", "sqlalchemy.sql.roles.ReturnsRowsRole", "sqlalchemy.sql.roles.SQLRole", "sqlalchemy.sql.elements.DQLDMLClauseElement", "sqlalchemy.sql.elements.ClauseElement", "sqlalchemy.sql.annotation.SupportsWrappingAnnotations", "sqlalchemy.sql.annotation.SupportsAnnotations", "sqlalchemy.sql.cache_key.MemoizedHasCacheKey", "sqlalchemy.sql.cache_key.HasCacheKey", "sqlalchemy.util.langhelpers.HasMemoized", "sqlalchemy.sql.traversals.HasCopyInternals", "sqlalchemy.sql.visitors.ExternallyTraversible", "sqlalchemy.sql.visitors.HasTraverseInternals", "sqlalchemy.sql.elements.CompilerElement", "sqlalchemy.sql.visitors.Visitable", "builtins.object"], "names": {".class": "SymbolTable"}, "tuple_type": null, "type_vars": ["_TP"], "typeddict_type": null}}, "UnaryExpression": {".class": "SymbolTableNode", "cross_ref": "sqlalchemy.sql.elements.UnaryExpression", "kind": "Gdef"}, "Union": {".class": "SymbolTableNode", "cross_ref": "typing.Union", "kind": "Gdef"}, "Update": {".class": "SymbolTableNode", "cross_ref": "sqlalchemy.sql.dml.Update", "kind": "Gdef"}, "Values": {".class": "SymbolTableNode", "kind": "Gdef", "node": {".class": "TypeInfo", "_promote": null, "abstract_attributes": [], "bases": ["sqlalchemy.sql.roles.InElementRole", "sqlalchemy.sql.base.Generative", "sqlalchemy.sql.selectable.LateralFromClause"], "declared_metaclass": null, "defn": {".class": "ClassDef", "fullname": "sqlalchemy.sql.selectable.Values", "name": "Values", "type_vars": []}, "flags": [], "fullname": "sqlalchemy.sql.selectable.Values", "metaclass_type": null, "metadata": {}, "module_name": "sqlalchemy.sql.selectable", "mro": ["sqlalchemy.sql.selectable.Values", "sqlalchemy.sql.roles.InElementRole", "sqlalchemy.sql.base.Generative", "sqlalchemy.sql.selectable.LateralFromClause", "sqlalchemy.sql.selectable.NamedFromClause", "sqlalchemy.sql.selectable.FromClause", "sqlalchemy.sql.roles.AnonymizedFromClauseRole", "sqlalchemy.sql.roles.StrictFromClauseRole", "sqlalchemy.sql.roles.FromClauseRole", "sqlalchemy.sql.roles.ColumnsClauseRole", "sqlalchemy.sql.roles.JoinTargetRole", "sqlalchemy.sql.roles.AllowsLambdaRole", "sqlalchemy.sql.roles.UsesInspection", "sqlalchemy.sql.roles.ColumnListRole", "sqlalchemy.sql.roles.StructuralRole", "sqlalchemy.sql.selectable.Selectable", "sqlalchemy.sql.selectable.ReturnsRows", "sqlalchemy.sql.roles.ReturnsRowsRole", "sqlalchemy.sql.roles.SQLRole", "sqlalchemy.sql.elements.DQLDMLClauseElement", "sqlalchemy.sql.elements.ClauseElement", "sqlalchemy.sql.annotation.SupportsWrappingAnnotations", "sqlalchemy.sql.annotation.SupportsAnnotations", "sqlalchemy.sql.cache_key.MemoizedHasCacheKey", "sqlalchemy.sql.cache_key.HasCacheKey", "sqlalchemy.util.langhelpers.HasMemoized", "sqlalchemy.sql.traversals.HasCopyInternals", "sqlalchemy.sql.visitors.ExternallyTraversible", "sqlalchemy.sql.visitors.HasTraverseInternals", "sqlalchemy.sql.elements.CompilerElement", "sqlalchemy.sql.visitors.Visitable", "builtins.object"], "names": {".class": "SymbolTable", "__init__": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "FuncDef", "arg_kinds": [0, 2, 5, 5], "arg_names": ["self", "columns", "name", "literal_binds"], "flags": [], "fullname": "sqlalchemy.sql.selectable.Values.__init__", "name": "__init__", "type": {".class": "CallableType", "arg_kinds": [0, 2, 5, 5], "arg_names": ["self", "columns", "name", "literal_binds"], "arg_types": ["sqlalchemy.sql.selectable.Values", {".class": "Instance", "args": [{".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 2}], "type_ref": "sqlalchemy.sql.elements.ColumnClause"}, {".class": "UnionType", "items": ["builtins.str", {".class": "NoneType"}]}, "builtins.bool"], "bound_args": [], "def_extras": {"first_arg": "self"}, "fallback": "builtins.function", "implicit": false, "is_ellipsis_args": false, "name": "__init__ of Values", "ret_type": {".class": "NoneType"}, "variables": []}}}, "__visit_name__": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "Var", "flags": ["is_initialized_in_class", "is_ready"], "fullname": "sqlalchemy.sql.selectable.Values.__visit_name__", "name": "__visit_name__", "type": "builtins.str"}}, "_column_args": {".class": "SymbolTableNode", "implicit": true, "kind": "Mdef", "node": {".class": "Var", "flags": [], "fullname": "sqlalchemy.sql.selectable.Values._column_args", "name": "_column_args", "type": {".class": "Instance", "args": [{".class": "Instance", "args": [{".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 2}], "type_ref": "sqlalchemy.sql.elements.ColumnClause"}], "type_ref": "builtins.tuple"}}}, "_column_types": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "Decorator", "func": {".class": "FuncDef", "arg_kinds": [0], "arg_names": ["self"], "flags": ["is_property", "is_decorated"], "fullname": "sqlalchemy.sql.selectable.Values._column_types", "name": "_column_types", "type": {".class": "CallableType", "arg_kinds": [0], "arg_names": ["self"], "arg_types": ["sqlalchemy.sql.selectable.Values"], "bound_args": [], "def_extras": {"first_arg": "self"}, "fallback": "builtins.function", "implicit": false, "is_ellipsis_args": false, "name": "_column_types of Values", "ret_type": {".class": "Instance", "args": [{".class": "Instance", "args": [{".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 2}], "type_ref": "sqlalchemy.sql.type_api.TypeEngine"}], "type_ref": "builtins.list"}, "variables": []}}, "is_overload": false, "var": {".class": "Var", "flags": ["is_initialized_in_class", "is_property", "is_ready"], "fullname": null, "name": "_column_types", "type": {".class": "CallableType", "arg_kinds": [0], "arg_names": ["self"], "arg_types": ["sqlalchemy.sql.selectable.Values"], "bound_args": [], "def_extras": {"first_arg": "self"}, "fallback": "builtins.function", "implicit": false, "is_ellipsis_args": false, "name": "_column_types of Values", "ret_type": {".class": "Instance", "args": [{".class": "Instance", "args": [{".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 2}], "type_ref": "sqlalchemy.sql.type_api.TypeEngine"}], "type_ref": "builtins.list"}, "variables": []}}}}, "_data": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "Var", "flags": ["is_initialized_in_class", "is_ready"], "fullname": "sqlalchemy.sql.selectable.Values._data", "name": "_data", "type": {".class": "Instance", "args": [{".class": "Instance", "args": [{".class": "Instance", "args": [{".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 2}], "type_ref": "builtins.tuple"}], "type_ref": "builtins.list"}], "type_ref": "builtins.tuple"}}}, "_from_objects": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "Decorator", "func": {".class": "FuncDef", "arg_kinds": [0], "arg_names": ["self"], "flags": ["is_property", "is_decorated"], "fullname": "sqlalchemy.sql.selectable.Values._from_objects", "name": "_from_objects", "type": {".class": "CallableType", "arg_kinds": [0], "arg_names": ["self"], "arg_types": ["sqlalchemy.sql.selectable.Values"], "bound_args": [], "def_extras": {"first_arg": "self"}, "fallback": "builtins.function", "implicit": false, "is_ellipsis_args": false, "name": "_from_objects of Values", "ret_type": {".class": "Instance", "args": ["sqlalchemy.sql.selectable.FromClause"], "type_ref": "builtins.list"}, "variables": []}}, "is_overload": false, "var": {".class": "Var", "flags": ["is_initialized_in_class", "is_property", "is_ready"], "fullname": null, "name": "_from_objects", "type": {".class": "CallableType", "arg_kinds": [0], "arg_names": ["self"], "arg_types": ["sqlalchemy.sql.selectable.Values"], "bound_args": [], "def_extras": {"first_arg": "self"}, "fallback": "builtins.function", "implicit": false, "is_ellipsis_args": false, "name": "_from_objects of Values", "ret_type": {".class": "Instance", "args": ["sqlalchemy.sql.selectable.FromClause"], "type_ref": "builtins.list"}, "variables": []}}}}, "_populate_column_collection": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "FuncDef", "arg_kinds": [0], "arg_names": ["self"], "flags": [], "fullname": "sqlalchemy.sql.selectable.Values._populate_column_collection", "name": "_populate_column_collection", "type": {".class": "CallableType", "arg_kinds": [0], "arg_names": ["self"], "arg_types": ["sqlalchemy.sql.selectable.Values"], "bound_args": [], "def_extras": {"first_arg": "self"}, "fallback": "builtins.function", "implicit": false, "is_ellipsis_args": false, "name": "_populate_column_collection of Values", "ret_type": {".class": "NoneType"}, "variables": []}}}, "_traverse_internals": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "Var", "flags": ["is_initialized_in_class", "is_ready"], "fullname": "sqlalchemy.sql.selectable.Values._traverse_internals", "name": "_traverse_internals", "type": {".class": "TypeAliasType", "args": [], "type_ref": "sqlalchemy.sql.visitors._TraverseInternalsType"}}}, "_unnamed": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "Var", "flags": ["is_initialized_in_class", "is_ready"], "fullname": "sqlalchemy.sql.selectable.Values._unnamed", "name": "_unnamed", "type": "builtins.bool"}}, "alias": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "Decorator", "func": {".class": "FuncDef", "arg_kinds": [0, 1, 1], "arg_names": ["self", "name", "flat"], "flags": ["is_decorated"], "fullname": "sqlalchemy.sql.selectable.Values.alias", "name": "alias", "type": {".class": "CallableType", "arg_kinds": [0, 1, 1], "arg_names": ["self", "name", "flat"], "arg_types": ["sqlalchemy.sql.selectable.Values", {".class": "UnionType", "items": ["builtins.str", {".class": "NoneType"}]}, "builtins.bool"], "bound_args": [], "def_extras": {"first_arg": "self"}, "fallback": "builtins.function", "implicit": false, "is_ellipsis_args": false, "name": "alias of Values", "ret_type": {".class": "AnyType", "missing_import_name": "sqlalchemy.util.typing.Self", "source_any": null, "type_of_any": 3}, "variables": []}}, "is_overload": false, "var": {".class": "Var", "flags": ["is_initialized_in_class", "is_ready"], "fullname": null, "name": "alias", "type": {".class": "CallableType", "arg_kinds": [0, 1, 1], "arg_names": ["self", "name", "flat"], "arg_types": ["sqlalchemy.sql.selectable.Values", {".class": "UnionType", "items": ["builtins.str", {".class": "NoneType"}]}, "builtins.bool"], "bound_args": [], "def_extras": {"first_arg": "self"}, "fallback": "builtins.function", "implicit": false, "is_ellipsis_args": false, "name": "alias of Values", "ret_type": {".class": "AnyType", "missing_import_name": "sqlalchemy.util.typing.Self", "source_any": null, "type_of_any": 3}, "variables": []}}}}, "data": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "Decorator", "func": {".class": "FuncDef", "arg_kinds": [0, 0], "arg_names": ["self", "values"], "flags": ["is_decorated"], "fullname": "sqlalchemy.sql.selectable.Values.data", "name": "data", "type": {".class": "CallableType", "arg_kinds": [0, 0], "arg_names": ["self", "values"], "arg_types": ["sqlalchemy.sql.selectable.Values", {".class": "Instance", "args": [{".class": "Instance", "args": [{".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 2}], "type_ref": "builtins.tuple"}], "type_ref": "builtins.list"}], "bound_args": [], "def_extras": {"first_arg": "self"}, "fallback": "builtins.function", "implicit": false, "is_ellipsis_args": false, "name": "data of Values", "ret_type": {".class": "AnyType", "missing_import_name": "sqlalchemy.util.typing.Self", "source_any": null, "type_of_any": 3}, "variables": []}}, "is_overload": false, "var": {".class": "Var", "flags": ["is_initialized_in_class", "is_ready"], "fullname": null, "name": "data", "type": {".class": "CallableType", "arg_kinds": [0, 0], "arg_names": ["self", "values"], "arg_types": ["sqlalchemy.sql.selectable.Values", {".class": "Instance", "args": [{".class": "Instance", "args": [{".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 2}], "type_ref": "builtins.tuple"}], "type_ref": "builtins.list"}], "bound_args": [], "def_extras": {"first_arg": "self"}, "fallback": "builtins.function", "implicit": false, "is_ellipsis_args": false, "name": "data of Values", "ret_type": {".class": "AnyType", "missing_import_name": "sqlalchemy.util.typing.Self", "source_any": null, "type_of_any": 3}, "variables": []}}}}, "lateral": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "Decorator", "func": {".class": "FuncDef", "arg_kinds": [0, 1], "arg_names": ["self", "name"], "flags": ["is_decorated"], "fullname": "sqlalchemy.sql.selectable.Values.lateral", "name": "lateral", "type": {".class": "CallableType", "arg_kinds": [0, 1], "arg_names": ["self", "name"], "arg_types": ["sqlalchemy.sql.selectable.Values", {".class": "UnionType", "items": ["builtins.str", {".class": "NoneType"}]}], "bound_args": [], "def_extras": {"first_arg": "self"}, "fallback": "builtins.function", "implicit": false, "is_ellipsis_args": false, "name": "lateral of Values", "ret_type": "sqlalchemy.sql.selectable.LateralFromClause", "variables": []}}, "is_overload": false, "var": {".class": "Var", "flags": ["is_initialized_in_class", "is_ready"], "fullname": null, "name": "lateral", "type": {".class": "CallableType", "arg_kinds": [0, 1], "arg_names": ["self", "name"], "arg_types": ["sqlalchemy.sql.selectable.Values", {".class": "UnionType", "items": ["builtins.str", {".class": "NoneType"}]}], "bound_args": [], "def_extras": {"first_arg": "self"}, "fallback": "builtins.function", "implicit": false, "is_ellipsis_args": false, "name": "lateral of Values", "ret_type": "sqlalchemy.sql.selectable.LateralFromClause", "variables": []}}}}, "literal_binds": {".class": "SymbolTableNode", "implicit": true, "kind": "Mdef", "node": {".class": "Var", "flags": [], "fullname": "sqlalchemy.sql.selectable.Values.literal_binds", "name": "literal_binds", "type": "builtins.bool"}}, "scalar_values": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "FuncDef", "arg_kinds": [0], "arg_names": ["self"], "flags": [], "fullname": "sqlalchemy.sql.selectable.Values.scalar_values", "name": "scalar_values", "type": {".class": "CallableType", "arg_kinds": [0], "arg_names": ["self"], "arg_types": ["sqlalchemy.sql.selectable.Values"], "bound_args": [], "def_extras": {"first_arg": "self"}, "fallback": "builtins.function", "implicit": false, "is_ellipsis_args": false, "name": "scalar_values of Values", "ret_type": "sqlalchemy.sql.selectable.ScalarValues", "variables": []}}}}, "tuple_type": null, "type_vars": [], "typeddict_type": null}}, "_": {".class": "SymbolTableNode", "kind": "Gdef", "node": {".class": "Var", "flags": [], "fullname": "sqlalchemy.sql.selectable._", "name": "_", "type": "sqlalchemy.sql.selectable.SelectLabelStyle"}}, "_AmbiguousTableNameMap": {".class": "SymbolTableNode", "cross_ref": "sqlalchemy.sql.base._AmbiguousTableNameMap", "kind": "Gdef"}, "_CTEOpts": {".class": "SymbolTableNode", "kind": "Gdef", "node": {".class": "TypeInfo", "_promote": null, "abstract_attributes": [], "bases": [{".class": "Instance", "args": ["builtins.bool"], "type_ref": "builtins.tuple"}], "declared_metaclass": null, "defn": {".class": "ClassDef", "fullname": "sqlalchemy.sql.selectable._CTEOpts", "name": "_CTEOpts", "type_vars": []}, "flags": ["is_named_tuple"], "fullname": "sqlalchemy.sql.selectable._CTEOpts", "metaclass_type": null, "metadata": {}, "module_name": "sqlalchemy.sql.selectable", "mro": ["sqlalchemy.sql.selectable._CTEOpts", "builtins.tuple", "typing.Sequence", "typing.Collection", "typing.Iterable", "typing.Container", "typing.Reversible", "builtins.object"], "names": {".class": "SymbolTable", "_NT": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "TypeVarExpr", "fullname": "sqlalchemy.sql.selectable._CTEOpts._NT", "name": "_NT", "upper_bound": {".class": "TupleType", "implicit": false, "items": ["builtins.bool"], "partial_fallback": {".class": "Instance", "args": ["builtins.bool"], "type_ref": "builtins.tuple"}}, "values": [], "variance": 0}}, "__annotations__": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "Var", "flags": ["is_initialized_in_class", "is_ready"], "fullname": "sqlalchemy.sql.selectable._CTEOpts.__annotations__", "name": "__annotations__", "type": {".class": "Instance", "args": ["builtins.str", {".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 6}], "type_ref": "builtins.dict"}}}, "__doc__": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "Var", "flags": ["is_initialized_in_class", "is_ready"], "fullname": "sqlalchemy.sql.selectable._CTEOpts.__doc__", "name": "__doc__", "type": "builtins.str"}}, "__new__": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "FuncDef", "arg_kinds": [0, 0], "arg_names": ["_cls", "nesting"], "flags": [], "fullname": "sqlalchemy.sql.selectable._CTEOpts.__new__", "name": "__new__", "type": {".class": "CallableType", "arg_kinds": [0, 0], "arg_names": ["_cls", "nesting"], "arg_types": [{".class": "TypeType", "item": {".class": "TypeVarType", "fullname": "sqlalchemy.sql.selectable._CTEOpts._NT", "id": -1, "name": "_NT", "upper_bound": {".class": "TupleType", "implicit": false, "items": ["builtins.bool"], "partial_fallback": {".class": "Instance", "args": ["builtins.bool"], "type_ref": "builtins.tuple"}}, "values": [], "variance": 0}}, "builtins.bool"], "bound_args": [], "def_extras": {}, "fallback": "builtins.function", "implicit": false, "is_ellipsis_args": false, "name": "__new__ of _CTEOpts", "ret_type": {".class": "TypeVarType", "fullname": "sqlalchemy.sql.selectable._CTEOpts._NT", "id": -1, "name": "_NT", "upper_bound": {".class": "TupleType", "implicit": false, "items": ["builtins.bool"], "partial_fallback": {".class": "Instance", "args": ["builtins.bool"], "type_ref": "builtins.tuple"}}, "values": [], "variance": 0}, "variables": [{".class": "TypeVarDef", "fullname": "sqlalchemy.sql.selectable._CTEOpts._NT", "id": -1, "name": "_NT", "upper_bound": {".class": "TupleType", "implicit": false, "items": ["builtins.bool"], "partial_fallback": {".class": "Instance", "args": ["builtins.bool"], "type_ref": "builtins.tuple"}}, "values": [], "variance": 0}]}}, "plugin_generated": true}, "_asdict": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "FuncDef", "arg_kinds": [0], "arg_names": ["_self"], "flags": [], "fullname": "sqlalchemy.sql.selectable._CTEOpts._asdict", "name": "_asdict", "type": {".class": "CallableType", "arg_kinds": [0], "arg_names": ["_self"], "arg_types": [{".class": "TypeVarType", "fullname": "sqlalchemy.sql.selectable._CTEOpts._NT", "id": -1, "name": "_NT", "upper_bound": {".class": "TupleType", "implicit": false, "items": ["builtins.bool"], "partial_fallback": {".class": "Instance", "args": ["builtins.bool"], "type_ref": "builtins.tuple"}}, "values": [], "variance": 0}], "bound_args": [], "def_extras": {}, "fallback": "builtins.function", "implicit": false, "is_ellipsis_args": false, "name": "_asdict of _CTEOpts", "ret_type": {".class": "Instance", "args": ["builtins.str", {".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 6}], "type_ref": "builtins.dict"}, "variables": [{".class": "TypeVarDef", "fullname": "sqlalchemy.sql.selectable._CTEOpts._NT", "id": -1, "name": "_NT", "upper_bound": {".class": "TupleType", "implicit": false, "items": ["builtins.bool"], "partial_fallback": {".class": "Instance", "args": ["builtins.bool"], "type_ref": "builtins.tuple"}}, "values": [], "variance": 0}]}}, "plugin_generated": true}, "_field_defaults": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "Var", "flags": ["is_initialized_in_class", "is_ready"], "fullname": "sqlalchemy.sql.selectable._CTEOpts._field_defaults", "name": "_field_defaults", "type": {".class": "Instance", "args": ["builtins.str", {".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 6}], "type_ref": "builtins.dict"}}}, "_field_types": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "Var", "flags": ["is_initialized_in_class", "is_ready"], "fullname": "sqlalchemy.sql.selectable._CTEOpts._field_types", "name": "_field_types", "type": {".class": "Instance", "args": ["builtins.str", {".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 6}], "type_ref": "builtins.dict"}}}, "_fields": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "Var", "flags": ["is_initialized_in_class", "is_ready"], "fullname": "sqlalchemy.sql.selectable._CTEOpts._fields", "name": "_fields", "type": {".class": "TupleType", "implicit": false, "items": ["builtins.str"], "partial_fallback": {".class": "Instance", "args": [{".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 6}], "type_ref": "builtins.tuple"}}}}, "_make": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "Decorator", "func": {".class": "FuncDef", "arg_kinds": [0, 0, 5, 5], "arg_names": ["_cls", "iterable", "new", "len"], "flags": ["is_class", "is_decorated"], "fullname": "sqlalchemy.sql.selectable._CTEOpts._make", "name": "_make", "type": {".class": "CallableType", "arg_kinds": [0, 0, 5, 5], "arg_names": ["_cls", "iterable", "new", "len"], "arg_types": [{".class": "TypeType", "item": {".class": "TypeVarType", "fullname": "sqlalchemy.sql.selectable._CTEOpts._NT", "id": -1, "name": "_NT", "upper_bound": {".class": "TupleType", "implicit": false, "items": ["builtins.bool"], "partial_fallback": {".class": "Instance", "args": ["builtins.bool"], "type_ref": "builtins.tuple"}}, "values": [], "variance": 0}}, {".class": "Instance", "args": [{".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 6}], "type_ref": "typing.Iterable"}, {".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 6}, {".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 6}], "bound_args": [], "def_extras": {}, "fallback": "builtins.function", "implicit": false, "is_ellipsis_args": false, "name": "_make of _CTEOpts", "ret_type": {".class": "TypeVarType", "fullname": "sqlalchemy.sql.selectable._CTEOpts._NT", "id": -1, "name": "_NT", "upper_bound": {".class": "TupleType", "implicit": false, "items": ["builtins.bool"], "partial_fallback": {".class": "Instance", "args": ["builtins.bool"], "type_ref": "builtins.tuple"}}, "values": [], "variance": 0}, "variables": [{".class": "TypeVarDef", "fullname": "sqlalchemy.sql.selectable._CTEOpts._NT", "id": -1, "name": "_NT", "upper_bound": {".class": "TupleType", "implicit": false, "items": ["builtins.bool"], "partial_fallback": {".class": "Instance", "args": ["builtins.bool"], "type_ref": "builtins.tuple"}}, "values": [], "variance": 0}]}}, "is_overload": false, "var": {".class": "Var", "flags": ["is_classmethod", "is_ready"], "fullname": "sqlalchemy.sql.selectable._CTEOpts._make", "name": "_make", "type": {".class": "CallableType", "arg_kinds": [0, 0, 5, 5], "arg_names": ["_cls", "iterable", "new", "len"], "arg_types": [{".class": "TypeType", "item": {".class": "TypeVarType", "fullname": "sqlalchemy.sql.selectable._CTEOpts._NT", "id": -1, "name": "_NT", "upper_bound": {".class": "TupleType", "implicit": false, "items": ["builtins.bool"], "partial_fallback": {".class": "Instance", "args": ["builtins.bool"], "type_ref": "builtins.tuple"}}, "values": [], "variance": 0}}, {".class": "Instance", "args": [{".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 6}], "type_ref": "typing.Iterable"}, {".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 6}, {".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 6}], "bound_args": [], "def_extras": {}, "fallback": "builtins.function", "implicit": false, "is_ellipsis_args": false, "name": "_make of _CTEOpts", "ret_type": {".class": "TypeVarType", "fullname": "sqlalchemy.sql.selectable._CTEOpts._NT", "id": -1, "name": "_NT", "upper_bound": {".class": "TupleType", "implicit": false, "items": ["builtins.bool"], "partial_fallback": {".class": "Instance", "args": ["builtins.bool"], "type_ref": "builtins.tuple"}}, "values": [], "variance": 0}, "variables": [{".class": "TypeVarDef", "fullname": "sqlalchemy.sql.selectable._CTEOpts._NT", "id": -1, "name": "_NT", "upper_bound": {".class": "TupleType", "implicit": false, "items": ["builtins.bool"], "partial_fallback": {".class": "Instance", "args": ["builtins.bool"], "type_ref": "builtins.tuple"}}, "values": [], "variance": 0}]}}}, "plugin_generated": true}, "_replace": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "FuncDef", "arg_kinds": [0, 5], "arg_names": ["_self", "nesting"], "flags": [], "fullname": "sqlalchemy.sql.selectable._CTEOpts._replace", "name": "_replace", "type": {".class": "CallableType", "arg_kinds": [0, 5], "arg_names": ["_self", "nesting"], "arg_types": [{".class": "TypeVarType", "fullname": "sqlalchemy.sql.selectable._CTEOpts._NT", "id": -1, "name": "_NT", "upper_bound": {".class": "TupleType", "implicit": false, "items": ["builtins.bool"], "partial_fallback": {".class": "Instance", "args": ["builtins.bool"], "type_ref": "builtins.tuple"}}, "values": [], "variance": 0}, "builtins.bool"], "bound_args": [], "def_extras": {}, "fallback": "builtins.function", "implicit": false, "is_ellipsis_args": false, "name": "_replace of _CTEOpts", "ret_type": {".class": "TypeVarType", "fullname": "sqlalchemy.sql.selectable._CTEOpts._NT", "id": -1, "name": "_NT", "upper_bound": {".class": "TupleType", "implicit": false, "items": ["builtins.bool"], "partial_fallback": {".class": "Instance", "args": ["builtins.bool"], "type_ref": "builtins.tuple"}}, "values": [], "variance": 0}, "variables": [{".class": "TypeVarDef", "fullname": "sqlalchemy.sql.selectable._CTEOpts._NT", "id": -1, "name": "_NT", "upper_bound": {".class": "TupleType", "implicit": false, "items": ["builtins.bool"], "partial_fallback": {".class": "Instance", "args": ["builtins.bool"], "type_ref": "builtins.tuple"}}, "values": [], "variance": 0}]}}, "plugin_generated": true}, "_source": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "Var", "flags": ["is_initialized_in_class", "is_ready"], "fullname": "sqlalchemy.sql.selectable._CTEOpts._source", "name": "_source", "type": "builtins.str"}}, "nesting": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "Var", "flags": ["is_property", "is_ready"], "fullname": "sqlalchemy.sql.selectable._CTEOpts.nesting", "name": "nesting", "type": "builtins.bool"}}, "nesting-redefinition": {".class": "SymbolTableNode", "cross_ref": "sqlalchemy.sql.selectable._CTEOpts.nesting", "kind": "Mdef"}}, "tuple_type": {".class": "TupleType", "implicit": false, "items": ["builtins.bool"], "partial_fallback": {".class": "Instance", "args": ["builtins.bool"], "type_ref": "builtins.tuple"}}, "type_vars": [], "typeddict_type": null}}, "_CacheKeyTraversalType": {".class": "SymbolTableNode", "cross_ref": "sqlalchemy.sql.cache_key._CacheKeyTraversalType", "kind": "Gdef"}, "_CloneCallableType": {".class": "SymbolTableNode", "cross_ref": "sqlalchemy.sql.visitors._CloneCallableType", "kind": "Gdef"}, "_ColumnExpressionArgument": {".class": "SymbolTableNode", "cross_ref": "sqlalchemy.sql._typing._ColumnExpressionArgument", "kind": "Gdef"}, "_ColumnExpressionOrStrLabelArgument": {".class": "SymbolTableNode", "cross_ref": "sqlalchemy.sql._typing._ColumnExpressionOrStrLabelArgument", "kind": "Gdef"}, "_ColumnsClauseArgument": {".class": "SymbolTableNode", "cross_ref": "sqlalchemy.sql._typing._ColumnsClauseArgument", "kind": "Gdef"}, "_ColumnsClauseElement": {".class": "SymbolTableNode", "kind": "Gdef", "node": {".class": "TypeAlias", "alias_tvars": [], "column": 0, "fullname": "sqlalchemy.sql.selectable._ColumnsClauseElement", "line": 148, "no_args": false, "normalized": false, "target": {".class": "UnionType", "items": ["sqlalchemy.sql.selectable.FromClause", {".class": "Instance", "args": [{".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 6}], "type_ref": "sqlalchemy.sql.elements.ColumnElement"}, "sqlalchemy.sql.elements.TextClause"]}}}, "_ColumnsPlusNames": {".class": "SymbolTableNode", "kind": "Gdef", "node": {".class": "TypeInfo", "_promote": null, "abstract_attributes": [], "bases": [{".class": "Instance", "args": [{".class": "UnionType", "items": ["builtins.bool", "builtins.str", {".class": "Instance", "args": [{".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 2}], "type_ref": "sqlalchemy.sql.elements.ColumnElement"}, "sqlalchemy.sql.elements.TextClause"]}], "type_ref": "builtins.tuple"}], "declared_metaclass": null, "defn": {".class": "ClassDef", "fullname": "sqlalchemy.sql.selectable._ColumnsPlusNames", "name": "_ColumnsPlusNames", "type_vars": []}, "flags": ["is_named_tuple"], "fullname": "sqlalchemy.sql.selectable._ColumnsPlusNames", "metaclass_type": null, "metadata": {}, "module_name": "sqlalchemy.sql.selectable", "mro": ["sqlalchemy.sql.selectable._ColumnsPlusNames", "builtins.tuple", "typing.Sequence", "typing.Collection", "typing.Iterable", "typing.Container", "typing.Reversible", "builtins.object"], "names": {".class": "SymbolTable", "_NT": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "TypeVarExpr", "fullname": "sqlalchemy.sql.selectable._ColumnsPlusNames._NT", "name": "_NT", "upper_bound": {".class": "TupleType", "implicit": false, "items": [{".class": "UnionType", "items": ["builtins.str", {".class": "NoneType"}]}, {".class": "UnionType", "items": ["builtins.str", {".class": "NoneType"}]}, {".class": "UnionType", "items": ["builtins.str", {".class": "NoneType"}]}, {".class": "UnionType", "items": [{".class": "Instance", "args": [{".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 2}], "type_ref": "sqlalchemy.sql.elements.ColumnElement"}, "sqlalchemy.sql.elements.TextClause"]}, "builtins.bool"], "partial_fallback": {".class": "Instance", "args": [{".class": "UnionType", "items": ["builtins.bool", "builtins.str", {".class": "Instance", "args": [{".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 2}], "type_ref": "sqlalchemy.sql.elements.ColumnElement"}, "sqlalchemy.sql.elements.TextClause"]}], "type_ref": "builtins.tuple"}}, "values": [], "variance": 0}}, "__annotations__": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "Var", "flags": ["is_initialized_in_class", "is_ready"], "fullname": "sqlalchemy.sql.selectable._ColumnsPlusNames.__annotations__", "name": "__annotations__", "type": {".class": "Instance", "args": ["builtins.str", {".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 6}], "type_ref": "builtins.dict"}}}, "__doc__": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "Var", "flags": ["is_initialized_in_class", "is_ready"], "fullname": "sqlalchemy.sql.selectable._ColumnsPlusNames.__doc__", "name": "__doc__", "type": "builtins.str"}}, "__new__": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "FuncDef", "arg_kinds": [0, 0, 0, 0, 0, 0], "arg_names": ["_cls", "required_label_name", "proxy_key", "fallback_label_name", "column", "repeated"], "flags": [], "fullname": "sqlalchemy.sql.selectable._ColumnsPlusNames.__new__", "name": "__new__", "type": {".class": "CallableType", "arg_kinds": [0, 0, 0, 0, 0, 0], "arg_names": ["_cls", "required_label_name", "proxy_key", "fallback_label_name", "column", "repeated"], "arg_types": [{".class": "TypeType", "item": {".class": "TypeVarType", "fullname": "sqlalchemy.sql.selectable._ColumnsPlusNames._NT", "id": -1, "name": "_NT", "upper_bound": {".class": "TupleType", "implicit": false, "items": [{".class": "UnionType", "items": ["builtins.str", {".class": "NoneType"}]}, {".class": "UnionType", "items": ["builtins.str", {".class": "NoneType"}]}, {".class": "UnionType", "items": ["builtins.str", {".class": "NoneType"}]}, {".class": "UnionType", "items": [{".class": "Instance", "args": [{".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 2}], "type_ref": "sqlalchemy.sql.elements.ColumnElement"}, "sqlalchemy.sql.elements.TextClause"]}, "builtins.bool"], "partial_fallback": {".class": "Instance", "args": [{".class": "UnionType", "items": ["builtins.bool", "builtins.str", {".class": "Instance", "args": [{".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 2}], "type_ref": "sqlalchemy.sql.elements.ColumnElement"}, "sqlalchemy.sql.elements.TextClause"]}], "type_ref": "builtins.tuple"}}, "values": [], "variance": 0}}, {".class": "UnionType", "items": ["builtins.str", {".class": "NoneType"}]}, {".class": "UnionType", "items": ["builtins.str", {".class": "NoneType"}]}, {".class": "UnionType", "items": ["builtins.str", {".class": "NoneType"}]}, {".class": "UnionType", "items": [{".class": "Instance", "args": [{".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 2}], "type_ref": "sqlalchemy.sql.elements.ColumnElement"}, "sqlalchemy.sql.elements.TextClause"]}, "builtins.bool"], "bound_args": [], "def_extras": {}, "fallback": "builtins.function", "implicit": false, "is_ellipsis_args": false, "name": "__new__ of _ColumnsPlusNames", "ret_type": {".class": "TypeVarType", "fullname": "sqlalchemy.sql.selectable._ColumnsPlusNames._NT", "id": -1, "name": "_NT", "upper_bound": {".class": "TupleType", "implicit": false, "items": [{".class": "UnionType", "items": ["builtins.str", {".class": "NoneType"}]}, {".class": "UnionType", "items": ["builtins.str", {".class": "NoneType"}]}, {".class": "UnionType", "items": ["builtins.str", {".class": "NoneType"}]}, {".class": "UnionType", "items": [{".class": "Instance", "args": [{".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 2}], "type_ref": "sqlalchemy.sql.elements.ColumnElement"}, "sqlalchemy.sql.elements.TextClause"]}, "builtins.bool"], "partial_fallback": {".class": "Instance", "args": [{".class": "UnionType", "items": ["builtins.bool", "builtins.str", {".class": "Instance", "args": [{".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 2}], "type_ref": "sqlalchemy.sql.elements.ColumnElement"}, "sqlalchemy.sql.elements.TextClause"]}], "type_ref": "builtins.tuple"}}, "values": [], "variance": 0}, "variables": [{".class": "TypeVarDef", "fullname": "sqlalchemy.sql.selectable._ColumnsPlusNames._NT", "id": -1, "name": "_NT", "upper_bound": {".class": "TupleType", "implicit": false, "items": [{".class": "UnionType", "items": ["builtins.str", {".class": "NoneType"}]}, {".class": "UnionType", "items": ["builtins.str", {".class": "NoneType"}]}, {".class": "UnionType", "items": ["builtins.str", {".class": "NoneType"}]}, {".class": "UnionType", "items": [{".class": "Instance", "args": [{".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 2}], "type_ref": "sqlalchemy.sql.elements.ColumnElement"}, "sqlalchemy.sql.elements.TextClause"]}, "builtins.bool"], "partial_fallback": {".class": "Instance", "args": [{".class": "UnionType", "items": ["builtins.bool", "builtins.str", {".class": "Instance", "args": [{".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 2}], "type_ref": "sqlalchemy.sql.elements.ColumnElement"}, "sqlalchemy.sql.elements.TextClause"]}], "type_ref": "builtins.tuple"}}, "values": [], "variance": 0}]}}, "plugin_generated": true}, "_asdict": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "FuncDef", "arg_kinds": [0], "arg_names": ["_self"], "flags": [], "fullname": "sqlalchemy.sql.selectable._ColumnsPlusNames._asdict", "name": "_asdict", "type": {".class": "CallableType", "arg_kinds": [0], "arg_names": ["_self"], "arg_types": [{".class": "TypeVarType", "fullname": "sqlalchemy.sql.selectable._ColumnsPlusNames._NT", "id": -1, "name": "_NT", "upper_bound": {".class": "TupleType", "implicit": false, "items": [{".class": "UnionType", "items": ["builtins.str", {".class": "NoneType"}]}, {".class": "UnionType", "items": ["builtins.str", {".class": "NoneType"}]}, {".class": "UnionType", "items": ["builtins.str", {".class": "NoneType"}]}, {".class": "UnionType", "items": [{".class": "Instance", "args": [{".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 2}], "type_ref": "sqlalchemy.sql.elements.ColumnElement"}, "sqlalchemy.sql.elements.TextClause"]}, "builtins.bool"], "partial_fallback": {".class": "Instance", "args": [{".class": "UnionType", "items": ["builtins.bool", "builtins.str", {".class": "Instance", "args": [{".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 2}], "type_ref": "sqlalchemy.sql.elements.ColumnElement"}, "sqlalchemy.sql.elements.TextClause"]}], "type_ref": "builtins.tuple"}}, "values": [], "variance": 0}], "bound_args": [], "def_extras": {}, "fallback": "builtins.function", "implicit": false, "is_ellipsis_args": false, "name": "_asdict of _ColumnsPlusNames", "ret_type": {".class": "Instance", "args": ["builtins.str", {".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 6}], "type_ref": "builtins.dict"}, "variables": [{".class": "TypeVarDef", "fullname": "sqlalchemy.sql.selectable._ColumnsPlusNames._NT", "id": -1, "name": "_NT", "upper_bound": {".class": "TupleType", "implicit": false, "items": [{".class": "UnionType", "items": ["builtins.str", {".class": "NoneType"}]}, {".class": "UnionType", "items": ["builtins.str", {".class": "NoneType"}]}, {".class": "UnionType", "items": ["builtins.str", {".class": "NoneType"}]}, {".class": "UnionType", "items": [{".class": "Instance", "args": [{".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 2}], "type_ref": "sqlalchemy.sql.elements.ColumnElement"}, "sqlalchemy.sql.elements.TextClause"]}, "builtins.bool"], "partial_fallback": {".class": "Instance", "args": [{".class": "UnionType", "items": ["builtins.bool", "builtins.str", {".class": "Instance", "args": [{".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 2}], "type_ref": "sqlalchemy.sql.elements.ColumnElement"}, "sqlalchemy.sql.elements.TextClause"]}], "type_ref": "builtins.tuple"}}, "values": [], "variance": 0}]}}, "plugin_generated": true}, "_field_defaults": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "Var", "flags": ["is_initialized_in_class", "is_ready"], "fullname": "sqlalchemy.sql.selectable._ColumnsPlusNames._field_defaults", "name": "_field_defaults", "type": {".class": "Instance", "args": ["builtins.str", {".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 6}], "type_ref": "builtins.dict"}}}, "_field_types": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "Var", "flags": ["is_initialized_in_class", "is_ready"], "fullname": "sqlalchemy.sql.selectable._ColumnsPlusNames._field_types", "name": "_field_types", "type": {".class": "Instance", "args": ["builtins.str", {".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 6}], "type_ref": "builtins.dict"}}}, "_fields": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "Var", "flags": ["is_initialized_in_class", "is_ready"], "fullname": "sqlalchemy.sql.selectable._ColumnsPlusNames._fields", "name": "_fields", "type": {".class": "TupleType", "implicit": false, "items": ["builtins.str", "builtins.str", "builtins.str", "builtins.str", "builtins.str"], "partial_fallback": {".class": "Instance", "args": [{".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 6}], "type_ref": "builtins.tuple"}}}}, "_make": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "Decorator", "func": {".class": "FuncDef", "arg_kinds": [0, 0, 5, 5], "arg_names": ["_cls", "iterable", "new", "len"], "flags": ["is_class", "is_decorated"], "fullname": "sqlalchemy.sql.selectable._ColumnsPlusNames._make", "name": "_make", "type": {".class": "CallableType", "arg_kinds": [0, 0, 5, 5], "arg_names": ["_cls", "iterable", "new", "len"], "arg_types": [{".class": "TypeType", "item": {".class": "TypeVarType", "fullname": "sqlalchemy.sql.selectable._ColumnsPlusNames._NT", "id": -1, "name": "_NT", "upper_bound": {".class": "TupleType", "implicit": false, "items": [{".class": "UnionType", "items": ["builtins.str", {".class": "NoneType"}]}, {".class": "UnionType", "items": ["builtins.str", {".class": "NoneType"}]}, {".class": "UnionType", "items": ["builtins.str", {".class": "NoneType"}]}, {".class": "UnionType", "items": [{".class": "Instance", "args": [{".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 2}], "type_ref": "sqlalchemy.sql.elements.ColumnElement"}, "sqlalchemy.sql.elements.TextClause"]}, "builtins.bool"], "partial_fallback": {".class": "Instance", "args": [{".class": "UnionType", "items": ["builtins.bool", "builtins.str", {".class": "Instance", "args": [{".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 2}], "type_ref": "sqlalchemy.sql.elements.ColumnElement"}, "sqlalchemy.sql.elements.TextClause"]}], "type_ref": "builtins.tuple"}}, "values": [], "variance": 0}}, {".class": "Instance", "args": [{".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 6}], "type_ref": "typing.Iterable"}, {".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 6}, {".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 6}], "bound_args": [], "def_extras": {}, "fallback": "builtins.function", "implicit": false, "is_ellipsis_args": false, "name": "_make of _ColumnsPlusNames", "ret_type": {".class": "TypeVarType", "fullname": "sqlalchemy.sql.selectable._ColumnsPlusNames._NT", "id": -1, "name": "_NT", "upper_bound": {".class": "TupleType", "implicit": false, "items": [{".class": "UnionType", "items": ["builtins.str", {".class": "NoneType"}]}, {".class": "UnionType", "items": ["builtins.str", {".class": "NoneType"}]}, {".class": "UnionType", "items": ["builtins.str", {".class": "NoneType"}]}, {".class": "UnionType", "items": [{".class": "Instance", "args": [{".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 2}], "type_ref": "sqlalchemy.sql.elements.ColumnElement"}, "sqlalchemy.sql.elements.TextClause"]}, "builtins.bool"], "partial_fallback": {".class": "Instance", "args": [{".class": "UnionType", "items": ["builtins.bool", "builtins.str", {".class": "Instance", "args": [{".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 2}], "type_ref": "sqlalchemy.sql.elements.ColumnElement"}, "sqlalchemy.sql.elements.TextClause"]}], "type_ref": "builtins.tuple"}}, "values": [], "variance": 0}, "variables": [{".class": "TypeVarDef", "fullname": "sqlalchemy.sql.selectable._ColumnsPlusNames._NT", "id": -1, "name": "_NT", "upper_bound": {".class": "TupleType", "implicit": false, "items": [{".class": "UnionType", "items": ["builtins.str", {".class": "NoneType"}]}, {".class": "UnionType", "items": ["builtins.str", {".class": "NoneType"}]}, {".class": "UnionType", "items": ["builtins.str", {".class": "NoneType"}]}, {".class": "UnionType", "items": [{".class": "Instance", "args": [{".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 2}], "type_ref": "sqlalchemy.sql.elements.ColumnElement"}, "sqlalchemy.sql.elements.TextClause"]}, "builtins.bool"], "partial_fallback": {".class": "Instance", "args": [{".class": "UnionType", "items": ["builtins.bool", "builtins.str", {".class": "Instance", "args": [{".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 2}], "type_ref": "sqlalchemy.sql.elements.ColumnElement"}, "sqlalchemy.sql.elements.TextClause"]}], "type_ref": "builtins.tuple"}}, "values": [], "variance": 0}]}}, "is_overload": false, "var": {".class": "Var", "flags": ["is_classmethod", "is_ready"], "fullname": "sqlalchemy.sql.selectable._ColumnsPlusNames._make", "name": "_make", "type": {".class": "CallableType", "arg_kinds": [0, 0, 5, 5], "arg_names": ["_cls", "iterable", "new", "len"], "arg_types": [{".class": "TypeType", "item": {".class": "TypeVarType", "fullname": "sqlalchemy.sql.selectable._ColumnsPlusNames._NT", "id": -1, "name": "_NT", "upper_bound": {".class": "TupleType", "implicit": false, "items": [{".class": "UnionType", "items": ["builtins.str", {".class": "NoneType"}]}, {".class": "UnionType", "items": ["builtins.str", {".class": "NoneType"}]}, {".class": "UnionType", "items": ["builtins.str", {".class": "NoneType"}]}, {".class": "UnionType", "items": [{".class": "Instance", "args": [{".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 2}], "type_ref": "sqlalchemy.sql.elements.ColumnElement"}, "sqlalchemy.sql.elements.TextClause"]}, "builtins.bool"], "partial_fallback": {".class": "Instance", "args": [{".class": "UnionType", "items": ["builtins.bool", "builtins.str", {".class": "Instance", "args": [{".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 2}], "type_ref": "sqlalchemy.sql.elements.ColumnElement"}, "sqlalchemy.sql.elements.TextClause"]}], "type_ref": "builtins.tuple"}}, "values": [], "variance": 0}}, {".class": "Instance", "args": [{".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 6}], "type_ref": "typing.Iterable"}, {".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 6}, {".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 6}], "bound_args": [], "def_extras": {}, "fallback": "builtins.function", "implicit": false, "is_ellipsis_args": false, "name": "_make of _ColumnsPlusNames", "ret_type": {".class": "TypeVarType", "fullname": "sqlalchemy.sql.selectable._ColumnsPlusNames._NT", "id": -1, "name": "_NT", "upper_bound": {".class": "TupleType", "implicit": false, "items": [{".class": "UnionType", "items": ["builtins.str", {".class": "NoneType"}]}, {".class": "UnionType", "items": ["builtins.str", {".class": "NoneType"}]}, {".class": "UnionType", "items": ["builtins.str", {".class": "NoneType"}]}, {".class": "UnionType", "items": [{".class": "Instance", "args": [{".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 2}], "type_ref": "sqlalchemy.sql.elements.ColumnElement"}, "sqlalchemy.sql.elements.TextClause"]}, "builtins.bool"], "partial_fallback": {".class": "Instance", "args": [{".class": "UnionType", "items": ["builtins.bool", "builtins.str", {".class": "Instance", "args": [{".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 2}], "type_ref": "sqlalchemy.sql.elements.ColumnElement"}, "sqlalchemy.sql.elements.TextClause"]}], "type_ref": "builtins.tuple"}}, "values": [], "variance": 0}, "variables": [{".class": "TypeVarDef", "fullname": "sqlalchemy.sql.selectable._ColumnsPlusNames._NT", "id": -1, "name": "_NT", "upper_bound": {".class": "TupleType", "implicit": false, "items": [{".class": "UnionType", "items": ["builtins.str", {".class": "NoneType"}]}, {".class": "UnionType", "items": ["builtins.str", {".class": "NoneType"}]}, {".class": "UnionType", "items": ["builtins.str", {".class": "NoneType"}]}, {".class": "UnionType", "items": [{".class": "Instance", "args": [{".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 2}], "type_ref": "sqlalchemy.sql.elements.ColumnElement"}, "sqlalchemy.sql.elements.TextClause"]}, "builtins.bool"], "partial_fallback": {".class": "Instance", "args": [{".class": "UnionType", "items": ["builtins.bool", "builtins.str", {".class": "Instance", "args": [{".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 2}], "type_ref": "sqlalchemy.sql.elements.ColumnElement"}, "sqlalchemy.sql.elements.TextClause"]}], "type_ref": "builtins.tuple"}}, "values": [], "variance": 0}]}}}, "plugin_generated": true}, "_replace": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "FuncDef", "arg_kinds": [0, 5, 5, 5, 5, 5], "arg_names": ["_self", "required_label_name", "proxy_key", "fallback_label_name", "column", "repeated"], "flags": [], "fullname": "sqlalchemy.sql.selectable._ColumnsPlusNames._replace", "name": "_replace", "type": {".class": "CallableType", "arg_kinds": [0, 5, 5, 5, 5, 5], "arg_names": ["_self", "required_label_name", "proxy_key", "fallback_label_name", "column", "repeated"], "arg_types": [{".class": "TypeVarType", "fullname": "sqlalchemy.sql.selectable._ColumnsPlusNames._NT", "id": -1, "name": "_NT", "upper_bound": {".class": "TupleType", "implicit": false, "items": [{".class": "UnionType", "items": ["builtins.str", {".class": "NoneType"}]}, {".class": "UnionType", "items": ["builtins.str", {".class": "NoneType"}]}, {".class": "UnionType", "items": ["builtins.str", {".class": "NoneType"}]}, {".class": "UnionType", "items": [{".class": "Instance", "args": [{".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 2}], "type_ref": "sqlalchemy.sql.elements.ColumnElement"}, "sqlalchemy.sql.elements.TextClause"]}, "builtins.bool"], "partial_fallback": {".class": "Instance", "args": [{".class": "UnionType", "items": ["builtins.bool", "builtins.str", {".class": "Instance", "args": [{".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 2}], "type_ref": "sqlalchemy.sql.elements.ColumnElement"}, "sqlalchemy.sql.elements.TextClause"]}], "type_ref": "builtins.tuple"}}, "values": [], "variance": 0}, {".class": "UnionType", "items": ["builtins.str", {".class": "NoneType"}]}, {".class": "UnionType", "items": ["builtins.str", {".class": "NoneType"}]}, {".class": "UnionType", "items": ["builtins.str", {".class": "NoneType"}]}, {".class": "UnionType", "items": [{".class": "Instance", "args": [{".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 2}], "type_ref": "sqlalchemy.sql.elements.ColumnElement"}, "sqlalchemy.sql.elements.TextClause"]}, "builtins.bool"], "bound_args": [], "def_extras": {}, "fallback": "builtins.function", "implicit": false, "is_ellipsis_args": false, "name": "_replace of _ColumnsPlusNames", "ret_type": {".class": "TypeVarType", "fullname": "sqlalchemy.sql.selectable._ColumnsPlusNames._NT", "id": -1, "name": "_NT", "upper_bound": {".class": "TupleType", "implicit": false, "items": [{".class": "UnionType", "items": ["builtins.str", {".class": "NoneType"}]}, {".class": "UnionType", "items": ["builtins.str", {".class": "NoneType"}]}, {".class": "UnionType", "items": ["builtins.str", {".class": "NoneType"}]}, {".class": "UnionType", "items": [{".class": "Instance", "args": [{".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 2}], "type_ref": "sqlalchemy.sql.elements.ColumnElement"}, "sqlalchemy.sql.elements.TextClause"]}, "builtins.bool"], "partial_fallback": {".class": "Instance", "args": [{".class": "UnionType", "items": ["builtins.bool", "builtins.str", {".class": "Instance", "args": [{".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 2}], "type_ref": "sqlalchemy.sql.elements.ColumnElement"}, "sqlalchemy.sql.elements.TextClause"]}], "type_ref": "builtins.tuple"}}, "values": [], "variance": 0}, "variables": [{".class": "TypeVarDef", "fullname": "sqlalchemy.sql.selectable._ColumnsPlusNames._NT", "id": -1, "name": "_NT", "upper_bound": {".class": "TupleType", "implicit": false, "items": [{".class": "UnionType", "items": ["builtins.str", {".class": "NoneType"}]}, {".class": "UnionType", "items": ["builtins.str", {".class": "NoneType"}]}, {".class": "UnionType", "items": ["builtins.str", {".class": "NoneType"}]}, {".class": "UnionType", "items": [{".class": "Instance", "args": [{".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 2}], "type_ref": "sqlalchemy.sql.elements.ColumnElement"}, "sqlalchemy.sql.elements.TextClause"]}, "builtins.bool"], "partial_fallback": {".class": "Instance", "args": [{".class": "UnionType", "items": ["builtins.bool", "builtins.str", {".class": "Instance", "args": [{".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 2}], "type_ref": "sqlalchemy.sql.elements.ColumnElement"}, "sqlalchemy.sql.elements.TextClause"]}], "type_ref": "builtins.tuple"}}, "values": [], "variance": 0}]}}, "plugin_generated": true}, "_source": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "Var", "flags": ["is_initialized_in_class", "is_ready"], "fullname": "sqlalchemy.sql.selectable._ColumnsPlusNames._source", "name": "_source", "type": "builtins.str"}}, "column": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "Var", "flags": ["is_property", "is_ready"], "fullname": "sqlalchemy.sql.selectable._ColumnsPlusNames.column", "name": "column", "type": {".class": "UnionType", "items": [{".class": "Instance", "args": [{".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 2}], "type_ref": "sqlalchemy.sql.elements.ColumnElement"}, "sqlalchemy.sql.elements.TextClause"]}}}, "column-redefinition": {".class": "SymbolTableNode", "cross_ref": "sqlalchemy.sql.selectable._ColumnsPlusNames.column", "kind": "Mdef"}, "fallback_label_name": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "Var", "flags": ["is_property", "is_ready"], "fullname": "sqlalchemy.sql.selectable._ColumnsPlusNames.fallback_label_name", "name": "fallback_label_name", "type": {".class": "UnionType", "items": ["builtins.str", {".class": "NoneType"}]}}}, "fallback_label_name-redefinition": {".class": "SymbolTableNode", "cross_ref": "sqlalchemy.sql.selectable._ColumnsPlusNames.fallback_label_name", "kind": "Mdef"}, "proxy_key": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "Var", "flags": ["is_property", "is_ready"], "fullname": "sqlalchemy.sql.selectable._ColumnsPlusNames.proxy_key", "name": "proxy_key", "type": {".class": "UnionType", "items": ["builtins.str", {".class": "NoneType"}]}}}, "proxy_key-redefinition": {".class": "SymbolTableNode", "cross_ref": "sqlalchemy.sql.selectable._ColumnsPlusNames.proxy_key", "kind": "Mdef"}, "repeated": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "Var", "flags": ["is_property", "is_ready"], "fullname": "sqlalchemy.sql.selectable._ColumnsPlusNames.repeated", "name": "repeated", "type": "builtins.bool"}}, "repeated-redefinition": {".class": "SymbolTableNode", "cross_ref": "sqlalchemy.sql.selectable._ColumnsPlusNames.repeated", "kind": "Mdef"}, "required_label_name": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "Var", "flags": ["is_property", "is_ready"], "fullname": "sqlalchemy.sql.selectable._ColumnsPlusNames.required_label_name", "name": "required_label_name", "type": {".class": "UnionType", "items": ["builtins.str", {".class": "NoneType"}]}}}, "required_label_name-redefinition": {".class": "SymbolTableNode", "cross_ref": "sqlalchemy.sql.selectable._ColumnsPlusNames.required_label_name", "kind": "Mdef"}}, "tuple_type": {".class": "TupleType", "implicit": false, "items": [{".class": "UnionType", "items": ["builtins.str", {".class": "NoneType"}]}, {".class": "UnionType", "items": ["builtins.str", {".class": "NoneType"}]}, {".class": "UnionType", "items": ["builtins.str", {".class": "NoneType"}]}, {".class": "UnionType", "items": [{".class": "Instance", "args": [{".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 2}], "type_ref": "sqlalchemy.sql.elements.ColumnElement"}, "sqlalchemy.sql.elements.TextClause"]}, "builtins.bool"], "partial_fallback": {".class": "Instance", "args": [{".class": "UnionType", "items": ["builtins.bool", "builtins.str", {".class": "Instance", "args": [{".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 2}], "type_ref": "sqlalchemy.sql.elements.ColumnElement"}, "sqlalchemy.sql.elements.TextClause"]}], "type_ref": "builtins.tuple"}}, "type_vars": [], "typeddict_type": null}}, "_CompoundSelectKeyword": {".class": "SymbolTableNode", "kind": "Gdef", "node": {".class": "TypeInfo", "_promote": null, "abstract_attributes": [], "bases": ["enum.Enum"], "declared_metaclass": null, "defn": {".class": "ClassDef", "fullname": "sqlalchemy.sql.selectable._CompoundSelectKeyword", "name": "_CompoundSelectKeyword", "type_vars": []}, "flags": ["is_enum"], "fullname": "sqlalchemy.sql.selectable._CompoundSelectKeyword", "metaclass_type": "enum.EnumMeta", "metadata": {}, "module_name": "sqlalchemy.sql.selectable", "mro": ["sqlalchemy.sql.selectable._CompoundSelectKeyword", "enum.Enum", "builtins.object"], "names": {".class": "SymbolTable", "EXCEPT": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "Var", "flags": ["is_initialized_in_class", "is_ready"], "fullname": "sqlalchemy.sql.selectable._CompoundSelectKeyword.EXCEPT", "name": "EXCEPT", "type": "builtins.str"}}, "EXCEPT_ALL": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "Var", "flags": ["is_initialized_in_class", "is_ready"], "fullname": "sqlalchemy.sql.selectable._CompoundSelectKeyword.EXCEPT_ALL", "name": "EXCEPT_ALL", "type": "builtins.str"}}, "INTERSECT": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "Var", "flags": ["is_initialized_in_class", "is_ready"], "fullname": "sqlalchemy.sql.selectable._CompoundSelectKeyword.INTERSECT", "name": "INTERSECT", "type": "builtins.str"}}, "INTERSECT_ALL": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "Var", "flags": ["is_initialized_in_class", "is_ready"], "fullname": "sqlalchemy.sql.selectable._CompoundSelectKeyword.INTERSECT_ALL", "name": "INTERSECT_ALL", "type": "builtins.str"}}, "UNION": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "Var", "flags": ["is_initialized_in_class", "is_ready"], "fullname": "sqlalchemy.sql.selectable._CompoundSelectKeyword.UNION", "name": "UNION", "type": "builtins.str"}}, "UNION_ALL": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "Var", "flags": ["is_initialized_in_class", "is_ready"], "fullname": "sqlalchemy.sql.selectable._CompoundSelectKeyword.UNION_ALL", "name": "UNION_ALL", "type": "builtins.str"}}}, "tuple_type": null, "type_vars": [], "typeddict_type": null}}, "_EntityNamespace": {".class": "SymbolTableNode", "cross_ref": "sqlalchemy.sql.base._EntityNamespace", "kind": "Gdef"}, "_ForUpdateOfArgument": {".class": "SymbolTableNode", "kind": "Gdef", "node": {".class": "TypeAlias", "alias_tvars": [], "column": 0, "fullname": "sqlalchemy.sql.selectable._ForUpdateOfArgument", "line": 167, "no_args": false, "normalized": false, "target": {".class": "UnionType", "items": [{".class": "TypeAliasType", "args": [{".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 6}], "type_ref": "sqlalchemy.sql._typing._ColumnExpressionArgument"}, {".class": "TypeAliasType", "args": [], "type_ref": "sqlalchemy.sql._typing._FromClauseArgument"}, {".class": "Instance", "args": [{".class": "TypeAliasType", "args": [{".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 6}], "type_ref": "sqlalchemy.sql._typing._ColumnExpressionArgument"}], "type_ref": "typing.Sequence"}]}}}, "_FromClauseArgument": {".class": "SymbolTableNode", "cross_ref": "sqlalchemy.sql._typing._FromClauseArgument", "kind": "Gdef"}, "_JoinTargetArgument": {".class": "SymbolTableNode", "cross_ref": "sqlalchemy.sql._typing._JoinTargetArgument", "kind": "Gdef"}, "_JoinTargetElement": {".class": "SymbolTableNode", "kind": "Gdef", "node": {".class": "TypeAlias", "alias_tvars": [], "column": 0, "fullname": "sqlalchemy.sql.selectable._JoinTargetElement", "line": 164, "no_args": false, "normalized": false, "target": {".class": "UnionType", "items": ["sqlalchemy.sql.selectable.FromClause", "sqlalchemy.sql.selectable._JoinTargetProtocol"]}}}, "_JoinTargetProtocol": {".class": "SymbolTableNode", "kind": "Gdef", "node": {".class": "TypeInfo", "_promote": null, "abstract_attributes": [], "bases": ["builtins.object"], "declared_metaclass": null, "defn": {".class": "ClassDef", "fullname": "sqlalchemy.sql.selectable._JoinTargetProtocol", "name": "_JoinTargetProtocol", "type_vars": []}, "flags": ["is_protocol"], "fullname": "sqlalchemy.sql.selectable._JoinTargetProtocol", "metaclass_type": "abc.ABCMeta", "metadata": {}, "module_name": "sqlalchemy.sql.selectable", "mro": ["sqlalchemy.sql.selectable._JoinTargetProtocol", "builtins.object"], "names": {".class": "SymbolTable", "_from_objects": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "Decorator", "func": {".class": "FuncDef", "arg_kinds": [0], "arg_names": ["self"], "flags": ["is_property", "is_decorated"], "fullname": "sqlalchemy.sql.selectable._JoinTargetProtocol._from_objects", "name": "_from_objects", "type": {".class": "CallableType", "arg_kinds": [0], "arg_names": ["self"], "arg_types": ["sqlalchemy.sql.selectable._JoinTargetProtocol"], "bound_args": [], "def_extras": {"first_arg": "self"}, "fallback": "builtins.function", "implicit": false, "is_ellipsis_args": false, "name": "_from_objects of _JoinTargetProtocol", "ret_type": {".class": "Instance", "args": ["sqlalchemy.sql.selectable.FromClause"], "type_ref": "builtins.list"}, "variables": []}}, "is_overload": false, "var": {".class": "Var", "flags": ["is_initialized_in_class", "is_property", "is_ready"], "fullname": null, "name": "_from_objects", "type": {".class": "CallableType", "arg_kinds": [0], "arg_names": ["self"], "arg_types": ["sqlalchemy.sql.selectable._JoinTargetProtocol"], "bound_args": [], "def_extras": {"first_arg": "self"}, "fallback": "builtins.function", "implicit": false, "is_ellipsis_args": false, "name": "_from_objects of _JoinTargetProtocol", "ret_type": {".class": "Instance", "args": ["sqlalchemy.sql.selectable.FromClause"], "type_ref": "builtins.list"}, "variables": []}}}}, "entity_namespace": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "Decorator", "func": {".class": "FuncDef", "arg_kinds": [0], "arg_names": ["self"], "flags": ["is_property", "is_decorated"], "fullname": "sqlalchemy.sql.selectable._JoinTargetProtocol.entity_namespace", "name": "entity_namespace", "type": {".class": "CallableType", "arg_kinds": [0], "arg_names": ["self"], "arg_types": ["sqlalchemy.sql.selectable._JoinTargetProtocol"], "bound_args": [], "def_extras": {"first_arg": "self"}, "fallback": "builtins.function", "implicit": false, "is_ellipsis_args": false, "name": "entity_namespace of _JoinTargetProtocol", "ret_type": "sqlalchemy.sql.base._EntityNamespace", "variables": []}}, "is_overload": false, "var": {".class": "Var", "flags": ["is_initialized_in_class", "is_property", "is_ready"], "fullname": null, "name": "entity_namespace", "type": {".class": "CallableType", "arg_kinds": [0], "arg_names": ["self"], "arg_types": ["sqlalchemy.sql.selectable._JoinTargetProtocol"], "bound_args": [], "def_extras": {"first_arg": "self"}, "fallback": "builtins.function", "implicit": false, "is_ellipsis_args": false, "name": "entity_namespace of _JoinTargetProtocol", "ret_type": "sqlalchemy.sql.base._EntityNamespace", "variables": []}}}}}, "tuple_type": null, "type_vars": [], "typeddict_type": null}}, "_LabelConventionCallable": {".class": "SymbolTableNode", "kind": "Gdef", "node": {".class": "TypeAlias", "alias_tvars": [], "column": 0, "fullname": "sqlalchemy.sql.selectable._LabelConventionCallable", "line": 149, "no_args": false, "normalized": false, "target": {".class": "CallableType", "arg_kinds": [0], "arg_names": [null], "arg_types": [{".class": "UnionType", "items": [{".class": "Instance", "args": [{".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 6}], "type_ref": "sqlalchemy.sql.elements.ColumnElement"}, "sqlalchemy.sql.elements.TextClause"]}], "bound_args": [], "def_extras": {}, "fallback": "builtins.function", "implicit": false, "is_ellipsis_args": false, "name": null, "ret_type": {".class": "UnionType", "items": ["builtins.str", {".class": "NoneType"}]}, "variables": []}}}, "_LimitOffsetType": {".class": "SymbolTableNode", "cross_ref": "sqlalchemy.sql._typing._LimitOffsetType", "kind": "Gdef"}, "_MAYBE_ENTITY": {".class": "SymbolTableNode", "cross_ref": "sqlalchemy.sql._typing._MAYBE_ENTITY", "kind": "Gdef"}, "_MemoizedSelectEntities": {".class": "SymbolTableNode", "kind": "Gdef", "node": {".class": "TypeInfo", "_promote": null, "abstract_attributes": [], "bases": ["sqlalchemy.sql.cache_key.HasCacheKey", "sqlalchemy.sql.traversals.HasCopyInternals", "sqlalchemy.sql.visitors.Visitable"], "declared_metaclass": null, "defn": {".class": "ClassDef", "fullname": "sqlalchemy.sql.selectable._MemoizedSelectEntities", "name": "_MemoizedSelectEntities", "type_vars": []}, "flags": [], "fullname": "sqlalchemy.sql.selectable._MemoizedSelectEntities", "metaclass_type": null, "metadata": {}, "module_name": "sqlalchemy.sql.selectable", "mro": ["sqlalchemy.sql.selectable._MemoizedSelectEntities", "sqlalchemy.sql.cache_key.HasCacheKey", "sqlalchemy.sql.traversals.HasCopyInternals", "sqlalchemy.sql.visitors.HasTraverseInternals", "sqlalchemy.sql.visitors.Visitable", "builtins.object"], "names": {".class": "SymbolTable", "__visit_name__": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "Var", "flags": ["is_initialized_in_class", "is_ready"], "fullname": "sqlalchemy.sql.selectable._MemoizedSelectEntities.__visit_name__", "name": "__visit_name__", "type": "builtins.str"}}, "_annotations": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "Var", "flags": ["is_initialized_in_class"], "fullname": "sqlalchemy.sql.selectable._MemoizedSelectEntities._annotations", "name": "_annotations", "type": {".class": "Instance", "args": [{".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 2}, {".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 2}], "type_ref": "sqlalchemy.util._py_collections.immutabledict"}}}, "_clone": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "FuncDef", "arg_kinds": [0, 4], "arg_names": ["self", "kw"], "flags": [], "fullname": "sqlalchemy.sql.selectable._MemoizedSelectEntities._clone", "name": "_clone", "type": {".class": "CallableType", "arg_kinds": [0, 4], "arg_names": ["self", "kw"], "arg_types": ["sqlalchemy.sql.selectable._MemoizedSelectEntities", {".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 2}], "bound_args": [], "def_extras": {"first_arg": "self"}, "fallback": "builtins.function", "implicit": false, "is_ellipsis_args": false, "name": "_clone of _MemoizedSelectEntities", "ret_type": {".class": "AnyType", "missing_import_name": "sqlalchemy.util.typing.Self", "source_any": null, "type_of_any": 3}, "variables": []}}}, "_generate_for_statement": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "Decorator", "func": {".class": "FuncDef", "arg_kinds": [0, 0], "arg_names": ["cls", "select_stmt"], "flags": ["is_class", "is_decorated"], "fullname": "sqlalchemy.sql.selectable._MemoizedSelectEntities._generate_for_statement", "name": "_generate_for_statement", "type": {".class": "CallableType", "arg_kinds": [0, 0], "arg_names": ["cls", "select_stmt"], "arg_types": [{".class": "TypeType", "item": "sqlalchemy.sql.selectable._MemoizedSelectEntities"}, {".class": "Instance", "args": [{".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 2}], "type_ref": "sqlalchemy.sql.selectable.Select"}], "bound_args": [], "def_extras": {"first_arg": "cls"}, "fallback": "builtins.function", "implicit": false, "is_ellipsis_args": false, "name": "_generate_for_statement of _MemoizedSelectEntities", "ret_type": {".class": "NoneType"}, "variables": []}}, "is_overload": false, "var": {".class": "Var", "flags": ["is_initialized_in_class", "is_classmethod", "is_ready"], "fullname": null, "name": "_generate_for_statement", "type": {".class": "CallableType", "arg_kinds": [0, 0], "arg_names": ["cls", "select_stmt"], "arg_types": [{".class": "TypeType", "item": "sqlalchemy.sql.selectable._MemoizedSelectEntities"}, {".class": "Instance", "args": [{".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 2}], "type_ref": "sqlalchemy.sql.selectable.Select"}], "bound_args": [], "def_extras": {"first_arg": "cls"}, "fallback": "builtins.function", "implicit": false, "is_ellipsis_args": false, "name": "_generate_for_statement of _MemoizedSelectEntities", "ret_type": {".class": "NoneType"}, "variables": []}}}}, "_is_clone_of": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "Var", "flags": ["is_initialized_in_class", "is_ready"], "fullname": "sqlalchemy.sql.selectable._MemoizedSelectEntities._is_clone_of", "name": "_is_clone_of", "type": {".class": "UnionType", "items": ["sqlalchemy.sql.elements.ClauseElement", {".class": "NoneType"}]}}}, "_raw_columns": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "Var", "flags": ["is_initialized_in_class", "is_ready"], "fullname": "sqlalchemy.sql.selectable._MemoizedSelectEntities._raw_columns", "name": "_raw_columns", "type": {".class": "Instance", "args": [{".class": "TypeAliasType", "args": [], "type_ref": "sqlalchemy.sql.selectable._ColumnsClauseElement"}], "type_ref": "builtins.list"}}}, "_setup_joins": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "Var", "flags": ["is_initialized_in_class", "is_ready"], "fullname": "sqlalchemy.sql.selectable._MemoizedSelectEntities._setup_joins", "name": "_setup_joins", "type": {".class": "Instance", "args": [{".class": "TypeAliasType", "args": [], "type_ref": "sqlalchemy.sql.selectable._SetupJoinsElement"}], "type_ref": "builtins.tuple"}}}, "_traverse_internals": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "Var", "flags": ["is_initialized_in_class", "is_ready"], "fullname": "sqlalchemy.sql.selectable._MemoizedSelectEntities._traverse_internals", "name": "_traverse_internals", "type": {".class": "TypeAliasType", "args": [], "type_ref": "sqlalchemy.sql.visitors._TraverseInternalsType"}}}, "_with_options": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "Var", "flags": ["is_initialized_in_class", "is_ready"], "fullname": "sqlalchemy.sql.selectable._MemoizedSelectEntities._with_options", "name": "_with_options", "type": {".class": "Instance", "args": ["sqlalchemy.sql.base.ExecutableOption"], "type_ref": "builtins.tuple"}}}}, "tuple_type": null, "type_vars": [], "typeddict_type": null}}, "_NOT_ENTITY": {".class": "SymbolTableNode", "cross_ref": "sqlalchemy.sql._typing._NOT_ENTITY", "kind": "Gdef"}, "_NoArg": {".class": "SymbolTableNode", "cross_ref": "sqlalchemy.sql.base._NoArg", "kind": "Gdef"}, "_OffsetLimitParam": {".class": "SymbolTableNode", "kind": "Gdef", "node": {".class": "TypeInfo", "_promote": null, "abstract_attributes": [], "bases": [{".class": "Instance", "args": ["builtins.int"], "type_ref": "sqlalchemy.sql.elements.BindParameter"}], "declared_metaclass": null, "defn": {".class": "ClassDef", "fullname": "sqlalchemy.sql.selectable._OffsetLimitParam", "name": "_OffsetLimitParam", "type_vars": []}, "flags": [], "fullname": "sqlalchemy.sql.selectable._OffsetLimitParam", "metaclass_type": null, "metadata": {}, "module_name": "sqlalchemy.sql.selectable", "mro": ["sqlalchemy.sql.selectable._OffsetLimitParam", "sqlalchemy.sql.elements.BindParameter", "sqlalchemy.sql.roles.InElementRole", "sqlalchemy.sql.elements.KeyedColumnElement", "sqlalchemy.sql.elements.ColumnElement", "sqlalchemy.sql.roles.ColumnArgumentOrKeyRole", "sqlalchemy.sql.roles.ColumnArgumentRole", "sqlalchemy.sql.roles.StatementOptionRole", "sqlalchemy.sql.roles.WhereHavingRole", "sqlalchemy.sql.roles.OnClauseRole", "sqlalchemy.sql.roles.BinaryElementRole", "sqlalchemy.sql.roles.OrderByRole", "sqlalchemy.sql.roles.ColumnsClauseRole", "sqlalchemy.sql.roles.AllowsLambdaRole", "sqlalchemy.sql.roles.ByOfRole", "sqlalchemy.sql.roles.UsesInspection", "sqlalchemy.sql.roles.ColumnListRole", "sqlalchemy.sql.roles.LimitOffsetRole", "sqlalchemy.sql.roles.DMLColumnRole", "sqlalchemy.sql.roles.DDLConstraintColumnRole", "sqlalchemy.sql.roles.DDLExpressionRole", "sqlalchemy.sql.roles.StructuralRole", "sqlalchemy.sql.elements.SQLColumnExpression", "sqlalchemy.sql.elements.SQLCoreOperations", "sqlalchemy.sql.operators.ColumnOperators", "sqlalchemy.sql.operators.Operators", "sqlalchemy.sql.roles.ExpressionElementRole", "sqlalchemy.util.langhelpers.TypingOnly", "sqlalchemy.sql.roles.TypedColumnsClauseRole", "sqlalchemy.sql.roles.SQLRole", "sqlalchemy.sql.elements.DQLDMLClauseElement", "sqlalchemy.sql.elements.ClauseElement", "sqlalchemy.sql.annotation.SupportsWrappingAnnotations", "sqlalchemy.sql.annotation.SupportsAnnotations", "sqlalchemy.sql.cache_key.MemoizedHasCacheKey", "sqlalchemy.sql.cache_key.HasCacheKey", "sqlalchemy.util.langhelpers.HasMemoized", "sqlalchemy.sql.traversals.HasCopyInternals", "sqlalchemy.sql.visitors.ExternallyTraversible", "sqlalchemy.sql.visitors.HasTraverseInternals", "sqlalchemy.sql.elements.CompilerElement", "sqlalchemy.sql.visitors.Visitable", "builtins.object"], "names": {".class": "SymbolTable", "_limit_offset_value": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "Decorator", "func": {".class": "FuncDef", "arg_kinds": [0], "arg_names": ["self"], "flags": ["is_property", "is_decorated"], "fullname": "sqlalchemy.sql.selectable._OffsetLimitParam._limit_offset_value", "name": "_limit_offset_value", "type": {".class": "CallableType", "arg_kinds": [0], "arg_names": ["self"], "arg_types": ["sqlalchemy.sql.selectable._OffsetLimitParam"], "bound_args": [], "def_extras": {"first_arg": "self"}, "fallback": "builtins.function", "implicit": false, "is_ellipsis_args": false, "name": "_limit_offset_value of _OffsetLimitParam", "ret_type": {".class": "UnionType", "items": ["builtins.int", {".class": "NoneType"}]}, "variables": []}}, "is_overload": false, "var": {".class": "Var", "flags": ["is_initialized_in_class", "is_property", "is_ready"], "fullname": null, "name": "_limit_offset_value", "type": {".class": "CallableType", "arg_kinds": [0], "arg_names": ["self"], "arg_types": ["sqlalchemy.sql.selectable._OffsetLimitParam"], "bound_args": [], "def_extras": {"first_arg": "self"}, "fallback": "builtins.function", "implicit": false, "is_ellipsis_args": false, "name": "_limit_offset_value of _OffsetLimitParam", "ret_type": {".class": "UnionType", "items": ["builtins.int", {".class": "NoneType"}]}, "variables": []}}}}, "inherit_cache": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "Var", "flags": ["is_initialized_in_class"], "fullname": "sqlalchemy.sql.selectable._OffsetLimitParam.inherit_cache", "name": "inherit_cache", "type": "builtins.bool"}}}, "tuple_type": null, "type_vars": [], "typeddict_type": null}}, "_OnClauseArgument": {".class": "SymbolTableNode", "cross_ref": "sqlalchemy.sql._typing._OnClauseArgument", "kind": "Gdef"}, "_OnClauseElement": {".class": "SymbolTableNode", "kind": "Gdef", "node": {".class": "TypeAlias", "alias_tvars": [], "column": 0, "fullname": "sqlalchemy.sql.selectable._OnClauseElement", "line": 165, "no_args": false, "normalized": false, "target": {".class": "UnionType", "items": [{".class": "Instance", "args": ["builtins.bool"], "type_ref": "sqlalchemy.sql.elements.ColumnElement"}, "sqlalchemy.sql.selectable._JoinTargetProtocol"]}}}, "_SB": {".class": "SymbolTableNode", "kind": "Gdef", "node": {".class": "TypeVarExpr", "fullname": "sqlalchemy.sql.selectable._SB", "name": "_SB", "upper_bound": "sqlalchemy.sql.selectable.SelectBase", "values": [], "variance": 0}}, "_SelectFromElements": {".class": "SymbolTableNode", "kind": "Gdef", "node": {".class": "TypeInfo", "_promote": null, "abstract_attributes": [], "bases": ["builtins.object"], "declared_metaclass": null, "defn": {".class": "ClassDef", "fullname": "sqlalchemy.sql.selectable._SelectFromElements", "name": "_SelectFromElements", "type_vars": []}, "flags": [], "fullname": "sqlalchemy.sql.selectable._SelectFromElements", "metaclass_type": null, "metadata": {}, "module_name": "sqlalchemy.sql.selectable", "mro": ["sqlalchemy.sql.selectable._SelectFromElements", "builtins.object"], "names": {".class": "SymbolTable", "__slots__": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "Var", "flags": ["is_initialized_in_class"], "fullname": "sqlalchemy.sql.selectable._SelectFromElements.__slots__", "name": "__slots__", "type": {".class": "TupleType", "implicit": false, "items": [], "partial_fallback": {".class": "Instance", "args": [{".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 6}], "type_ref": "builtins.tuple"}}}}, "_from_obj": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "Var", "flags": ["is_initialized_in_class", "is_ready"], "fullname": "sqlalchemy.sql.selectable._SelectFromElements._from_obj", "name": "_from_obj", "type": {".class": "Instance", "args": ["sqlalchemy.sql.selectable.FromClause"], "type_ref": "builtins.tuple"}}}, "_iterate_from_elements": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "FuncDef", "arg_kinds": [0], "arg_names": ["self"], "flags": ["is_generator"], "fullname": "sqlalchemy.sql.selectable._SelectFromElements._iterate_from_elements", "name": "_iterate_from_elements", "type": {".class": "CallableType", "arg_kinds": [0], "arg_names": ["self"], "arg_types": ["sqlalchemy.sql.selectable._SelectFromElements"], "bound_args": [], "def_extras": {"first_arg": "self"}, "fallback": "builtins.function", "implicit": false, "is_ellipsis_args": false, "name": "_iterate_from_elements of _SelectFromElements", "ret_type": {".class": "Instance", "args": ["sqlalchemy.sql.selectable.FromClause"], "type_ref": "typing.Iterator"}, "variables": []}}}, "_raw_columns": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "Var", "flags": ["is_initialized_in_class", "is_ready"], "fullname": "sqlalchemy.sql.selectable._SelectFromElements._raw_columns", "name": "_raw_columns", "type": {".class": "Instance", "args": [{".class": "TypeAliasType", "args": [], "type_ref": "sqlalchemy.sql.selectable._ColumnsClauseElement"}], "type_ref": "builtins.list"}}}, "_where_criteria": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "Var", "flags": ["is_initialized_in_class", "is_ready"], "fullname": "sqlalchemy.sql.selectable._SelectFromElements._where_criteria", "name": "_where_criteria", "type": {".class": "Instance", "args": [{".class": "Instance", "args": [{".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 2}], "type_ref": "sqlalchemy.sql.elements.ColumnElement"}], "type_ref": "builtins.tuple"}}}}, "tuple_type": null, "type_vars": [], "typeddict_type": null}}, "_SelectIterable": {".class": "SymbolTableNode", "kind": "Gdef", "node": {".class": "TypeAlias", "alias_tvars": [], "column": 0, "fullname": "sqlalchemy.sql.selectable._SelectIterable", "line": 186, "no_args": false, "normalized": false, "target": {".class": "Instance", "args": [{".class": "UnionType", "items": [{".class": "Instance", "args": [{".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 6}], "type_ref": "sqlalchemy.sql.elements.ColumnElement"}, "sqlalchemy.sql.elements.TextClause"]}], "type_ref": "typing.Iterable"}}}, "_SelectStatementForCompoundArgument": {".class": "SymbolTableNode", "cross_ref": "sqlalchemy.sql._typing._SelectStatementForCompoundArgument", "kind": "Gdef"}, "_SetupJoinsElement": {".class": "SymbolTableNode", "kind": "Gdef", "node": {".class": "TypeAlias", "alias_tvars": [], "column": 0, "fullname": "sqlalchemy.sql.selectable._SetupJoinsElement", "line": 178, "no_args": false, "normalized": false, "target": {".class": "TupleType", "implicit": false, "items": [{".class": "TypeAliasType", "args": [], "type_ref": "sqlalchemy.sql.selectable._JoinTargetElement"}, {".class": "UnionType", "items": [{".class": "Instance", "args": ["builtins.bool"], "type_ref": "sqlalchemy.sql.elements.ColumnElement"}, "sqlalchemy.sql.selectable._JoinTargetProtocol", {".class": "NoneType"}]}, {".class": "UnionType", "items": ["sqlalchemy.sql.selectable.FromClause", {".class": "NoneType"}]}, {".class": "Instance", "args": ["builtins.str", {".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 6}], "type_ref": "builtins.dict"}], "partial_fallback": {".class": "Instance", "args": [{".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 6}], "type_ref": "builtins.tuple"}}}}, "_T": {".class": "SymbolTableNode", "kind": "Gdef", "node": {".class": "TypeVarExpr", "fullname": "sqlalchemy.sql.selectable._T", "name": "_T", "upper_bound": {".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 2}, "values": [], "variance": 0}}, "_T0": {".class": "SymbolTableNode", "cross_ref": "sqlalchemy.sql._typing._T0", "kind": "Gdef"}, "_T1": {".class": "SymbolTableNode", "cross_ref": "sqlalchemy.sql._typing._T1", "kind": "Gdef"}, "_T2": {".class": "SymbolTableNode", "cross_ref": "sqlalchemy.sql._typing._T2", "kind": "Gdef"}, "_T3": {".class": "SymbolTableNode", "cross_ref": "sqlalchemy.sql._typing._T3", "kind": "Gdef"}, "_T4": {".class": "SymbolTableNode", "cross_ref": "sqlalchemy.sql._typing._T4", "kind": "Gdef"}, "_T5": {".class": "SymbolTableNode", "cross_ref": "sqlalchemy.sql._typing._T5", "kind": "Gdef"}, "_T6": {".class": "SymbolTableNode", "cross_ref": "sqlalchemy.sql._typing._T6", "kind": "Gdef"}, "_T7": {".class": "SymbolTableNode", "cross_ref": "sqlalchemy.sql._typing._T7", "kind": "Gdef"}, "_TCCA": {".class": "SymbolTableNode", "cross_ref": "sqlalchemy.sql._typing._TypedColumnClauseArgument", "kind": "Gdef"}, "_TP": {".class": "SymbolTableNode", "cross_ref": "sqlalchemy.sql._typing._TP", "kind": "Gdef"}, "_TextCoercedExpressionArgument": {".class": "SymbolTableNode", "cross_ref": "sqlalchemy.sql._typing._TextCoercedExpressionArgument", "kind": "Gdef"}, "_TraverseInternalsType": {".class": "SymbolTableNode", "cross_ref": "sqlalchemy.sql.visitors._TraverseInternalsType", "kind": "Gdef"}, "_TypeEngineArgument": {".class": "SymbolTableNode", "cross_ref": "sqlalchemy.sql._typing._TypeEngineArgument", "kind": "Gdef"}, "__doc__": {".class": "SymbolTableNode", "kind": "Gdef", "node": {".class": "Var", "flags": ["is_ready"], "fullname": "sqlalchemy.sql.selectable.__doc__", "name": "__doc__", "type": "builtins.str"}}, "__file__": {".class": "SymbolTableNode", "kind": "Gdef", "node": {".class": "Var", "flags": ["is_ready"], "fullname": "sqlalchemy.sql.selectable.__file__", "name": "__file__", "type": "builtins.str"}}, "__name__": {".class": "SymbolTableNode", "kind": "Gdef", "node": {".class": "Var", "flags": ["is_ready"], "fullname": "sqlalchemy.sql.selectable.__name__", "name": "__name__", "type": "builtins.str"}}, "__package__": {".class": "SymbolTableNode", "kind": "Gdef", "node": {".class": "Var", "flags": ["is_ready"], "fullname": "sqlalchemy.sql.selectable.__package__", "name": "__package__", "type": "builtins.str"}}, "_anonymous_label": {".class": "SymbolTableNode", "cross_ref": "sqlalchemy.sql.elements._anonymous_label", "kind": "Gdef"}, "_clone": {".class": "SymbolTableNode", "cross_ref": "sqlalchemy.sql.base._clone", "kind": "Gdef"}, "_cloned_difference": {".class": "SymbolTableNode", "cross_ref": "sqlalchemy.sql.base._cloned_difference", "kind": "Gdef"}, "_cloned_intersection": {".class": "SymbolTableNode", "cross_ref": "sqlalchemy.sql.base._cloned_intersection", "kind": "Gdef"}, "_document_text_coercion": {".class": "SymbolTableNode", "cross_ref": "sqlalchemy.sql.coercions._document_text_coercion", "kind": "Gdef"}, "_entity_namespace_key": {".class": "SymbolTableNode", "cross_ref": "sqlalchemy.sql.base._entity_namespace_key", "kind": "Gdef"}, "_expand_cloned": {".class": "SymbolTableNode", "cross_ref": "sqlalchemy.sql.base._expand_cloned", "kind": "Gdef"}, "_from_objects": {".class": "SymbolTableNode", "cross_ref": "sqlalchemy.sql.base._from_objects", "kind": "Gdef"}, "_generative": {".class": "SymbolTableNode", "cross_ref": "sqlalchemy.sql.base._generative", "kind": "Gdef"}, "_no_kw": {".class": "SymbolTableNode", "cross_ref": "sqlalchemy.sql._typing._no_kw", "kind": "Gdef"}, "_select_iterables": {".class": "SymbolTableNode", "cross_ref": "sqlalchemy.sql.base._select_iterables", "kind": "Gdef"}, "and_": {".class": "SymbolTableNode", "kind": "Gdef", "node": {".class": "Var", "flags": [], "fullname": "sqlalchemy.sql.selectable.and_", "name": "and_", "type": {".class": "CallableType", "arg_kinds": [1, 2], "arg_names": ["initial_clause", "clauses"], "arg_types": [{".class": "UnionType", "items": [{".class": "LiteralType", "fallback": "builtins.bool", "value": true}, {".class": "TypeAliasType", "args": ["builtins.bool"], "type_ref": "sqlalchemy.sql._typing._ColumnExpressionArgument"}, "sqlalchemy.sql.base._NoArg"]}, {".class": "TypeAliasType", "args": ["builtins.bool"], "type_ref": "sqlalchemy.sql._typing._ColumnExpressionArgument"}], "bound_args": [{".class": "TypeType", "item": "sqlalchemy.sql.elements.BooleanClauseList"}], "def_extras": {"first_arg": "cls"}, "fallback": "builtins.function", "implicit": false, "is_ellipsis_args": false, "name": null, "ret_type": {".class": "Instance", "args": ["builtins.bool"], "type_ref": "sqlalchemy.sql.elements.ColumnElement"}, "variables": []}}}, "annotations": {".class": "SymbolTableNode", "cross_ref": "__future__.annotations", "kind": "Gdef"}, "cache_key": {".class": "SymbolTableNode", "cross_ref": "sqlalchemy.sql.cache_key", "kind": "Gdef"}, "cast": {".class": "SymbolTableNode", "cross_ref": "typing.cast", "kind": "Gdef"}, "coercions": {".class": "SymbolTableNode", "cross_ref": "sqlalchemy.sql.coercions", "kind": "Gdef"}, "collections": {".class": "SymbolTableNode", "cross_ref": "collections", "kind": "Gdef"}, "elem": {".class": "SymbolTableNode", "kind": "Gdef", "node": {".class": "Var", "flags": [], "fullname": "sqlalchemy.sql.selectable.elem", "name": "elem", "type": "sqlalchemy.sql.selectable._CompoundSelectKeyword"}}, "exc": {".class": "SymbolTableNode", "cross_ref": "sqlalchemy.exc", "kind": "Gdef"}, "is_column_element": {".class": "SymbolTableNode", "cross_ref": "sqlalchemy.sql._typing.is_column_element", "kind": "Gdef"}, "is_select_statement": {".class": "SymbolTableNode", "cross_ref": "sqlalchemy.sql._typing.is_select_statement", "kind": "Gdef"}, "is_subquery": {".class": "SymbolTableNode", "cross_ref": "sqlalchemy.sql._typing.is_subquery", "kind": "Gdef"}, "is_table": {".class": "SymbolTableNode", "cross_ref": "sqlalchemy.sql._typing.is_table", "kind": "Gdef"}, "is_text_clause": {".class": "SymbolTableNode", "cross_ref": "sqlalchemy.sql._typing.is_text_clause", "kind": "Gdef"}, "itertools": {".class": "SymbolTableNode", "cross_ref": "itertools", "kind": "Gdef"}, "literal_column": {".class": "SymbolTableNode", "cross_ref": "sqlalchemy.sql.elements.literal_column", "kind": "Gdef"}, "operators": {".class": "SymbolTableNode", "cross_ref": "sqlalchemy.sql.operators", "kind": "Gdef"}, "overload": {".class": "SymbolTableNode", "cross_ref": "typing.overload", "kind": "Gdef"}, "prefix_anon_map": {".class": "SymbolTableNode", "cross_ref": "sqlalchemy.sql._py_util.prefix_anon_map", "kind": "Gdef"}, "roles": {".class": "SymbolTableNode", "cross_ref": "sqlalchemy.sql.roles", "kind": "Gdef"}, "traversals": {".class": "SymbolTableNode", "cross_ref": "sqlalchemy.sql.traversals", "kind": "Gdef"}, "type_api": {".class": "SymbolTableNode", "cross_ref": "sqlalchemy.sql.type_api", "kind": "Gdef"}, "util": {".class": "SymbolTableNode", "cross_ref": "sqlalchemy.util", "kind": "Gdef"}, "visitors": {".class": "SymbolTableNode", "cross_ref": "sqlalchemy.sql.visitors", "kind": "Gdef"}}, "path": "/home/gabriel/.local/lib/python3.8/site-packages/sqlalchemy/sql/selectable.py"}