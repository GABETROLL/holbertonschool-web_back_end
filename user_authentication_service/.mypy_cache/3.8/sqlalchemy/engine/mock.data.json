{".class": "MypyFile", "_fullname": "sqlalchemy.engine.mock", "is_partial_stub_package": false, "is_stub": false, "names": {".class": "SymbolTable", "Any": {".class": "SymbolTableNode", "cross_ref": "typing.Any", "kind": "Gdef"}, "Callable": {".class": "SymbolTableNode", "cross_ref": "typing.Callable", "kind": "Gdef"}, "CoreExecuteOptionsParameter": {".class": "SymbolTableNode", "cross_ref": "sqlalchemy.engine.interfaces.CoreExecuteOptionsParameter", "kind": "Gdef"}, "Dialect": {".class": "SymbolTableNode", "cross_ref": "sqlalchemy.engine.interfaces.Dialect", "kind": "Gdef"}, "Engine": {".class": "SymbolTableNode", "cross_ref": "sqlalchemy.engine.base.Engine", "kind": "Gdef"}, "Executable": {".class": "SymbolTableNode", "cross_ref": "sqlalchemy.sql.base.Executable", "kind": "Gdef"}, "HasSchemaAttr": {".class": "SymbolTableNode", "cross_ref": "sqlalchemy.sql.schema.HasSchemaAttr", "kind": "Gdef"}, "MockConnection": {".class": "SymbolTableNode", "kind": "Gdef", "node": {".class": "TypeInfo", "_promote": null, "abstract_attributes": [], "bases": ["builtins.object"], "declared_metaclass": null, "defn": {".class": "ClassDef", "fullname": "sqlalchemy.engine.mock.MockConnection", "name": "MockConnection", "type_vars": []}, "flags": [], "fullname": "sqlalchemy.engine.mock.MockConnection", "metaclass_type": null, "metadata": {}, "module_name": "sqlalchemy.engine.mock", "mro": ["sqlalchemy.engine.mock.MockConnection", "builtins.object"], "names": {".class": "SymbolTable", "__init__": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "FuncDef", "arg_kinds": [0, 0, 0], "arg_names": ["self", "dialect", "execute"], "flags": [], "fullname": "sqlalchemy.engine.mock.MockConnection.__init__", "name": "__init__", "type": {".class": "CallableType", "arg_kinds": [0, 0, 0], "arg_names": ["self", "dialect", "execute"], "arg_types": ["sqlalchemy.engine.mock.MockConnection", "sqlalchemy.engine.interfaces.Dialect", {".class": "CallableType", "arg_kinds": [2, 4], "arg_names": [null, null], "arg_types": [{".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 2}, {".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 2}], "bound_args": [], "def_extras": {}, "fallback": "builtins.function", "implicit": false, "is_ellipsis_args": true, "name": null, "ret_type": {".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 2}, "variables": []}], "bound_args": [], "def_extras": {"first_arg": "self"}, "fallback": "builtins.function", "implicit": false, "is_ellipsis_args": false, "name": "__init__ of MockConnection", "ret_type": {".class": "NoneType"}, "variables": []}}}, "_dialect": {".class": "SymbolTableNode", "implicit": true, "kind": "Mdef", "node": {".class": "Var", "flags": [], "fullname": "sqlalchemy.engine.mock.MockConnection._dialect", "name": "_dialect", "type": "sqlalchemy.engine.interfaces.Dialect"}}, "_execute_impl": {".class": "SymbolTableNode", "implicit": true, "kind": "Mdef", "node": {".class": "Var", "flags": [], "fullname": "sqlalchemy.engine.mock.MockConnection._execute_impl", "name": "_execute_impl", "type": {".class": "CallableType", "arg_kinds": [2, 4], "arg_names": [null, null], "arg_types": [{".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 2}, {".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 2}], "bound_args": [], "def_extras": {}, "fallback": "builtins.function", "implicit": false, "is_ellipsis_args": true, "name": null, "ret_type": {".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 2}, "variables": []}}}, "_run_ddl_visitor": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "FuncDef", "arg_kinds": [0, 0, 0, 4], "arg_names": ["self", "visitorcallable", "element", "kwargs"], "flags": [], "fullname": "sqlalchemy.engine.mock.MockConnection._run_ddl_visitor", "name": "_run_ddl_visitor", "type": {".class": "CallableType", "arg_kinds": [0, 0, 0, 4], "arg_names": ["self", "visitorcallable", "element", "kwargs"], "arg_types": ["sqlalchemy.engine.mock.MockConnection", {".class": "UnionType", "items": [{".class": "TypeType", "item": "sqlalchemy.sql.ddl.SchemaGenerator"}, {".class": "TypeType", "item": "sqlalchemy.sql.ddl.SchemaDropper"}]}, "sqlalchemy.sql.schema.SchemaItem", {".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 2}], "bound_args": [], "def_extras": {"first_arg": "self"}, "fallback": "builtins.function", "implicit": false, "is_ellipsis_args": false, "name": "_run_ddl_visitor of MockConnection", "ret_type": {".class": "NoneType"}, "variables": []}}}, "connect": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "FuncDef", "arg_kinds": [0, 4], "arg_names": ["self", "kwargs"], "flags": [], "fullname": "sqlalchemy.engine.mock.MockConnection.connect", "name": "connect", "type": {".class": "CallableType", "arg_kinds": [0, 4], "arg_names": ["self", "kwargs"], "arg_types": ["sqlalchemy.engine.mock.MockConnection", {".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 2}], "bound_args": [], "def_extras": {"first_arg": "self"}, "fallback": "builtins.function", "implicit": false, "is_ellipsis_args": false, "name": "connect of MockConnection", "ret_type": "sqlalchemy.engine.mock.MockConnection", "variables": []}}}, "dialect": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "Var", "flags": ["is_initialized_in_class", "is_ready"], "fullname": "sqlalchemy.engine.mock.MockConnection.dialect", "name": "dialect", "type": "sqlalchemy.engine.interfaces.Dialect"}}, "engine": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "Var", "flags": ["is_initialized_in_class", "is_ready"], "fullname": "sqlalchemy.engine.mock.MockConnection.engine", "name": "engine", "type": "sqlalchemy.engine.base.Engine"}}, "execute": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "FuncDef", "arg_kinds": [0, 0, 1, 1], "arg_names": ["self", "obj", "parameters", "execution_options"], "flags": [], "fullname": "sqlalchemy.engine.mock.MockConnection.execute", "name": "execute", "type": {".class": "CallableType", "arg_kinds": [0, 0, 1, 1], "arg_names": ["self", "obj", "parameters", "execution_options"], "arg_types": ["sqlalchemy.engine.mock.MockConnection", "sqlalchemy.sql.base.Executable", {".class": "UnionType", "items": [{".class": "Instance", "args": [{".class": "TypeAliasType", "args": [], "type_ref": "sqlalchemy.engine.interfaces._CoreSingleExecuteParams"}], "type_ref": "typing.Sequence"}, {".class": "Instance", "args": ["builtins.str", {".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 6}], "type_ref": "typing.Mapping"}, {".class": "NoneType"}]}, {".class": "UnionType", "items": [{".class": "TypedDictType", "fallback": "sqlalchemy.engine.interfaces._CoreKnownExecutionOptions", "items": [["compiled_cache", {".class": "UnionType", "items": [{".class": "Instance", "args": [{".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 6}, "sqlalchemy.sql.compiler.Compiled"], "type_ref": "typing.MutableMapping"}, {".class": "NoneType"}]}], ["logging_token", "builtins.str"], ["isolation_level", {".class": "TypeAliasType", "args": [], "type_ref": "sqlalchemy.engine.interfaces.IsolationLevel"}], ["no_parameters", "builtins.bool"], ["stream_results", "builtins.bool"], ["max_row_buffer", "builtins.int"], ["yield_per", "builtins.int"], ["insertmanyvalues_page_size", "builtins.int"], ["schema_translate_map", {".class": "UnionType", "items": [{".class": "Instance", "args": [{".class": "UnionType", "items": ["builtins.str", {".class": "NoneType"}]}, {".class": "UnionType", "items": ["builtins.str", {".class": "NoneType"}]}], "type_ref": "typing.Mapping"}, {".class": "NoneType"}]}]], "required_keys": []}, {".class": "Instance", "args": ["builtins.str", {".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 6}], "type_ref": "typing.Mapping"}, {".class": "NoneType"}]}], "bound_args": [], "def_extras": {"first_arg": "self"}, "fallback": "builtins.function", "implicit": false, "is_ellipsis_args": false, "name": "execute of MockConnection", "ret_type": {".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 2}, "variables": []}}}, "execution_options": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "FuncDef", "arg_kinds": [0, 4], "arg_names": ["self", "kw"], "flags": [], "fullname": "sqlalchemy.engine.mock.MockConnection.execution_options", "name": "execution_options", "type": {".class": "CallableType", "arg_kinds": [0, 4], "arg_names": ["self", "kw"], "arg_types": ["sqlalchemy.engine.mock.MockConnection", {".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 2}], "bound_args": [], "def_extras": {"first_arg": "self"}, "fallback": "builtins.function", "implicit": false, "is_ellipsis_args": false, "name": "execution_options of MockConnection", "ret_type": "sqlalchemy.engine.mock.MockConnection", "variables": []}}}, "name": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "Var", "flags": ["is_initialized_in_class", "is_ready"], "fullname": "sqlalchemy.engine.mock.MockConnection.name", "name": "name", "type": "builtins.str"}}, "schema_for_object": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "FuncDef", "arg_kinds": [0, 0], "arg_names": ["self", "obj"], "flags": [], "fullname": "sqlalchemy.engine.mock.MockConnection.schema_for_object", "name": "schema_for_object", "type": {".class": "CallableType", "arg_kinds": [0, 0], "arg_names": ["self", "obj"], "arg_types": ["sqlalchemy.engine.mock.MockConnection", "sqlalchemy.sql.schema.HasSchemaAttr"], "bound_args": [], "def_extras": {"first_arg": "self"}, "fallback": "builtins.function", "implicit": false, "is_ellipsis_args": false, "name": "schema_for_object of MockConnection", "ret_type": {".class": "UnionType", "items": ["builtins.str", {".class": "NoneType"}]}, "variables": []}}}}, "tuple_type": null, "type_vars": [], "typeddict_type": null}}, "Optional": {".class": "SymbolTableNode", "cross_ref": "typing.Optional", "kind": "Gdef"}, "SchemaDropper": {".class": "SymbolTableNode", "cross_ref": "sqlalchemy.sql.ddl.SchemaDropper", "kind": "Gdef"}, "SchemaGenerator": {".class": "SymbolTableNode", "cross_ref": "sqlalchemy.sql.ddl.SchemaGenerator", "kind": "Gdef"}, "SchemaItem": {".class": "SymbolTableNode", "cross_ref": "sqlalchemy.sql.schema.SchemaItem", "kind": "Gdef"}, "Type": {".class": "SymbolTableNode", "cross_ref": "typing.Type", "kind": "Gdef"}, "URL": {".class": "SymbolTableNode", "cross_ref": "sqlalchemy.engine.url.URL", "kind": "Gdef"}, "Union": {".class": "SymbolTableNode", "cross_ref": "typing.Union", "kind": "Gdef"}, "_CoreAnyExecuteParams": {".class": "SymbolTableNode", "cross_ref": "sqlalchemy.engine.interfaces._CoreAnyExecuteParams", "kind": "Gdef"}, "__doc__": {".class": "SymbolTableNode", "kind": "Gdef", "node": {".class": "Var", "flags": ["is_ready"], "fullname": "sqlalchemy.engine.mock.__doc__", "name": "__doc__", "type": "builtins.str"}}, "__file__": {".class": "SymbolTableNode", "kind": "Gdef", "node": {".class": "Var", "flags": ["is_ready"], "fullname": "sqlalchemy.engine.mock.__file__", "name": "__file__", "type": "builtins.str"}}, "__name__": {".class": "SymbolTableNode", "kind": "Gdef", "node": {".class": "Var", "flags": ["is_ready"], "fullname": "sqlalchemy.engine.mock.__name__", "name": "__name__", "type": "builtins.str"}}, "__package__": {".class": "SymbolTableNode", "kind": "Gdef", "node": {".class": "Var", "flags": ["is_ready"], "fullname": "sqlalchemy.engine.mock.__package__", "name": "__package__", "type": "builtins.str"}}, "_url": {".class": "SymbolTableNode", "cross_ref": "sqlalchemy.engine.url", "kind": "Gdef"}, "annotations": {".class": "SymbolTableNode", "cross_ref": "__future__.annotations", "kind": "Gdef"}, "attrgetter": {".class": "SymbolTableNode", "cross_ref": "operator.attrgetter", "kind": "Gdef"}, "cast": {".class": "SymbolTableNode", "cross_ref": "typing.cast", "kind": "Gdef"}, "create_mock_engine": {".class": "SymbolTableNode", "kind": "Gdef", "node": {".class": "FuncDef", "arg_kinds": [0, 0, 4], "arg_names": ["url", "executor", "kw"], "flags": [], "fullname": "sqlalchemy.engine.mock.create_mock_engine", "name": "create_mock_engine", "type": {".class": "CallableType", "arg_kinds": [0, 0, 4], "arg_names": ["url", "executor", "kw"], "arg_types": [{".class": "TupleType", "implicit": false, "items": ["builtins.str", {".class": "UnionType", "items": ["builtins.str", {".class": "NoneType"}]}, {".class": "UnionType", "items": ["builtins.str", {".class": "NoneType"}]}, {".class": "UnionType", "items": ["builtins.str", {".class": "NoneType"}]}, {".class": "UnionType", "items": ["builtins.int", {".class": "NoneType"}]}, {".class": "UnionType", "items": ["builtins.str", {".class": "NoneType"}]}, {".class": "Instance", "args": ["builtins.str", {".class": "UnionType", "items": [{".class": "Instance", "args": ["builtins.str"], "type_ref": "builtins.tuple"}, "builtins.str"]}], "type_ref": "sqlalchemy.util._py_collections.immutabledict"}], "partial_fallback": "sqlalchemy.engine.url.URL"}, {".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 2}, {".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 2}], "bound_args": [], "def_extras": {"first_arg": null}, "fallback": "builtins.function", "implicit": false, "is_ellipsis_args": false, "name": "create_mock_engine", "ret_type": "sqlalchemy.engine.mock.MockConnection", "variables": []}}}, "typing": {".class": "SymbolTableNode", "cross_ref": "typing", "kind": "Gdef"}, "util": {".class": "SymbolTableNode", "cross_ref": "sqlalchemy.util", "kind": "Gdef"}}, "path": "/home/gabriel/.local/lib/python3.8/site-packages/sqlalchemy/engine/mock.py"}